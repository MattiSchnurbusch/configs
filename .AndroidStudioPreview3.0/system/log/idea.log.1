2017-08-16 16:14:39,283 [ pool 2/12]  ERROR - aemon.impl.PassExecutorService - Android Studio 3.0 Canary 9  Build #AI-171.4220116 
2017-08-16 16:14:39,283 [ pool 2/12]  ERROR - aemon.impl.PassExecutorService - JDK: 1.8.0_152-release 
2017-08-16 16:14:39,283 [ pool 2/12]  ERROR - aemon.impl.PassExecutorService - VM: OpenJDK 64-Bit Server VM 
2017-08-16 16:14:39,283 [ pool 2/12]  ERROR - aemon.impl.PassExecutorService - Vendor: JetBrains s.r.o 
2017-08-16 16:14:39,283 [ pool 2/12]  ERROR - aemon.impl.PassExecutorService - OS: Linux 
2017-08-16 16:14:39,283 [ pool 2/12]  ERROR - aemon.impl.PassExecutorService - Last Action: EditorUp 
2017-08-16 16:14:39,283 [ pool 2/12]  ERROR - aemon.impl.PassExecutorService - Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-
 
org.jetbrains.kotlin.resolve.lazy.NoDescriptorForDeclarationException: Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-

	at org.jetbrains.kotlin.idea.project.IdeaAbsentDescriptorHandler.diagnoseDescriptorNotFound(IdeaLocalDescriptorResolver.kt:44)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionFacadeImpl.resolveToDescriptor(ResolutionFacadeImpl.kt:67)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionUtils.resolveToDescriptor(resolutionApi.kt:42)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.getBundleNameByContext(referenceProviders.kt:67)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.access$getBundleNameByContext(referenceProviders.kt:1)
	at org.jetbrains.kotlin.idea.properties.KotlinPropertyKeyReferenceProvider.getReferencesByElement(referenceProviders.kt:132)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.getReferences(ReferenceProvidersRegistryImpl.java:135)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.mapNotEmptyReferencesFromProviders(ReferenceProvidersRegistryImpl.java:123)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.doGetReferencesFromProviders(ReferenceProvidersRegistryImpl.java:102)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistry.getReferencesFromProviders(ReferenceProvidersRegistry.java:66)
	at org.jetbrains.kotlin.psi.KtElementImpl.getReferences(KtElementImpl.java:91)
	at org.jetbrains.kotlin.idea.inspections.KotlinInvalidBundleOrPropertyInspection$buildVisitor$1.visitStringTemplateExpression(KotlinInvalidBundleOrPropertyInspection.kt:95)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitStringTemplateExpression(KtVisitorVoid.java:953)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitStringTemplateExpression(KtVisitorVoid.java:21)
	at org.jetbrains.kotlin.psi.KtStringTemplateExpression.accept(KtStringTemplateExpression.java:37)
	at org.jetbrains.kotlin.psi.KtElementImpl.accept(KtElementImpl.java:50)
	at com.intellij.codeInspection.InspectionEngine.acceptElements(InspectionEngine.java:81)
	at com.intellij.codeInspection.InspectionEngine.createVisitorAndAcceptElements(InspectionEngine.java:69)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.runToolOnElements(LocalInspectionsPass.java:282)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.lambda$visitPriorityElementsAndInit$3(LocalInspectionsPass.java:250)
	at com.intellij.concurrency.ApplierCompleter.execAndForkSubTasks(ApplierCompleter.java:133)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1150)
	at com.intellij.concurrency.ApplierCompleter.lambda$wrapInReadActionAndIndicator$1(ApplierCompleter.java:105)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.concurrency.ApplierCompleter.wrapInReadActionAndIndicator(ApplierCompleter.java:116)
	at com.intellij.concurrency.ApplierCompleter.lambda$compute$0(ApplierCompleter.java:96)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)
	at com.intellij.concurrency.ApplierCompleter.compute(ApplierCompleter.java:96)
	at java.util.concurrent.CountedCompleter.exec(CountedCompleter.java:731)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.pollAndExecCC(ForkJoinPool.java:1190)
	at java.util.concurrent.ForkJoinPool.helpComplete(ForkJoinPool.java:1879)
	at java.util.concurrent.ForkJoinPool.awaitJoin(ForkJoinPool.java:2045)
	at java.util.concurrent.ForkJoinTask.doJoin(ForkJoinTask.java:390)
	at java.util.concurrent.ForkJoinTask.join(ForkJoinTask.java:719)
	at java.util.concurrent.ForkJoinPool.invoke(ForkJoinPool.java:2616)
	at com.intellij.concurrency.JobLauncherImpl.invokeConcurrentlyUnderProgress(JobLauncherImpl.java:63)
	at com.intellij.concurrency.JobLauncher.invokeConcurrentlyUnderProgress(JobLauncher.java:57)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.visitPriorityElementsAndInit(LocalInspectionsPass.java:253)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.inspect(LocalInspectionsPass.java:223)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.collectInformationWithProgress(LocalInspectionsPass.java:132)
	at com.intellij.codeInsight.daemon.impl.ProgressableTextEditorHighlightingPass.doCollectInformation(ProgressableTextEditorHighlightingPass.java:83)
	at com.intellij.codeHighlighting.TextEditorHighlightingPass.collectInformation(TextEditorHighlightingPass.java:70)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$null$1(PassExecutorService.java:438)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1156)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$doRun$2(PassExecutorService.java:431)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.doRun(PassExecutorService.java:430)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$run$0(PassExecutorService.java:406)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.run(PassExecutorService.java:404)
	at com.intellij.concurrency.JobLauncherImpl$VoidForkJoinTask$1.exec(JobLauncherImpl.java:165)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
2017-08-16 16:14:39,283 [ pool 2/12]  ERROR - aemon.impl.PassExecutorService - Android Studio 3.0 Canary 9  Build #AI-171.4220116 
2017-08-16 16:14:39,283 [ pool 2/12]  ERROR - aemon.impl.PassExecutorService - JDK: 1.8.0_152-release 
2017-08-16 16:14:39,283 [ pool 2/12]  ERROR - aemon.impl.PassExecutorService - VM: OpenJDK 64-Bit Server VM 
2017-08-16 16:14:39,283 [ pool 2/12]  ERROR - aemon.impl.PassExecutorService - Vendor: JetBrains s.r.o 
2017-08-16 16:14:39,283 [ pool 2/12]  ERROR - aemon.impl.PassExecutorService - OS: Linux 
2017-08-16 16:14:39,283 [ pool 2/12]  ERROR - aemon.impl.PassExecutorService - Last Action: EditorUp 
2017-08-16 16:14:40,085 [ pool 8/12]  ERROR - aemon.impl.PassExecutorService - Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-
 
org.jetbrains.kotlin.resolve.lazy.NoDescriptorForDeclarationException: Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-

	at org.jetbrains.kotlin.idea.project.IdeaAbsentDescriptorHandler.diagnoseDescriptorNotFound(IdeaLocalDescriptorResolver.kt:44)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionFacadeImpl.resolveToDescriptor(ResolutionFacadeImpl.kt:67)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionUtils.resolveToDescriptor(resolutionApi.kt:42)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.getBundleNameByContext(referenceProviders.kt:67)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.access$getBundleNameByContext(referenceProviders.kt:1)
	at org.jetbrains.kotlin.idea.properties.KotlinPropertyKeyReferenceProvider.getReferencesByElement(referenceProviders.kt:132)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.getReferences(ReferenceProvidersRegistryImpl.java:135)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.mapNotEmptyReferencesFromProviders(ReferenceProvidersRegistryImpl.java:123)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.doGetReferencesFromProviders(ReferenceProvidersRegistryImpl.java:102)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistry.getReferencesFromProviders(ReferenceProvidersRegistry.java:66)
	at org.jetbrains.kotlin.psi.KtElementImpl.getReferences(KtElementImpl.java:91)
	at org.intellij.plugins.intelliLang.references.InjectedReferencesContributor.getInjectedReferences(InjectedReferencesContributor.java:56)
	at org.intellij.plugins.intelliLang.references.InjectedReferencesInspection$1.visitElement(InjectedReferencesInspection.java:40)
	at org.jetbrains.kotlin.psi.KtElementImpl.accept(KtElementImpl.java:53)
	at com.intellij.codeInspection.InspectionEngine.acceptElements(InspectionEngine.java:81)
	at com.intellij.codeInspection.InspectionEngine.createVisitorAndAcceptElements(InspectionEngine.java:69)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.runToolOnElements(LocalInspectionsPass.java:282)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.lambda$visitPriorityElementsAndInit$3(LocalInspectionsPass.java:250)
	at com.intellij.concurrency.ApplierCompleter.execAndForkSubTasks(ApplierCompleter.java:133)
	at com.intellij.concurrency.ApplierCompleter.tryToExecAllList(ApplierCompleter.java:222)
	at com.intellij.concurrency.ApplierCompleter.execAndForkSubTasks(ApplierCompleter.java:151)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1150)
	at com.intellij.concurrency.ApplierCompleter.lambda$wrapInReadActionAndIndicator$1(ApplierCompleter.java:105)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.concurrency.ApplierCompleter.wrapInReadActionAndIndicator(ApplierCompleter.java:116)
	at com.intellij.concurrency.ApplierCompleter.lambda$compute$0(ApplierCompleter.java:96)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)
	at com.intellij.concurrency.ApplierCompleter.compute(ApplierCompleter.java:96)
	at java.util.concurrent.CountedCompleter.exec(CountedCompleter.java:731)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.pollAndExecCC(ForkJoinPool.java:1190)
	at java.util.concurrent.ForkJoinPool.helpComplete(ForkJoinPool.java:1879)
	at java.util.concurrent.ForkJoinPool.awaitJoin(ForkJoinPool.java:2045)
	at java.util.concurrent.ForkJoinTask.doJoin(ForkJoinTask.java:390)
	at java.util.concurrent.ForkJoinTask.join(ForkJoinTask.java:719)
	at java.util.concurrent.ForkJoinPool.invoke(ForkJoinPool.java:2616)
	at com.intellij.concurrency.JobLauncherImpl.invokeConcurrentlyUnderProgress(JobLauncherImpl.java:63)
	at com.intellij.concurrency.JobLauncher.invokeConcurrentlyUnderProgress(JobLauncher.java:57)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.visitPriorityElementsAndInit(LocalInspectionsPass.java:253)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.inspect(LocalInspectionsPass.java:223)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.collectInformationWithProgress(LocalInspectionsPass.java:132)
	at com.intellij.codeInsight.daemon.impl.ProgressableTextEditorHighlightingPass.doCollectInformation(ProgressableTextEditorHighlightingPass.java:83)
	at com.intellij.codeHighlighting.TextEditorHighlightingPass.collectInformation(TextEditorHighlightingPass.java:70)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$null$1(PassExecutorService.java:438)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1156)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$doRun$2(PassExecutorService.java:431)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.doRun(PassExecutorService.java:430)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$run$0(PassExecutorService.java:406)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.run(PassExecutorService.java:404)
	at com.intellij.concurrency.JobLauncherImpl$VoidForkJoinTask$1.exec(JobLauncherImpl.java:165)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
2017-08-16 16:14:40,086 [ pool 8/12]  ERROR - aemon.impl.PassExecutorService - Android Studio 3.0 Canary 9  Build #AI-171.4220116 
2017-08-16 16:14:40,086 [ pool 8/12]  ERROR - aemon.impl.PassExecutorService - JDK: 1.8.0_152-release 
2017-08-16 16:14:40,086 [ pool 8/12]  ERROR - aemon.impl.PassExecutorService - VM: OpenJDK 64-Bit Server VM 
2017-08-16 16:14:40,086 [ pool 8/12]  ERROR - aemon.impl.PassExecutorService - Vendor: JetBrains s.r.o 
2017-08-16 16:14:40,086 [ pool 8/12]  ERROR - aemon.impl.PassExecutorService - OS: Linux 
2017-08-16 16:14:40,086 [ pool 8/12]  ERROR - aemon.impl.PassExecutorService - Last Action: EditorDeleteLine 
2017-08-16 16:14:40,086 [ pool 8/12]  ERROR - aemon.impl.PassExecutorService - Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-
 
org.jetbrains.kotlin.resolve.lazy.NoDescriptorForDeclarationException: Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-

	at org.jetbrains.kotlin.idea.project.IdeaAbsentDescriptorHandler.diagnoseDescriptorNotFound(IdeaLocalDescriptorResolver.kt:44)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionFacadeImpl.resolveToDescriptor(ResolutionFacadeImpl.kt:67)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionUtils.resolveToDescriptor(resolutionApi.kt:42)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.getBundleNameByContext(referenceProviders.kt:67)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.access$getBundleNameByContext(referenceProviders.kt:1)
	at org.jetbrains.kotlin.idea.properties.KotlinPropertyKeyReferenceProvider.getReferencesByElement(referenceProviders.kt:132)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.getReferences(ReferenceProvidersRegistryImpl.java:135)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.mapNotEmptyReferencesFromProviders(ReferenceProvidersRegistryImpl.java:123)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.doGetReferencesFromProviders(ReferenceProvidersRegistryImpl.java:102)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistry.getReferencesFromProviders(ReferenceProvidersRegistry.java:66)
	at org.jetbrains.kotlin.psi.KtElementImpl.getReferences(KtElementImpl.java:91)
	at org.intellij.plugins.intelliLang.references.InjectedReferencesContributor.getInjectedReferences(InjectedReferencesContributor.java:56)
	at org.intellij.plugins.intelliLang.references.InjectedReferencesInspection$1.visitElement(InjectedReferencesInspection.java:40)
	at org.jetbrains.kotlin.psi.KtElementImpl.accept(KtElementImpl.java:53)
	at com.intellij.codeInspection.InspectionEngine.acceptElements(InspectionEngine.java:81)
	at com.intellij.codeInspection.InspectionEngine.createVisitorAndAcceptElements(InspectionEngine.java:69)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.runToolOnElements(LocalInspectionsPass.java:282)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.lambda$visitPriorityElementsAndInit$3(LocalInspectionsPass.java:250)
	at com.intellij.concurrency.ApplierCompleter.execAndForkSubTasks(ApplierCompleter.java:133)
	at com.intellij.concurrency.ApplierCompleter.tryToExecAllList(ApplierCompleter.java:222)
	at com.intellij.concurrency.ApplierCompleter.execAndForkSubTasks(ApplierCompleter.java:151)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1150)
	at com.intellij.concurrency.ApplierCompleter.lambda$wrapInReadActionAndIndicator$1(ApplierCompleter.java:105)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.concurrency.ApplierCompleter.wrapInReadActionAndIndicator(ApplierCompleter.java:116)
	at com.intellij.concurrency.ApplierCompleter.lambda$compute$0(ApplierCompleter.java:96)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)
	at com.intellij.concurrency.ApplierCompleter.compute(ApplierCompleter.java:96)
	at java.util.concurrent.CountedCompleter.exec(CountedCompleter.java:731)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.pollAndExecCC(ForkJoinPool.java:1190)
	at java.util.concurrent.ForkJoinPool.helpComplete(ForkJoinPool.java:1879)
	at java.util.concurrent.ForkJoinPool.awaitJoin(ForkJoinPool.java:2045)
	at java.util.concurrent.ForkJoinTask.doJoin(ForkJoinTask.java:390)
	at java.util.concurrent.ForkJoinTask.join(ForkJoinTask.java:719)
	at java.util.concurrent.ForkJoinPool.invoke(ForkJoinPool.java:2616)
	at com.intellij.concurrency.JobLauncherImpl.invokeConcurrentlyUnderProgress(JobLauncherImpl.java:63)
	at com.intellij.concurrency.JobLauncher.invokeConcurrentlyUnderProgress(JobLauncher.java:57)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.visitPriorityElementsAndInit(LocalInspectionsPass.java:253)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.inspect(LocalInspectionsPass.java:223)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.collectInformationWithProgress(LocalInspectionsPass.java:132)
	at com.intellij.codeInsight.daemon.impl.ProgressableTextEditorHighlightingPass.doCollectInformation(ProgressableTextEditorHighlightingPass.java:83)
	at com.intellij.codeHighlighting.TextEditorHighlightingPass.collectInformation(TextEditorHighlightingPass.java:70)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$null$1(PassExecutorService.java:438)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1156)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$doRun$2(PassExecutorService.java:431)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.doRun(PassExecutorService.java:430)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$run$0(PassExecutorService.java:406)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.run(PassExecutorService.java:404)
	at com.intellij.concurrency.JobLauncherImpl$VoidForkJoinTask$1.exec(JobLauncherImpl.java:165)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
2017-08-16 16:14:40,086 [ pool 8/12]  ERROR - aemon.impl.PassExecutorService - Android Studio 3.0 Canary 9  Build #AI-171.4220116 
2017-08-16 16:14:40,086 [ pool 8/12]  ERROR - aemon.impl.PassExecutorService - JDK: 1.8.0_152-release 
2017-08-16 16:14:40,086 [ pool 8/12]  ERROR - aemon.impl.PassExecutorService - VM: OpenJDK 64-Bit Server VM 
2017-08-16 16:14:40,086 [ pool 8/12]  ERROR - aemon.impl.PassExecutorService - Vendor: JetBrains s.r.o 
2017-08-16 16:14:40,086 [ pool 8/12]  ERROR - aemon.impl.PassExecutorService - OS: Linux 
2017-08-16 16:14:40,086 [ pool 8/12]  ERROR - aemon.impl.PassExecutorService - Last Action: EditorDeleteLine 
2017-08-16 16:14:40,540 [ pool 7/12]  ERROR - aemon.impl.PassExecutorService - Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-
 
org.jetbrains.kotlin.resolve.lazy.NoDescriptorForDeclarationException: Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-

	at org.jetbrains.kotlin.idea.project.IdeaAbsentDescriptorHandler.diagnoseDescriptorNotFound(IdeaLocalDescriptorResolver.kt:44)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionFacadeImpl.resolveToDescriptor(ResolutionFacadeImpl.kt:67)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionUtils.resolveToDescriptor(resolutionApi.kt:42)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.getBundleNameByContext(referenceProviders.kt:67)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.access$getBundleNameByContext(referenceProviders.kt:1)
	at org.jetbrains.kotlin.idea.properties.KotlinPropertyKeyReferenceProvider.getReferencesByElement(referenceProviders.kt:132)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.getReferences(ReferenceProvidersRegistryImpl.java:135)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.mapNotEmptyReferencesFromProviders(ReferenceProvidersRegistryImpl.java:123)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.doGetReferencesFromProviders(ReferenceProvidersRegistryImpl.java:102)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistry.getReferencesFromProviders(ReferenceProvidersRegistry.java:66)
	at org.jetbrains.kotlin.psi.KtElementImpl.getReferences(KtElementImpl.java:91)
	at org.intellij.plugins.intelliLang.references.InjectedReferencesContributor.getInjectedReferences(InjectedReferencesContributor.java:56)
	at org.intellij.plugins.intelliLang.references.InjectedReferencesInspection$1.visitElement(InjectedReferencesInspection.java:40)
	at org.jetbrains.kotlin.psi.KtElementImpl.accept(KtElementImpl.java:53)
	at com.intellij.codeInspection.InspectionEngine.acceptElements(InspectionEngine.java:81)
	at com.intellij.codeInspection.InspectionEngine.createVisitorAndAcceptElements(InspectionEngine.java:69)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.runToolOnElements(LocalInspectionsPass.java:282)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.lambda$visitPriorityElementsAndInit$3(LocalInspectionsPass.java:250)
	at com.intellij.concurrency.ApplierCompleter.execAndForkSubTasks(ApplierCompleter.java:133)
	at com.intellij.concurrency.ApplierCompleter.tryToExecAllList(ApplierCompleter.java:222)
	at com.intellij.concurrency.ApplierCompleter.execAndForkSubTasks(ApplierCompleter.java:151)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1150)
	at com.intellij.concurrency.ApplierCompleter.lambda$wrapInReadActionAndIndicator$1(ApplierCompleter.java:105)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.concurrency.ApplierCompleter.wrapInReadActionAndIndicator(ApplierCompleter.java:116)
	at com.intellij.concurrency.ApplierCompleter.lambda$compute$0(ApplierCompleter.java:96)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)
	at com.intellij.concurrency.ApplierCompleter.compute(ApplierCompleter.java:96)
	at java.util.concurrent.CountedCompleter.exec(CountedCompleter.java:731)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.pollAndExecCC(ForkJoinPool.java:1190)
	at java.util.concurrent.ForkJoinPool.helpComplete(ForkJoinPool.java:1879)
	at java.util.concurrent.ForkJoinPool.awaitJoin(ForkJoinPool.java:2045)
	at java.util.concurrent.ForkJoinTask.doJoin(ForkJoinTask.java:390)
	at java.util.concurrent.ForkJoinTask.join(ForkJoinTask.java:719)
	at java.util.concurrent.ForkJoinPool.invoke(ForkJoinPool.java:2616)
	at com.intellij.concurrency.JobLauncherImpl.invokeConcurrentlyUnderProgress(JobLauncherImpl.java:63)
	at com.intellij.concurrency.JobLauncher.invokeConcurrentlyUnderProgress(JobLauncher.java:57)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.visitPriorityElementsAndInit(LocalInspectionsPass.java:253)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.inspect(LocalInspectionsPass.java:223)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.collectInformationWithProgress(LocalInspectionsPass.java:132)
	at com.intellij.codeInsight.daemon.impl.ProgressableTextEditorHighlightingPass.doCollectInformation(ProgressableTextEditorHighlightingPass.java:83)
	at com.intellij.codeHighlighting.TextEditorHighlightingPass.collectInformation(TextEditorHighlightingPass.java:70)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$null$1(PassExecutorService.java:438)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1156)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$doRun$2(PassExecutorService.java:431)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.doRun(PassExecutorService.java:430)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$run$0(PassExecutorService.java:406)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.run(PassExecutorService.java:404)
	at com.intellij.concurrency.JobLauncherImpl$VoidForkJoinTask$1.exec(JobLauncherImpl.java:165)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
2017-08-16 16:14:40,541 [ pool 7/12]  ERROR - aemon.impl.PassExecutorService - Android Studio 3.0 Canary 9  Build #AI-171.4220116 
2017-08-16 16:14:40,541 [ pool 7/12]  ERROR - aemon.impl.PassExecutorService - JDK: 1.8.0_152-release 
2017-08-16 16:14:40,541 [ pool 7/12]  ERROR - aemon.impl.PassExecutorService - VM: OpenJDK 64-Bit Server VM 
2017-08-16 16:14:40,541 [ pool 7/12]  ERROR - aemon.impl.PassExecutorService - Vendor: JetBrains s.r.o 
2017-08-16 16:14:40,541 [ pool 7/12]  ERROR - aemon.impl.PassExecutorService - OS: Linux 
2017-08-16 16:14:40,541 [ pool 7/12]  ERROR - aemon.impl.PassExecutorService - Last Action: EditorLeft 
2017-08-16 16:14:40,541 [ pool 7/12]  ERROR - aemon.impl.PassExecutorService - Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-
 
org.jetbrains.kotlin.resolve.lazy.NoDescriptorForDeclarationException: Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-

	at org.jetbrains.kotlin.idea.project.IdeaAbsentDescriptorHandler.diagnoseDescriptorNotFound(IdeaLocalDescriptorResolver.kt:44)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionFacadeImpl.resolveToDescriptor(ResolutionFacadeImpl.kt:67)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionUtils.resolveToDescriptor(resolutionApi.kt:42)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.getBundleNameByContext(referenceProviders.kt:67)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.access$getBundleNameByContext(referenceProviders.kt:1)
	at org.jetbrains.kotlin.idea.properties.KotlinPropertyKeyReferenceProvider.getReferencesByElement(referenceProviders.kt:132)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.getReferences(ReferenceProvidersRegistryImpl.java:135)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.mapNotEmptyReferencesFromProviders(ReferenceProvidersRegistryImpl.java:123)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.doGetReferencesFromProviders(ReferenceProvidersRegistryImpl.java:102)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistry.getReferencesFromProviders(ReferenceProvidersRegistry.java:66)
	at org.jetbrains.kotlin.psi.KtElementImpl.getReferences(KtElementImpl.java:91)
	at org.intellij.plugins.intelliLang.references.InjectedReferencesContributor.getInjectedReferences(InjectedReferencesContributor.java:56)
	at org.intellij.plugins.intelliLang.references.InjectedReferencesInspection$1.visitElement(InjectedReferencesInspection.java:40)
	at org.jetbrains.kotlin.psi.KtElementImpl.accept(KtElementImpl.java:53)
	at com.intellij.codeInspection.InspectionEngine.acceptElements(InspectionEngine.java:81)
	at com.intellij.codeInspection.InspectionEngine.createVisitorAndAcceptElements(InspectionEngine.java:69)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.runToolOnElements(LocalInspectionsPass.java:282)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.lambda$visitPriorityElementsAndInit$3(LocalInspectionsPass.java:250)
	at com.intellij.concurrency.ApplierCompleter.execAndForkSubTasks(ApplierCompleter.java:133)
	at com.intellij.concurrency.ApplierCompleter.tryToExecAllList(ApplierCompleter.java:222)
	at com.intellij.concurrency.ApplierCompleter.execAndForkSubTasks(ApplierCompleter.java:151)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1150)
	at com.intellij.concurrency.ApplierCompleter.lambda$wrapInReadActionAndIndicator$1(ApplierCompleter.java:105)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.concurrency.ApplierCompleter.wrapInReadActionAndIndicator(ApplierCompleter.java:116)
	at com.intellij.concurrency.ApplierCompleter.lambda$compute$0(ApplierCompleter.java:96)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)
	at com.intellij.concurrency.ApplierCompleter.compute(ApplierCompleter.java:96)
	at java.util.concurrent.CountedCompleter.exec(CountedCompleter.java:731)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.pollAndExecCC(ForkJoinPool.java:1190)
	at java.util.concurrent.ForkJoinPool.helpComplete(ForkJoinPool.java:1879)
	at java.util.concurrent.ForkJoinPool.awaitJoin(ForkJoinPool.java:2045)
	at java.util.concurrent.ForkJoinTask.doJoin(ForkJoinTask.java:390)
	at java.util.concurrent.ForkJoinTask.join(ForkJoinTask.java:719)
	at java.util.concurrent.ForkJoinPool.invoke(ForkJoinPool.java:2616)
	at com.intellij.concurrency.JobLauncherImpl.invokeConcurrentlyUnderProgress(JobLauncherImpl.java:63)
	at com.intellij.concurrency.JobLauncher.invokeConcurrentlyUnderProgress(JobLauncher.java:57)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.visitPriorityElementsAndInit(LocalInspectionsPass.java:253)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.inspect(LocalInspectionsPass.java:223)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.collectInformationWithProgress(LocalInspectionsPass.java:132)
	at com.intellij.codeInsight.daemon.impl.ProgressableTextEditorHighlightingPass.doCollectInformation(ProgressableTextEditorHighlightingPass.java:83)
	at com.intellij.codeHighlighting.TextEditorHighlightingPass.collectInformation(TextEditorHighlightingPass.java:70)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$null$1(PassExecutorService.java:438)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1156)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$doRun$2(PassExecutorService.java:431)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.doRun(PassExecutorService.java:430)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$run$0(PassExecutorService.java:406)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.run(PassExecutorService.java:404)
	at com.intellij.concurrency.JobLauncherImpl$VoidForkJoinTask$1.exec(JobLauncherImpl.java:165)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
2017-08-16 16:14:40,542 [ pool 7/12]  ERROR - aemon.impl.PassExecutorService - Android Studio 3.0 Canary 9  Build #AI-171.4220116 
2017-08-16 16:14:40,542 [ pool 7/12]  ERROR - aemon.impl.PassExecutorService - JDK: 1.8.0_152-release 
2017-08-16 16:14:40,542 [ pool 7/12]  ERROR - aemon.impl.PassExecutorService - VM: OpenJDK 64-Bit Server VM 
2017-08-16 16:14:40,542 [ pool 7/12]  ERROR - aemon.impl.PassExecutorService - Vendor: JetBrains s.r.o 
2017-08-16 16:14:40,542 [ pool 7/12]  ERROR - aemon.impl.PassExecutorService - OS: Linux 
2017-08-16 16:14:40,542 [ pool 7/12]  ERROR - aemon.impl.PassExecutorService - Last Action: EditorLeft 
2017-08-16 16:14:41,042 [ pool 3/12]  ERROR - aemon.impl.PassExecutorService - Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-
 
org.jetbrains.kotlin.resolve.lazy.NoDescriptorForDeclarationException: Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-

	at org.jetbrains.kotlin.idea.project.IdeaAbsentDescriptorHandler.diagnoseDescriptorNotFound(IdeaLocalDescriptorResolver.kt:44)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionFacadeImpl.resolveToDescriptor(ResolutionFacadeImpl.kt:67)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionUtils.resolveToDescriptor(resolutionApi.kt:42)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.getBundleNameByContext(referenceProviders.kt:67)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.access$getBundleNameByContext(referenceProviders.kt:1)
	at org.jetbrains.kotlin.idea.properties.KotlinPropertyKeyReferenceProvider.getReferencesByElement(referenceProviders.kt:132)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.getReferences(ReferenceProvidersRegistryImpl.java:135)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.mapNotEmptyReferencesFromProviders(ReferenceProvidersRegistryImpl.java:123)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.doGetReferencesFromProviders(ReferenceProvidersRegistryImpl.java:102)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistry.getReferencesFromProviders(ReferenceProvidersRegistry.java:66)
	at org.jetbrains.kotlin.psi.KtElementImpl.getReferences(KtElementImpl.java:91)
	at org.intellij.plugins.intelliLang.references.InjectedReferencesContributor.getInjectedReferences(InjectedReferencesContributor.java:56)
	at org.intellij.plugins.intelliLang.references.InjectedReferencesInspection$1.visitElement(InjectedReferencesInspection.java:40)
	at org.jetbrains.kotlin.psi.KtElementImpl.accept(KtElementImpl.java:53)
	at com.intellij.codeInspection.InspectionEngine.acceptElements(InspectionEngine.java:81)
	at com.intellij.codeInspection.InspectionEngine.createVisitorAndAcceptElements(InspectionEngine.java:69)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.runToolOnElements(LocalInspectionsPass.java:282)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.lambda$visitPriorityElementsAndInit$3(LocalInspectionsPass.java:250)
	at com.intellij.concurrency.ApplierCompleter.execAndForkSubTasks(ApplierCompleter.java:133)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1150)
	at com.intellij.concurrency.ApplierCompleter.lambda$wrapInReadActionAndIndicator$1(ApplierCompleter.java:105)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.concurrency.ApplierCompleter.wrapInReadActionAndIndicator(ApplierCompleter.java:116)
	at com.intellij.concurrency.ApplierCompleter.lambda$compute$0(ApplierCompleter.java:96)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)
	at com.intellij.concurrency.ApplierCompleter.compute(ApplierCompleter.java:96)
	at java.util.concurrent.CountedCompleter.exec(CountedCompleter.java:731)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.pollAndExecCC(ForkJoinPool.java:1190)
	at java.util.concurrent.ForkJoinPool.helpComplete(ForkJoinPool.java:1879)
	at java.util.concurrent.ForkJoinPool.awaitJoin(ForkJoinPool.java:2045)
	at java.util.concurrent.ForkJoinTask.doJoin(ForkJoinTask.java:390)
	at java.util.concurrent.ForkJoinTask.join(ForkJoinTask.java:719)
	at java.util.concurrent.ForkJoinPool.invoke(ForkJoinPool.java:2616)
	at com.intellij.concurrency.JobLauncherImpl.invokeConcurrentlyUnderProgress(JobLauncherImpl.java:63)
	at com.intellij.concurrency.JobLauncher.invokeConcurrentlyUnderProgress(JobLauncher.java:57)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.visitPriorityElementsAndInit(LocalInspectionsPass.java:253)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.inspect(LocalInspectionsPass.java:223)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.collectInformationWithProgress(LocalInspectionsPass.java:132)
	at com.intellij.codeInsight.daemon.impl.ProgressableTextEditorHighlightingPass.doCollectInformation(ProgressableTextEditorHighlightingPass.java:83)
	at com.intellij.codeHighlighting.TextEditorHighlightingPass.collectInformation(TextEditorHighlightingPass.java:70)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$null$1(PassExecutorService.java:438)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1156)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$doRun$2(PassExecutorService.java:431)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.doRun(PassExecutorService.java:430)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$run$0(PassExecutorService.java:406)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.run(PassExecutorService.java:404)
	at com.intellij.concurrency.JobLauncherImpl$VoidForkJoinTask$1.exec(JobLauncherImpl.java:165)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
2017-08-16 16:14:41,043 [ pool 3/12]  ERROR - aemon.impl.PassExecutorService - Android Studio 3.0 Canary 9  Build #AI-171.4220116 
2017-08-16 16:14:41,043 [ pool 3/12]  ERROR - aemon.impl.PassExecutorService - JDK: 1.8.0_152-release 
2017-08-16 16:14:41,043 [ pool 3/12]  ERROR - aemon.impl.PassExecutorService - VM: OpenJDK 64-Bit Server VM 
2017-08-16 16:14:41,043 [ pool 3/12]  ERROR - aemon.impl.PassExecutorService - Vendor: JetBrains s.r.o 
2017-08-16 16:14:41,043 [ pool 3/12]  ERROR - aemon.impl.PassExecutorService - OS: Linux 
2017-08-16 16:14:41,043 [ pool 3/12]  ERROR - aemon.impl.PassExecutorService - Last Action: EditorLeft 
2017-08-16 16:14:41,043 [ pool 3/12]  ERROR - aemon.impl.PassExecutorService - Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-
 
org.jetbrains.kotlin.resolve.lazy.NoDescriptorForDeclarationException: Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-

	at org.jetbrains.kotlin.idea.project.IdeaAbsentDescriptorHandler.diagnoseDescriptorNotFound(IdeaLocalDescriptorResolver.kt:44)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionFacadeImpl.resolveToDescriptor(ResolutionFacadeImpl.kt:67)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionUtils.resolveToDescriptor(resolutionApi.kt:42)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.getBundleNameByContext(referenceProviders.kt:67)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.access$getBundleNameByContext(referenceProviders.kt:1)
	at org.jetbrains.kotlin.idea.properties.KotlinPropertyKeyReferenceProvider.getReferencesByElement(referenceProviders.kt:132)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.getReferences(ReferenceProvidersRegistryImpl.java:135)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.mapNotEmptyReferencesFromProviders(ReferenceProvidersRegistryImpl.java:123)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.doGetReferencesFromProviders(ReferenceProvidersRegistryImpl.java:102)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistry.getReferencesFromProviders(ReferenceProvidersRegistry.java:66)
	at org.jetbrains.kotlin.psi.KtElementImpl.getReferences(KtElementImpl.java:91)
	at org.intellij.plugins.intelliLang.references.InjectedReferencesContributor.getInjectedReferences(InjectedReferencesContributor.java:56)
	at org.intellij.plugins.intelliLang.references.InjectedReferencesInspection$1.visitElement(InjectedReferencesInspection.java:40)
	at org.jetbrains.kotlin.psi.KtElementImpl.accept(KtElementImpl.java:53)
	at com.intellij.codeInspection.InspectionEngine.acceptElements(InspectionEngine.java:81)
	at com.intellij.codeInspection.InspectionEngine.createVisitorAndAcceptElements(InspectionEngine.java:69)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.runToolOnElements(LocalInspectionsPass.java:282)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.lambda$visitPriorityElementsAndInit$3(LocalInspectionsPass.java:250)
	at com.intellij.concurrency.ApplierCompleter.execAndForkSubTasks(ApplierCompleter.java:133)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1150)
	at com.intellij.concurrency.ApplierCompleter.lambda$wrapInReadActionAndIndicator$1(ApplierCompleter.java:105)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.concurrency.ApplierCompleter.wrapInReadActionAndIndicator(ApplierCompleter.java:116)
	at com.intellij.concurrency.ApplierCompleter.lambda$compute$0(ApplierCompleter.java:96)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)
	at com.intellij.concurrency.ApplierCompleter.compute(ApplierCompleter.java:96)
	at java.util.concurrent.CountedCompleter.exec(CountedCompleter.java:731)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.pollAndExecCC(ForkJoinPool.java:1190)
	at java.util.concurrent.ForkJoinPool.helpComplete(ForkJoinPool.java:1879)
	at java.util.concurrent.ForkJoinPool.awaitJoin(ForkJoinPool.java:2045)
	at java.util.concurrent.ForkJoinTask.doJoin(ForkJoinTask.java:390)
	at java.util.concurrent.ForkJoinTask.join(ForkJoinTask.java:719)
	at java.util.concurrent.ForkJoinPool.invoke(ForkJoinPool.java:2616)
	at com.intellij.concurrency.JobLauncherImpl.invokeConcurrentlyUnderProgress(JobLauncherImpl.java:63)
	at com.intellij.concurrency.JobLauncher.invokeConcurrentlyUnderProgress(JobLauncher.java:57)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.visitPriorityElementsAndInit(LocalInspectionsPass.java:253)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.inspect(LocalInspectionsPass.java:223)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.collectInformationWithProgress(LocalInspectionsPass.java:132)
	at com.intellij.codeInsight.daemon.impl.ProgressableTextEditorHighlightingPass.doCollectInformation(ProgressableTextEditorHighlightingPass.java:83)
	at com.intellij.codeHighlighting.TextEditorHighlightingPass.collectInformation(TextEditorHighlightingPass.java:70)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$null$1(PassExecutorService.java:438)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1156)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$doRun$2(PassExecutorService.java:431)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.doRun(PassExecutorService.java:430)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$run$0(PassExecutorService.java:406)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.run(PassExecutorService.java:404)
	at com.intellij.concurrency.JobLauncherImpl$VoidForkJoinTask$1.exec(JobLauncherImpl.java:165)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
2017-08-16 16:14:41,044 [ pool 3/12]  ERROR - aemon.impl.PassExecutorService - Android Studio 3.0 Canary 9  Build #AI-171.4220116 
2017-08-16 16:14:41,044 [ pool 3/12]  ERROR - aemon.impl.PassExecutorService - JDK: 1.8.0_152-release 
2017-08-16 16:14:41,044 [ pool 3/12]  ERROR - aemon.impl.PassExecutorService - VM: OpenJDK 64-Bit Server VM 
2017-08-16 16:14:41,044 [ pool 3/12]  ERROR - aemon.impl.PassExecutorService - Vendor: JetBrains s.r.o 
2017-08-16 16:14:41,044 [ pool 3/12]  ERROR - aemon.impl.PassExecutorService - OS: Linux 
2017-08-16 16:14:41,044 [ pool 3/12]  ERROR - aemon.impl.PassExecutorService - Last Action: EditorLeft 
2017-08-16 16:14:41,639 [pool 11/12]  ERROR - aemon.impl.PassExecutorService - Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-
 
org.jetbrains.kotlin.resolve.lazy.NoDescriptorForDeclarationException: Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-

	at org.jetbrains.kotlin.idea.project.IdeaAbsentDescriptorHandler.diagnoseDescriptorNotFound(IdeaLocalDescriptorResolver.kt:44)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionFacadeImpl.resolveToDescriptor(ResolutionFacadeImpl.kt:67)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionUtils.resolveToDescriptor(resolutionApi.kt:42)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.getBundleNameByContext(referenceProviders.kt:67)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.access$getBundleNameByContext(referenceProviders.kt:1)
	at org.jetbrains.kotlin.idea.properties.KotlinPropertyKeyReferenceProvider.getReferencesByElement(referenceProviders.kt:132)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.getReferences(ReferenceProvidersRegistryImpl.java:135)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.mapNotEmptyReferencesFromProviders(ReferenceProvidersRegistryImpl.java:123)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.doGetReferencesFromProviders(ReferenceProvidersRegistryImpl.java:102)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistry.getReferencesFromProviders(ReferenceProvidersRegistry.java:66)
	at org.jetbrains.kotlin.psi.KtElementImpl.getReferences(KtElementImpl.java:91)
	at org.intellij.plugins.intelliLang.references.InjectedReferencesContributor.getInjectedReferences(InjectedReferencesContributor.java:56)
	at org.intellij.plugins.intelliLang.references.InjectedReferencesInspection$1.visitElement(InjectedReferencesInspection.java:40)
	at org.jetbrains.kotlin.psi.KtElementImpl.accept(KtElementImpl.java:53)
	at com.intellij.codeInspection.InspectionEngine.acceptElements(InspectionEngine.java:81)
	at com.intellij.codeInspection.InspectionEngine.createVisitorAndAcceptElements(InspectionEngine.java:69)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.runToolOnElements(LocalInspectionsPass.java:282)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.lambda$visitPriorityElementsAndInit$3(LocalInspectionsPass.java:250)
	at com.intellij.concurrency.ApplierCompleter.execAndForkSubTasks(ApplierCompleter.java:133)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1150)
	at com.intellij.concurrency.ApplierCompleter.lambda$wrapInReadActionAndIndicator$1(ApplierCompleter.java:105)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.concurrency.ApplierCompleter.wrapInReadActionAndIndicator(ApplierCompleter.java:116)
	at com.intellij.concurrency.ApplierCompleter.lambda$compute$0(ApplierCompleter.java:96)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)
	at com.intellij.concurrency.ApplierCompleter.compute(ApplierCompleter.java:96)
	at java.util.concurrent.CountedCompleter.exec(CountedCompleter.java:731)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.pollAndExecCC(ForkJoinPool.java:1190)
	at java.util.concurrent.ForkJoinPool.helpComplete(ForkJoinPool.java:1879)
	at java.util.concurrent.ForkJoinPool.awaitJoin(ForkJoinPool.java:2045)
	at java.util.concurrent.ForkJoinTask.doJoin(ForkJoinTask.java:390)
	at java.util.concurrent.ForkJoinTask.join(ForkJoinTask.java:719)
	at java.util.concurrent.ForkJoinPool.invoke(ForkJoinPool.java:2616)
	at com.intellij.concurrency.JobLauncherImpl.invokeConcurrentlyUnderProgress(JobLauncherImpl.java:63)
	at com.intellij.concurrency.JobLauncher.invokeConcurrentlyUnderProgress(JobLauncher.java:57)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.visitPriorityElementsAndInit(LocalInspectionsPass.java:253)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.inspect(LocalInspectionsPass.java:223)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.collectInformationWithProgress(LocalInspectionsPass.java:132)
	at com.intellij.codeInsight.daemon.impl.ProgressableTextEditorHighlightingPass.doCollectInformation(ProgressableTextEditorHighlightingPass.java:83)
	at com.intellij.codeHighlighting.TextEditorHighlightingPass.collectInformation(TextEditorHighlightingPass.java:70)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$null$1(PassExecutorService.java:438)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1156)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$doRun$2(PassExecutorService.java:431)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.doRun(PassExecutorService.java:430)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$run$0(PassExecutorService.java:406)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.run(PassExecutorService.java:404)
	at com.intellij.concurrency.JobLauncherImpl$VoidForkJoinTask$1.exec(JobLauncherImpl.java:165)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
2017-08-16 16:14:41,640 [pool 11/12]  ERROR - aemon.impl.PassExecutorService - Android Studio 3.0 Canary 9  Build #AI-171.4220116 
2017-08-16 16:14:41,640 [pool 11/12]  ERROR - aemon.impl.PassExecutorService - JDK: 1.8.0_152-release 
2017-08-16 16:14:41,640 [pool 11/12]  ERROR - aemon.impl.PassExecutorService - VM: OpenJDK 64-Bit Server VM 
2017-08-16 16:14:41,640 [pool 11/12]  ERROR - aemon.impl.PassExecutorService - Vendor: JetBrains s.r.o 
2017-08-16 16:14:41,640 [pool 11/12]  ERROR - aemon.impl.PassExecutorService - OS: Linux 
2017-08-16 16:14:41,640 [pool 11/12]  ERROR - aemon.impl.PassExecutorService - Last Action: EditorLeftWithSelection 
2017-08-16 16:14:41,640 [pool 11/12]  ERROR - aemon.impl.PassExecutorService - Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-
 
org.jetbrains.kotlin.resolve.lazy.NoDescriptorForDeclarationException: Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-

	at org.jetbrains.kotlin.idea.project.IdeaAbsentDescriptorHandler.diagnoseDescriptorNotFound(IdeaLocalDescriptorResolver.kt:44)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionFacadeImpl.resolveToDescriptor(ResolutionFacadeImpl.kt:67)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionUtils.resolveToDescriptor(resolutionApi.kt:42)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.getBundleNameByContext(referenceProviders.kt:67)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.access$getBundleNameByContext(referenceProviders.kt:1)
	at org.jetbrains.kotlin.idea.properties.KotlinPropertyKeyReferenceProvider.getReferencesByElement(referenceProviders.kt:132)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.getReferences(ReferenceProvidersRegistryImpl.java:135)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.mapNotEmptyReferencesFromProviders(ReferenceProvidersRegistryImpl.java:123)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.doGetReferencesFromProviders(ReferenceProvidersRegistryImpl.java:102)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistry.getReferencesFromProviders(ReferenceProvidersRegistry.java:66)
	at org.jetbrains.kotlin.psi.KtElementImpl.getReferences(KtElementImpl.java:91)
	at org.intellij.plugins.intelliLang.references.InjectedReferencesContributor.getInjectedReferences(InjectedReferencesContributor.java:56)
	at org.intellij.plugins.intelliLang.references.InjectedReferencesInspection$1.visitElement(InjectedReferencesInspection.java:40)
	at org.jetbrains.kotlin.psi.KtElementImpl.accept(KtElementImpl.java:53)
	at com.intellij.codeInspection.InspectionEngine.acceptElements(InspectionEngine.java:81)
	at com.intellij.codeInspection.InspectionEngine.createVisitorAndAcceptElements(InspectionEngine.java:69)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.runToolOnElements(LocalInspectionsPass.java:282)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.lambda$visitPriorityElementsAndInit$3(LocalInspectionsPass.java:250)
	at com.intellij.concurrency.ApplierCompleter.execAndForkSubTasks(ApplierCompleter.java:133)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1150)
	at com.intellij.concurrency.ApplierCompleter.lambda$wrapInReadActionAndIndicator$1(ApplierCompleter.java:105)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.concurrency.ApplierCompleter.wrapInReadActionAndIndicator(ApplierCompleter.java:116)
	at com.intellij.concurrency.ApplierCompleter.lambda$compute$0(ApplierCompleter.java:96)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)
	at com.intellij.concurrency.ApplierCompleter.compute(ApplierCompleter.java:96)
	at java.util.concurrent.CountedCompleter.exec(CountedCompleter.java:731)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.pollAndExecCC(ForkJoinPool.java:1190)
	at java.util.concurrent.ForkJoinPool.helpComplete(ForkJoinPool.java:1879)
	at java.util.concurrent.ForkJoinPool.awaitJoin(ForkJoinPool.java:2045)
	at java.util.concurrent.ForkJoinTask.doJoin(ForkJoinTask.java:390)
	at java.util.concurrent.ForkJoinTask.join(ForkJoinTask.java:719)
	at java.util.concurrent.ForkJoinPool.invoke(ForkJoinPool.java:2616)
	at com.intellij.concurrency.JobLauncherImpl.invokeConcurrentlyUnderProgress(JobLauncherImpl.java:63)
	at com.intellij.concurrency.JobLauncher.invokeConcurrentlyUnderProgress(JobLauncher.java:57)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.visitPriorityElementsAndInit(LocalInspectionsPass.java:253)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.inspect(LocalInspectionsPass.java:223)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.collectInformationWithProgress(LocalInspectionsPass.java:132)
	at com.intellij.codeInsight.daemon.impl.ProgressableTextEditorHighlightingPass.doCollectInformation(ProgressableTextEditorHighlightingPass.java:83)
	at com.intellij.codeHighlighting.TextEditorHighlightingPass.collectInformation(TextEditorHighlightingPass.java:70)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$null$1(PassExecutorService.java:438)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1156)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$doRun$2(PassExecutorService.java:431)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.doRun(PassExecutorService.java:430)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$run$0(PassExecutorService.java:406)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.run(PassExecutorService.java:404)
	at com.intellij.concurrency.JobLauncherImpl$VoidForkJoinTask$1.exec(JobLauncherImpl.java:165)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
2017-08-16 16:14:41,640 [pool 11/12]  ERROR - aemon.impl.PassExecutorService - Android Studio 3.0 Canary 9  Build #AI-171.4220116 
2017-08-16 16:14:41,640 [pool 11/12]  ERROR - aemon.impl.PassExecutorService - JDK: 1.8.0_152-release 
2017-08-16 16:14:41,640 [pool 11/12]  ERROR - aemon.impl.PassExecutorService - VM: OpenJDK 64-Bit Server VM 
2017-08-16 16:14:41,640 [pool 11/12]  ERROR - aemon.impl.PassExecutorService - Vendor: JetBrains s.r.o 
2017-08-16 16:14:41,640 [pool 11/12]  ERROR - aemon.impl.PassExecutorService - OS: Linux 
2017-08-16 16:14:41,640 [pool 11/12]  ERROR - aemon.impl.PassExecutorService - Last Action: EditorLeftWithSelection 
2017-08-16 16:14:42,327 [ pool 4/12]  ERROR - aemon.impl.PassExecutorService - Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-
 
org.jetbrains.kotlin.resolve.lazy.NoDescriptorForDeclarationException: Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-

	at org.jetbrains.kotlin.idea.project.IdeaAbsentDescriptorHandler.diagnoseDescriptorNotFound(IdeaLocalDescriptorResolver.kt:44)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionFacadeImpl.resolveToDescriptor(ResolutionFacadeImpl.kt:67)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionUtils.resolveToDescriptor(resolutionApi.kt:42)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.getBundleNameByContext(referenceProviders.kt:67)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.access$getBundleNameByContext(referenceProviders.kt:1)
	at org.jetbrains.kotlin.idea.properties.KotlinPropertyKeyReferenceProvider.getReferencesByElement(referenceProviders.kt:132)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.getReferences(ReferenceProvidersRegistryImpl.java:135)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.mapNotEmptyReferencesFromProviders(ReferenceProvidersRegistryImpl.java:123)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.doGetReferencesFromProviders(ReferenceProvidersRegistryImpl.java:102)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistry.getReferencesFromProviders(ReferenceProvidersRegistry.java:66)
	at org.jetbrains.kotlin.psi.KtElementImpl.getReferences(KtElementImpl.java:91)
	at org.intellij.plugins.intelliLang.references.InjectedReferencesContributor.getInjectedReferences(InjectedReferencesContributor.java:56)
	at org.intellij.plugins.intelliLang.references.InjectedReferencesInspection$1.visitElement(InjectedReferencesInspection.java:40)
	at org.jetbrains.kotlin.psi.KtElementImpl.accept(KtElementImpl.java:53)
	at com.intellij.codeInspection.InspectionEngine.acceptElements(InspectionEngine.java:81)
	at com.intellij.codeInspection.InspectionEngine.createVisitorAndAcceptElements(InspectionEngine.java:69)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.runToolOnElements(LocalInspectionsPass.java:282)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.lambda$visitPriorityElementsAndInit$3(LocalInspectionsPass.java:250)
	at com.intellij.concurrency.ApplierCompleter.execAndForkSubTasks(ApplierCompleter.java:133)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1150)
	at com.intellij.concurrency.ApplierCompleter.lambda$wrapInReadActionAndIndicator$1(ApplierCompleter.java:105)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.concurrency.ApplierCompleter.wrapInReadActionAndIndicator(ApplierCompleter.java:116)
	at com.intellij.concurrency.ApplierCompleter.lambda$compute$0(ApplierCompleter.java:96)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)
	at com.intellij.concurrency.ApplierCompleter.compute(ApplierCompleter.java:96)
	at java.util.concurrent.CountedCompleter.exec(CountedCompleter.java:731)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.pollAndExecCC(ForkJoinPool.java:1190)
	at java.util.concurrent.ForkJoinPool.helpComplete(ForkJoinPool.java:1879)
	at java.util.concurrent.ForkJoinPool.awaitJoin(ForkJoinPool.java:2045)
	at java.util.concurrent.ForkJoinTask.doJoin(ForkJoinTask.java:390)
	at java.util.concurrent.ForkJoinTask.join(ForkJoinTask.java:719)
	at java.util.concurrent.ForkJoinPool.invoke(ForkJoinPool.java:2616)
	at com.intellij.concurrency.JobLauncherImpl.invokeConcurrentlyUnderProgress(JobLauncherImpl.java:63)
	at com.intellij.concurrency.JobLauncher.invokeConcurrentlyUnderProgress(JobLauncher.java:57)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.visitPriorityElementsAndInit(LocalInspectionsPass.java:253)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.inspect(LocalInspectionsPass.java:223)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.collectInformationWithProgress(LocalInspectionsPass.java:132)
	at com.intellij.codeInsight.daemon.impl.ProgressableTextEditorHighlightingPass.doCollectInformation(ProgressableTextEditorHighlightingPass.java:83)
	at com.intellij.codeHighlighting.TextEditorHighlightingPass.collectInformation(TextEditorHighlightingPass.java:70)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$null$1(PassExecutorService.java:438)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1156)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$doRun$2(PassExecutorService.java:431)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.doRun(PassExecutorService.java:430)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$run$0(PassExecutorService.java:406)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.run(PassExecutorService.java:404)
	at com.intellij.concurrency.JobLauncherImpl$VoidForkJoinTask$1.exec(JobLauncherImpl.java:165)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
2017-08-16 16:14:42,328 [ pool 4/12]  ERROR - aemon.impl.PassExecutorService - Android Studio 3.0 Canary 9  Build #AI-171.4220116 
2017-08-16 16:14:42,328 [ pool 4/12]  ERROR - aemon.impl.PassExecutorService - JDK: 1.8.0_152-release 
2017-08-16 16:14:42,328 [ pool 4/12]  ERROR - aemon.impl.PassExecutorService - VM: OpenJDK 64-Bit Server VM 
2017-08-16 16:14:42,328 [ pool 4/12]  ERROR - aemon.impl.PassExecutorService - Vendor: JetBrains s.r.o 
2017-08-16 16:14:42,328 [ pool 4/12]  ERROR - aemon.impl.PassExecutorService - OS: Linux 
2017-08-16 16:14:42,328 [ pool 4/12]  ERROR - aemon.impl.PassExecutorService - Last Action: EditorLeftWithSelection 
2017-08-16 16:14:42,328 [ pool 4/12]  ERROR - aemon.impl.PassExecutorService - Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-
 
org.jetbrains.kotlin.resolve.lazy.NoDescriptorForDeclarationException: Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-

	at org.jetbrains.kotlin.idea.project.IdeaAbsentDescriptorHandler.diagnoseDescriptorNotFound(IdeaLocalDescriptorResolver.kt:44)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionFacadeImpl.resolveToDescriptor(ResolutionFacadeImpl.kt:67)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionUtils.resolveToDescriptor(resolutionApi.kt:42)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.getBundleNameByContext(referenceProviders.kt:67)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.access$getBundleNameByContext(referenceProviders.kt:1)
	at org.jetbrains.kotlin.idea.properties.KotlinPropertyKeyReferenceProvider.getReferencesByElement(referenceProviders.kt:132)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.getReferences(ReferenceProvidersRegistryImpl.java:135)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.mapNotEmptyReferencesFromProviders(ReferenceProvidersRegistryImpl.java:123)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.doGetReferencesFromProviders(ReferenceProvidersRegistryImpl.java:102)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistry.getReferencesFromProviders(ReferenceProvidersRegistry.java:66)
	at org.jetbrains.kotlin.psi.KtElementImpl.getReferences(KtElementImpl.java:91)
	at org.intellij.plugins.intelliLang.references.InjectedReferencesContributor.getInjectedReferences(InjectedReferencesContributor.java:56)
	at org.intellij.plugins.intelliLang.references.InjectedReferencesInspection$1.visitElement(InjectedReferencesInspection.java:40)
	at org.jetbrains.kotlin.psi.KtElementImpl.accept(KtElementImpl.java:53)
	at com.intellij.codeInspection.InspectionEngine.acceptElements(InspectionEngine.java:81)
	at com.intellij.codeInspection.InspectionEngine.createVisitorAndAcceptElements(InspectionEngine.java:69)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.runToolOnElements(LocalInspectionsPass.java:282)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.lambda$visitPriorityElementsAndInit$3(LocalInspectionsPass.java:250)
	at com.intellij.concurrency.ApplierCompleter.execAndForkSubTasks(ApplierCompleter.java:133)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1150)
	at com.intellij.concurrency.ApplierCompleter.lambda$wrapInReadActionAndIndicator$1(ApplierCompleter.java:105)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.concurrency.ApplierCompleter.wrapInReadActionAndIndicator(ApplierCompleter.java:116)
	at com.intellij.concurrency.ApplierCompleter.lambda$compute$0(ApplierCompleter.java:96)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)
	at com.intellij.concurrency.ApplierCompleter.compute(ApplierCompleter.java:96)
	at java.util.concurrent.CountedCompleter.exec(CountedCompleter.java:731)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.pollAndExecCC(ForkJoinPool.java:1190)
	at java.util.concurrent.ForkJoinPool.helpComplete(ForkJoinPool.java:1879)
	at java.util.concurrent.ForkJoinPool.awaitJoin(ForkJoinPool.java:2045)
	at java.util.concurrent.ForkJoinTask.doJoin(ForkJoinTask.java:390)
	at java.util.concurrent.ForkJoinTask.join(ForkJoinTask.java:719)
	at java.util.concurrent.ForkJoinPool.invoke(ForkJoinPool.java:2616)
	at com.intellij.concurrency.JobLauncherImpl.invokeConcurrentlyUnderProgress(JobLauncherImpl.java:63)
	at com.intellij.concurrency.JobLauncher.invokeConcurrentlyUnderProgress(JobLauncher.java:57)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.visitPriorityElementsAndInit(LocalInspectionsPass.java:253)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.inspect(LocalInspectionsPass.java:223)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.collectInformationWithProgress(LocalInspectionsPass.java:132)
	at com.intellij.codeInsight.daemon.impl.ProgressableTextEditorHighlightingPass.doCollectInformation(ProgressableTextEditorHighlightingPass.java:83)
	at com.intellij.codeHighlighting.TextEditorHighlightingPass.collectInformation(TextEditorHighlightingPass.java:70)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$null$1(PassExecutorService.java:438)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1156)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$doRun$2(PassExecutorService.java:431)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.doRun(PassExecutorService.java:430)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$run$0(PassExecutorService.java:406)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.run(PassExecutorService.java:404)
	at com.intellij.concurrency.JobLauncherImpl$VoidForkJoinTask$1.exec(JobLauncherImpl.java:165)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
2017-08-16 16:14:42,329 [ pool 4/12]  ERROR - aemon.impl.PassExecutorService - Android Studio 3.0 Canary 9  Build #AI-171.4220116 
2017-08-16 16:14:42,329 [ pool 4/12]  ERROR - aemon.impl.PassExecutorService - JDK: 1.8.0_152-release 
2017-08-16 16:14:42,329 [ pool 4/12]  ERROR - aemon.impl.PassExecutorService - VM: OpenJDK 64-Bit Server VM 
2017-08-16 16:14:42,329 [ pool 4/12]  ERROR - aemon.impl.PassExecutorService - Vendor: JetBrains s.r.o 
2017-08-16 16:14:42,329 [ pool 4/12]  ERROR - aemon.impl.PassExecutorService - OS: Linux 
2017-08-16 16:14:42,329 [ pool 4/12]  ERROR - aemon.impl.PassExecutorService - Last Action: EditorLeftWithSelection 
2017-08-16 16:14:45,529 [ pool 1/12]  ERROR - aemon.impl.PassExecutorService - Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-
 
org.jetbrains.kotlin.resolve.lazy.NoDescriptorForDeclarationException: Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-

	at org.jetbrains.kotlin.idea.project.IdeaAbsentDescriptorHandler.diagnoseDescriptorNotFound(IdeaLocalDescriptorResolver.kt:44)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionFacadeImpl.resolveToDescriptor(ResolutionFacadeImpl.kt:67)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionUtils.resolveToDescriptor(resolutionApi.kt:42)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.getBundleNameByContext(referenceProviders.kt:67)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.access$getBundleNameByContext(referenceProviders.kt:1)
	at org.jetbrains.kotlin.idea.properties.KotlinPropertyKeyReferenceProvider.getReferencesByElement(referenceProviders.kt:132)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.getReferences(ReferenceProvidersRegistryImpl.java:135)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.mapNotEmptyReferencesFromProviders(ReferenceProvidersRegistryImpl.java:123)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.doGetReferencesFromProviders(ReferenceProvidersRegistryImpl.java:102)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistry.getReferencesFromProviders(ReferenceProvidersRegistry.java:66)
	at org.jetbrains.kotlin.psi.KtElementImpl.getReferences(KtElementImpl.java:91)
	at org.intellij.plugins.intelliLang.references.InjectedReferencesContributor.getInjectedReferences(InjectedReferencesContributor.java:56)
	at org.intellij.plugins.intelliLang.references.InjectedReferencesInspection$1.visitElement(InjectedReferencesInspection.java:40)
	at org.jetbrains.kotlin.psi.KtElementImpl.accept(KtElementImpl.java:53)
	at com.intellij.codeInspection.InspectionEngine.acceptElements(InspectionEngine.java:81)
	at com.intellij.codeInspection.InspectionEngine.createVisitorAndAcceptElements(InspectionEngine.java:69)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.runToolOnElements(LocalInspectionsPass.java:282)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.lambda$visitPriorityElementsAndInit$3(LocalInspectionsPass.java:250)
	at com.intellij.concurrency.ApplierCompleter.execAndForkSubTasks(ApplierCompleter.java:133)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1150)
	at com.intellij.concurrency.ApplierCompleter.lambda$wrapInReadActionAndIndicator$1(ApplierCompleter.java:105)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.concurrency.ApplierCompleter.wrapInReadActionAndIndicator(ApplierCompleter.java:116)
	at com.intellij.concurrency.ApplierCompleter.lambda$compute$0(ApplierCompleter.java:96)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)
	at com.intellij.concurrency.ApplierCompleter.compute(ApplierCompleter.java:96)
	at java.util.concurrent.CountedCompleter.exec(CountedCompleter.java:731)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.pollAndExecCC(ForkJoinPool.java:1190)
	at java.util.concurrent.ForkJoinPool.helpComplete(ForkJoinPool.java:1879)
	at java.util.concurrent.ForkJoinPool.awaitJoin(ForkJoinPool.java:2045)
	at java.util.concurrent.ForkJoinTask.doJoin(ForkJoinTask.java:390)
	at java.util.concurrent.ForkJoinTask.join(ForkJoinTask.java:719)
	at java.util.concurrent.ForkJoinPool.invoke(ForkJoinPool.java:2616)
	at com.intellij.concurrency.JobLauncherImpl.invokeConcurrentlyUnderProgress(JobLauncherImpl.java:63)
	at com.intellij.concurrency.JobLauncher.invokeConcurrentlyUnderProgress(JobLauncher.java:57)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.visitPriorityElementsAndInit(LocalInspectionsPass.java:253)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.inspect(LocalInspectionsPass.java:223)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.collectInformationWithProgress(LocalInspectionsPass.java:132)
	at com.intellij.codeInsight.daemon.impl.ProgressableTextEditorHighlightingPass.doCollectInformation(ProgressableTextEditorHighlightingPass.java:83)
	at com.intellij.codeHighlighting.TextEditorHighlightingPass.collectInformation(TextEditorHighlightingPass.java:70)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$null$1(PassExecutorService.java:438)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1156)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$doRun$2(PassExecutorService.java:431)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.doRun(PassExecutorService.java:430)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$run$0(PassExecutorService.java:406)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.run(PassExecutorService.java:404)
	at com.intellij.concurrency.JobLauncherImpl$VoidForkJoinTask$1.exec(JobLauncherImpl.java:165)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
2017-08-16 16:14:45,530 [ pool 1/12]  ERROR - aemon.impl.PassExecutorService - Android Studio 3.0 Canary 9  Build #AI-171.4220116 
2017-08-16 16:14:45,530 [ pool 1/12]  ERROR - aemon.impl.PassExecutorService - JDK: 1.8.0_152-release 
2017-08-16 16:14:45,530 [ pool 1/12]  ERROR - aemon.impl.PassExecutorService - VM: OpenJDK 64-Bit Server VM 
2017-08-16 16:14:45,530 [ pool 1/12]  ERROR - aemon.impl.PassExecutorService - Vendor: JetBrains s.r.o 
2017-08-16 16:14:45,530 [ pool 1/12]  ERROR - aemon.impl.PassExecutorService - OS: Linux 
2017-08-16 16:14:45,530 [ pool 1/12]  ERROR - aemon.impl.PassExecutorService - Last Action: EditorDown 
2017-08-16 16:14:45,530 [ pool 1/12]  ERROR - aemon.impl.PassExecutorService - Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-
 
org.jetbrains.kotlin.resolve.lazy.NoDescriptorForDeclarationException: Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-

	at org.jetbrains.kotlin.idea.project.IdeaAbsentDescriptorHandler.diagnoseDescriptorNotFound(IdeaLocalDescriptorResolver.kt:44)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionFacadeImpl.resolveToDescriptor(ResolutionFacadeImpl.kt:67)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionUtils.resolveToDescriptor(resolutionApi.kt:42)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.getBundleNameByContext(referenceProviders.kt:67)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.access$getBundleNameByContext(referenceProviders.kt:1)
	at org.jetbrains.kotlin.idea.properties.KotlinPropertyKeyReferenceProvider.getReferencesByElement(referenceProviders.kt:132)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.getReferences(ReferenceProvidersRegistryImpl.java:135)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.mapNotEmptyReferencesFromProviders(ReferenceProvidersRegistryImpl.java:123)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.doGetReferencesFromProviders(ReferenceProvidersRegistryImpl.java:102)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistry.getReferencesFromProviders(ReferenceProvidersRegistry.java:66)
	at org.jetbrains.kotlin.psi.KtElementImpl.getReferences(KtElementImpl.java:91)
	at org.intellij.plugins.intelliLang.references.InjectedReferencesContributor.getInjectedReferences(InjectedReferencesContributor.java:56)
	at org.intellij.plugins.intelliLang.references.InjectedReferencesInspection$1.visitElement(InjectedReferencesInspection.java:40)
	at org.jetbrains.kotlin.psi.KtElementImpl.accept(KtElementImpl.java:53)
	at com.intellij.codeInspection.InspectionEngine.acceptElements(InspectionEngine.java:81)
	at com.intellij.codeInspection.InspectionEngine.createVisitorAndAcceptElements(InspectionEngine.java:69)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.runToolOnElements(LocalInspectionsPass.java:282)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.lambda$visitPriorityElementsAndInit$3(LocalInspectionsPass.java:250)
	at com.intellij.concurrency.ApplierCompleter.execAndForkSubTasks(ApplierCompleter.java:133)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1150)
	at com.intellij.concurrency.ApplierCompleter.lambda$wrapInReadActionAndIndicator$1(ApplierCompleter.java:105)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.concurrency.ApplierCompleter.wrapInReadActionAndIndicator(ApplierCompleter.java:116)
	at com.intellij.concurrency.ApplierCompleter.lambda$compute$0(ApplierCompleter.java:96)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)
	at com.intellij.concurrency.ApplierCompleter.compute(ApplierCompleter.java:96)
	at java.util.concurrent.CountedCompleter.exec(CountedCompleter.java:731)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.pollAndExecCC(ForkJoinPool.java:1190)
	at java.util.concurrent.ForkJoinPool.helpComplete(ForkJoinPool.java:1879)
	at java.util.concurrent.ForkJoinPool.awaitJoin(ForkJoinPool.java:2045)
	at java.util.concurrent.ForkJoinTask.doJoin(ForkJoinTask.java:390)
	at java.util.concurrent.ForkJoinTask.join(ForkJoinTask.java:719)
	at java.util.concurrent.ForkJoinPool.invoke(ForkJoinPool.java:2616)
	at com.intellij.concurrency.JobLauncherImpl.invokeConcurrentlyUnderProgress(JobLauncherImpl.java:63)
	at com.intellij.concurrency.JobLauncher.invokeConcurrentlyUnderProgress(JobLauncher.java:57)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.visitPriorityElementsAndInit(LocalInspectionsPass.java:253)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.inspect(LocalInspectionsPass.java:223)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.collectInformationWithProgress(LocalInspectionsPass.java:132)
	at com.intellij.codeInsight.daemon.impl.ProgressableTextEditorHighlightingPass.doCollectInformation(ProgressableTextEditorHighlightingPass.java:83)
	at com.intellij.codeHighlighting.TextEditorHighlightingPass.collectInformation(TextEditorHighlightingPass.java:70)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$null$1(PassExecutorService.java:438)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1156)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$doRun$2(PassExecutorService.java:431)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.doRun(PassExecutorService.java:430)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$run$0(PassExecutorService.java:406)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.run(PassExecutorService.java:404)
	at com.intellij.concurrency.JobLauncherImpl$VoidForkJoinTask$1.exec(JobLauncherImpl.java:165)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
2017-08-16 16:14:45,530 [ pool 1/12]  ERROR - aemon.impl.PassExecutorService - Android Studio 3.0 Canary 9  Build #AI-171.4220116 
2017-08-16 16:14:45,530 [ pool 1/12]  ERROR - aemon.impl.PassExecutorService - JDK: 1.8.0_152-release 
2017-08-16 16:14:45,530 [ pool 1/12]  ERROR - aemon.impl.PassExecutorService - VM: OpenJDK 64-Bit Server VM 
2017-08-16 16:14:45,530 [ pool 1/12]  ERROR - aemon.impl.PassExecutorService - Vendor: JetBrains s.r.o 
2017-08-16 16:14:45,530 [ pool 1/12]  ERROR - aemon.impl.PassExecutorService - OS: Linux 
2017-08-16 16:14:45,530 [ pool 1/12]  ERROR - aemon.impl.PassExecutorService - Last Action: EditorDown 
2017-08-16 16:14:46,018 [ pool 8/12]  ERROR - aemon.impl.PassExecutorService - Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-
 
org.jetbrains.kotlin.resolve.lazy.NoDescriptorForDeclarationException: Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-

	at org.jetbrains.kotlin.idea.project.IdeaAbsentDescriptorHandler.diagnoseDescriptorNotFound(IdeaLocalDescriptorResolver.kt:44)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionFacadeImpl.resolveToDescriptor(ResolutionFacadeImpl.kt:67)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionUtils.resolveToDescriptor(resolutionApi.kt:42)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.getBundleNameByContext(referenceProviders.kt:67)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.access$getBundleNameByContext(referenceProviders.kt:1)
	at org.jetbrains.kotlin.idea.properties.KotlinPropertyKeyReferenceProvider.getReferencesByElement(referenceProviders.kt:132)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.getReferences(ReferenceProvidersRegistryImpl.java:135)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.mapNotEmptyReferencesFromProviders(ReferenceProvidersRegistryImpl.java:123)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.doGetReferencesFromProviders(ReferenceProvidersRegistryImpl.java:102)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistry.getReferencesFromProviders(ReferenceProvidersRegistry.java:66)
	at org.jetbrains.kotlin.psi.KtElementImpl.getReferences(KtElementImpl.java:91)
	at org.jetbrains.kotlin.idea.inspections.KotlinInvalidBundleOrPropertyInspection$buildVisitor$1.visitStringTemplateExpression(KotlinInvalidBundleOrPropertyInspection.kt:95)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitStringTemplateExpression(KtVisitorVoid.java:953)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitStringTemplateExpression(KtVisitorVoid.java:21)
	at org.jetbrains.kotlin.psi.KtStringTemplateExpression.accept(KtStringTemplateExpression.java:37)
	at org.jetbrains.kotlin.psi.KtElementImpl.accept(KtElementImpl.java:50)
	at com.intellij.codeInspection.InspectionEngine.acceptElements(InspectionEngine.java:81)
	at com.intellij.codeInspection.InspectionEngine.createVisitorAndAcceptElements(InspectionEngine.java:69)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.runToolOnElements(LocalInspectionsPass.java:282)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.lambda$visitPriorityElementsAndInit$3(LocalInspectionsPass.java:250)
	at com.intellij.concurrency.ApplierCompleter.execAndForkSubTasks(ApplierCompleter.java:133)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1156)
	at com.intellij.concurrency.ApplierCompleter.lambda$wrapInReadActionAndIndicator$1(ApplierCompleter.java:105)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.concurrency.ApplierCompleter.wrapInReadActionAndIndicator(ApplierCompleter.java:116)
	at com.intellij.concurrency.ApplierCompleter.lambda$compute$0(ApplierCompleter.java:96)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)
	at com.intellij.concurrency.ApplierCompleter.compute(ApplierCompleter.java:96)
	at java.util.concurrent.CountedCompleter.exec(CountedCompleter.java:731)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
2017-08-16 16:14:46,019 [ pool 8/12]  ERROR - aemon.impl.PassExecutorService - Android Studio 3.0 Canary 9  Build #AI-171.4220116 
2017-08-16 16:14:46,019 [ pool 8/12]  ERROR - aemon.impl.PassExecutorService - JDK: 1.8.0_152-release 
2017-08-16 16:14:46,019 [ pool 8/12]  ERROR - aemon.impl.PassExecutorService - VM: OpenJDK 64-Bit Server VM 
2017-08-16 16:14:46,019 [ pool 8/12]  ERROR - aemon.impl.PassExecutorService - Vendor: JetBrains s.r.o 
2017-08-16 16:14:46,019 [ pool 8/12]  ERROR - aemon.impl.PassExecutorService - OS: Linux 
2017-08-16 16:14:46,019 [ pool 8/12]  ERROR - aemon.impl.PassExecutorService - Last Action: EditorDown 
2017-08-16 16:14:46,019 [ pool 8/12]  ERROR - aemon.impl.PassExecutorService - Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-
 
org.jetbrains.kotlin.resolve.lazy.NoDescriptorForDeclarationException: Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-

	at org.jetbrains.kotlin.idea.project.IdeaAbsentDescriptorHandler.diagnoseDescriptorNotFound(IdeaLocalDescriptorResolver.kt:44)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionFacadeImpl.resolveToDescriptor(ResolutionFacadeImpl.kt:67)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionUtils.resolveToDescriptor(resolutionApi.kt:42)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.getBundleNameByContext(referenceProviders.kt:67)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.access$getBundleNameByContext(referenceProviders.kt:1)
	at org.jetbrains.kotlin.idea.properties.KotlinPropertyKeyReferenceProvider.getReferencesByElement(referenceProviders.kt:132)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.getReferences(ReferenceProvidersRegistryImpl.java:135)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.mapNotEmptyReferencesFromProviders(ReferenceProvidersRegistryImpl.java:123)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.doGetReferencesFromProviders(ReferenceProvidersRegistryImpl.java:102)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistry.getReferencesFromProviders(ReferenceProvidersRegistry.java:66)
	at org.jetbrains.kotlin.psi.KtElementImpl.getReferences(KtElementImpl.java:91)
	at org.jetbrains.kotlin.idea.inspections.KotlinInvalidBundleOrPropertyInspection$buildVisitor$1.visitStringTemplateExpression(KotlinInvalidBundleOrPropertyInspection.kt:95)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitStringTemplateExpression(KtVisitorVoid.java:953)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitStringTemplateExpression(KtVisitorVoid.java:21)
	at org.jetbrains.kotlin.psi.KtStringTemplateExpression.accept(KtStringTemplateExpression.java:37)
	at org.jetbrains.kotlin.psi.KtElementImpl.accept(KtElementImpl.java:50)
	at com.intellij.codeInspection.InspectionEngine.acceptElements(InspectionEngine.java:81)
	at com.intellij.codeInspection.InspectionEngine.createVisitorAndAcceptElements(InspectionEngine.java:69)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.runToolOnElements(LocalInspectionsPass.java:282)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.lambda$visitPriorityElementsAndInit$3(LocalInspectionsPass.java:250)
	at com.intellij.concurrency.ApplierCompleter.execAndForkSubTasks(ApplierCompleter.java:133)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1156)
	at com.intellij.concurrency.ApplierCompleter.lambda$wrapInReadActionAndIndicator$1(ApplierCompleter.java:105)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.concurrency.ApplierCompleter.wrapInReadActionAndIndicator(ApplierCompleter.java:116)
	at com.intellij.concurrency.ApplierCompleter.lambda$compute$0(ApplierCompleter.java:96)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)
	at com.intellij.concurrency.ApplierCompleter.compute(ApplierCompleter.java:96)
	at java.util.concurrent.CountedCompleter.exec(CountedCompleter.java:731)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
2017-08-16 16:14:46,019 [ pool 8/12]  ERROR - aemon.impl.PassExecutorService - Android Studio 3.0 Canary 9  Build #AI-171.4220116 
2017-08-16 16:14:46,019 [ pool 8/12]  ERROR - aemon.impl.PassExecutorService - JDK: 1.8.0_152-release 
2017-08-16 16:14:46,019 [ pool 8/12]  ERROR - aemon.impl.PassExecutorService - VM: OpenJDK 64-Bit Server VM 
2017-08-16 16:14:46,019 [ pool 8/12]  ERROR - aemon.impl.PassExecutorService - Vendor: JetBrains s.r.o 
2017-08-16 16:14:46,019 [ pool 8/12]  ERROR - aemon.impl.PassExecutorService - OS: Linux 
2017-08-16 16:14:46,019 [ pool 8/12]  ERROR - aemon.impl.PassExecutorService - Last Action: EditorDown 
2017-08-16 16:14:46,924 [ pool 1/12]  ERROR - aemon.impl.PassExecutorService - Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-
 
org.jetbrains.kotlin.resolve.lazy.NoDescriptorForDeclarationException: Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-

	at org.jetbrains.kotlin.idea.project.IdeaAbsentDescriptorHandler.diagnoseDescriptorNotFound(IdeaLocalDescriptorResolver.kt:44)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionFacadeImpl.resolveToDescriptor(ResolutionFacadeImpl.kt:67)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionUtils.resolveToDescriptor(resolutionApi.kt:42)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.getBundleNameByContext(referenceProviders.kt:67)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.access$getBundleNameByContext(referenceProviders.kt:1)
	at org.jetbrains.kotlin.idea.properties.KotlinPropertyKeyReferenceProvider.getReferencesByElement(referenceProviders.kt:132)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.getReferences(ReferenceProvidersRegistryImpl.java:135)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.mapNotEmptyReferencesFromProviders(ReferenceProvidersRegistryImpl.java:123)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.doGetReferencesFromProviders(ReferenceProvidersRegistryImpl.java:102)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistry.getReferencesFromProviders(ReferenceProvidersRegistry.java:66)
	at org.jetbrains.kotlin.psi.KtElementImpl.getReferences(KtElementImpl.java:91)
	at org.jetbrains.kotlin.idea.inspections.KotlinInvalidBundleOrPropertyInspection$buildVisitor$1.visitStringTemplateExpression(KotlinInvalidBundleOrPropertyInspection.kt:95)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitStringTemplateExpression(KtVisitorVoid.java:953)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitStringTemplateExpression(KtVisitorVoid.java:21)
	at org.jetbrains.kotlin.psi.KtStringTemplateExpression.accept(KtStringTemplateExpression.java:37)
	at org.jetbrains.kotlin.psi.KtElementImpl.accept(KtElementImpl.java:50)
	at com.intellij.codeInspection.InspectionEngine.acceptElements(InspectionEngine.java:81)
	at com.intellij.codeInspection.InspectionEngine.createVisitorAndAcceptElements(InspectionEngine.java:69)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.runToolOnElements(LocalInspectionsPass.java:282)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.lambda$visitPriorityElementsAndInit$3(LocalInspectionsPass.java:250)
	at com.intellij.concurrency.ApplierCompleter.execAndForkSubTasks(ApplierCompleter.java:133)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1156)
	at com.intellij.concurrency.ApplierCompleter.lambda$wrapInReadActionAndIndicator$1(ApplierCompleter.java:105)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.concurrency.ApplierCompleter.wrapInReadActionAndIndicator(ApplierCompleter.java:116)
	at com.intellij.concurrency.ApplierCompleter.lambda$compute$0(ApplierCompleter.java:96)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)
	at com.intellij.concurrency.ApplierCompleter.compute(ApplierCompleter.java:96)
	at java.util.concurrent.CountedCompleter.exec(CountedCompleter.java:731)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
2017-08-16 16:14:46,925 [ pool 1/12]  ERROR - aemon.impl.PassExecutorService - Android Studio 3.0 Canary 9  Build #AI-171.4220116 
2017-08-16 16:14:46,925 [ pool 1/12]  ERROR - aemon.impl.PassExecutorService - JDK: 1.8.0_152-release 
2017-08-16 16:14:46,925 [ pool 1/12]  ERROR - aemon.impl.PassExecutorService - VM: OpenJDK 64-Bit Server VM 
2017-08-16 16:14:46,925 [ pool 1/12]  ERROR - aemon.impl.PassExecutorService - Vendor: JetBrains s.r.o 
2017-08-16 16:14:46,925 [ pool 1/12]  ERROR - aemon.impl.PassExecutorService - OS: Linux 
2017-08-16 16:14:46,925 [ pool 1/12]  ERROR - aemon.impl.PassExecutorService - Last Action: EditorDown 
2017-08-16 16:14:46,925 [ pool 1/12]  ERROR - aemon.impl.PassExecutorService - Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-
 
org.jetbrains.kotlin.resolve.lazy.NoDescriptorForDeclarationException: Descriptor wasn't found for declaration PROPERTY
File name: AdjustTracker.kt Physical: true Injected: false
object AdjustTracker {

    // TOKENS
    const val ADD_TO_CART_TOKEN = "gqs0r4"
    const val COMPLETE_CHECKOUT_TOKEN = "glb5sg"
    const val INITIATE_CHECKOUT_TOKEN = "xu2pjn"
    const val LOGIN_TOKEN = "xjtsem"
    const val PRODUCT_PIN_TOKEN = "23484p"
    const val PRODUCT_SEARCH_TOKEN = "gck8ze"
    const val PRODUCT_VIEW_TOKEN = "h4cpig"
    const val REGISTRATION_TOKEN = "po413t"
    const val PRODUCT_SHARE_TOKEN = "gejkxi"
    const val MARK_AS_CONFIRMED_TOKEN = "awwu8v"
    const val MARK_AS_PAID_TOKEN = "dq0pb1"
    const val MARK_AS_SENT_TOKEN = "tkvgqm"

    // CALLBACK KEYS
    const val REGISTRATION_KEY = "registration_type"
    const val LOGIN_KEY = "login_type"
    const val TYPE_FACEBOOK = "facebook"
    const val TYPE_EMAIL = "email"
    const val PRODUCT_ID_KEY = "product_id"
    const val PRODUCT_CATEGORY_KEY = "product_category"
    const val SHOP_ID_KEY = "shop_id"
    const val SEARCH_TERM_KEY = "searchterm"
    const val SCREENNAME_KEY = "screen_name"
    const val QUANTITY_KEY = "quantity"
    const val BASE_PRICE_KEY = "base_price"
    const val TOTAL_PRICE_KEY = "base_price"
    const val DEAL_KEY = "base_price"
    const val DEAL_VALUE_KEY = "base_price"
    const val CURRENCY_KEY = "base_price"

    // FB PARTNER KEYS
    const val FB_CONTENT_ID_KEY = "fb_content_id"
    const val FB_CONTENT_TYPE_KEY = "fb_content_type"
    const val FB_CONTENT_TYPE_PRODUCT_KEY = "product"
    const val FB_PRODUCT_VALUE_KEY = "_valueToSum"
    const val FB_CURRENCY_KEY = "fb_currency"

    enum class OrderActionType(val token: String) {
        MARK_AS_SENT(MARK_AS_SENT_TOKEN), MARK_AS_CONFIRMED(MARK_AS_CONFIRMED_TOKEN), MARK_AS_PAID(MARK_AS_PAID_TOKEN)
    }

    fun trackRegistration(registrationType: String) {
        val adjustEvent = AdjustEvent(REGISTRATION_TOKEN)
        adjustEvent.addCallbackParameter(REGISTRATION_KEY, registrationType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackLogin(loginType: String) {
        val adjustEvent = AdjustEvent(LOGIN_TOKEN)
        adjustEvent.addCallbackParameter(LOGIN_KEY, loginType)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackSearchResults(products: List<Product>, searchTerm: String?) {
        if (products.isEmpty()) return

        val productsSublist = if (products.size > 5) products.subList(0, 5) else products.subList(0, products.size)

        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(productsSublist)
        val adjustEvent = AdjustEvent(PRODUCT_SEARCH_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productCategories)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        if (searchTerm != null) adjustEvent.addCallbackParameter(SEARCH_TERM_KEY, searchTerm)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, productCategories)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductView(product: Product, screenName: String) {
        val adjustEvent = AdjustEvent(PRODUCT_VIEW_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(SCREENNAME_KEY, screenName)
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackProductPin(product: Product) {
        val adjustEvent = AdjustEvent(PRODUCT_PIN_TOKEN)
        addDefaultProductParamsToEvent(adjustEvent, product)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackShareProduct(productDetails: ProductDetails) {
        val adjustEvent = AdjustEvent(PRODUCT_SHARE_TOKEN)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productDetails.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, productDetails.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, productDetails.categoryId.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackAddToCart(product: ProductDetails, quantity: Int) {
        val adjustEvent = AdjustEvent(ADD_TO_CART_TOKEN)
        val total = PriceUtils.convertCentsToPrice((quantity.toLong() * product.price.cents)).toString()
        addDefaultProductParamsToEvent(adjustEvent, product)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantity.toString())
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, product.basePrice.priceAsLabel())
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        adjustEvent.addCallbackParameter(DEAL_KEY, product.isSpecialDiscount.toString())
        if (product.isSpecialDiscount) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.price.currency.toString())
        }
        if (product.salePercentage != null) {
            adjustEvent.addCallbackParameter(DEAL_VALUE_KEY, product.salePercentage.toString())
        }
        addDefaultFacebookPartnerParams(adjustEvent, product)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, product.price.currency.toString())
        Adjust.trackEvent(adjustEvent)
    }

    fun trackInitiateCheckout(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(INITIATE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackCheckoutCompleted(cartItems: CartItems) {
        val adjustEvent = AdjustEvent(COMPLETE_CHECKOUT_TOKEN)
        val total = getTotal(cartItems)
        val currency = cartItems.sellers.first().cartItems.first().product.price.currency.toString()
        val (productIds: String, shopIds: String, quantities: String, prices: String) = encodeCartItemsAsJsonStringArray(cartItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, shopIds)
        adjustEvent.addCallbackParameter(QUANTITY_KEY, quantities)
        adjustEvent.addCallbackParameter(BASE_PRICE_KEY, prices)
        adjustEvent.addCallbackParameter(CURRENCY_KEY, currency)
        adjustEvent.addCallbackParameter(TOTAL_PRICE_KEY, total)

        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, productIds)
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
        adjustEvent.addPartnerParameter(FB_CURRENCY_KEY, currency)
        adjustEvent.addPartnerParameter(FB_PRODUCT_VALUE_KEY, total)
        adjustEvent.setRevenue(total.toDouble(), currency)
        Adjust.trackEvent(adjustEvent)
    }

    fun trackOrderAction(orderDetails: OrderDetails, type: OrderActionType) {
        val adjustEvent = AdjustEvent(type.token)
        val (productIds: String, productCategories: String, shopIds: String) = encodeProductsAsJsonStringArray(orderDetails.orderItems)
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, productIds)
    }

    private fun addDefaultFacebookPartnerParams(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addPartnerParameter(FB_CONTENT_ID_KEY, product.id.toString())
        adjustEvent.addPartnerParameter(FB_CONTENT_TYPE_KEY, FB_CONTENT_TYPE_PRODUCT_KEY)
    }

    private fun addDefaultProductParamsToEvent(adjustEvent: AdjustEvent, product: Product) {
        adjustEvent.addCallbackParameter(PRODUCT_ID_KEY, product.id.toString())
        adjustEvent.addCallbackParameter(SHOP_ID_KEY, product.shop.id.toString())
        adjustEvent.addCallbackParameter(PRODUCT_CATEGORY_KEY, product.categoryId.toString())
    }

    private fun encodeCartItemsAsJsonStringArray(cartItems: CartItems): Quadruple<String, String, String, String> {
        var productIds: String = "["
        var shopIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (seller: CartSeller in cartItems.sellers) {
            for (cartItem: CartItem in seller.cartItems) {
                if (cartItem.product.isValid) {
                    productIds = productIds.plus(""""${cartItem.product.id}",""")
                    shopIds = shopIds.plus(""""${seller.shopId}",""")
                    quantities = quantities.plus(""""${cartItem.quantity}",""")
                    prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
                }
            }
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return Quadruple(productIds, shopIds, quantities, prices)
    }

    private fun encodeOrderItemsAsJsonStringArray(orderDetails: OrderDetails): Triple<String, String, String> {
        var productIds: String = "["
        var quantities: String = "["
        var prices: String = "["

        for (orderItem: OrderItem in orderDetails.orderItems) {
            productIds = productIds.plus(""""${orderItem.id}",""")
            shopIds = shopIds.plus(""""${orderDetails.}",""")
            quantities = quantities.plus(""""${cartItem.quantity}",""")
            prices = prices.plus(""""${cartItem.product.basePrice.priceAsDouble}",""")
        }
        productIds = replaceLastComma(productIds)
        shopIds = replaceLastComma(shopIds)
        quantities = replaceLastComma(quantities)
        prices = replaceLastComma(prices)
        return kotlin.Triple(productIds, shopIds, quantities, prices)
    }

    private fun encodeProductsAsJsonStringArray(products: List<IProduct>): Triple<String, String, String> {
        <caret>var productIds: String = "["
        var productCategories: String = "["
        var shopIds: String = "["

        for (iProduct: IProduct in products) {
            val product = iProduct.product
            productIds = productIds.plus(""""${product?.id}",""")
            productCategories = productCategories.plus(""""${product?.categoryId}",""")
            shopIds = shopIds.plus(""""${product?.shop?.id}",""")
        }
        productIds = replaceLastComma(productIds)
        productCategories = replaceLastComma(productCategories)
        shopIds = replaceLastComma(shopIds)
        return Triple(productIds, productCategories, shopIds)
    }

    private fun getTotal(cartItems: CartItems): String {
        val total: Double = cartItems.sellers
                .flatMap { it.cartItems }
                .filter { it.product.isValid }
                .sumByDouble { (it.quantity * it.product.price.cents).toDouble() }
        return (total / 100).toString()
    }

    private fun replaceLastComma(toReplace: String): String {
        var temp = toReplace
        var lastIndexOf = temp.lastIndexOf(",")
        temp = StringBuilder(temp).replace(lastIndexOf, lastIndexOf + 1, "]").toString()
        return temp
    }

    // small helper class to be able to return 4 objects in a method
    private data class Quadruple
    <out A, out B, out C, out D>(
            val first: A,
            val second: B,
            val third: C,
            val fourth: D
    )
}
---------------------------------------------------
PluginDeclarationProviderFactory
On failure:
-no synthetic files-
On creation:
-no synthetic files-

	at org.jetbrains.kotlin.idea.project.IdeaAbsentDescriptorHandler.diagnoseDescriptorNotFound(IdeaLocalDescriptorResolver.kt:44)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionFacadeImpl.resolveToDescriptor(ResolutionFacadeImpl.kt:67)
	at org.jetbrains.kotlin.idea.caches.resolve.ResolutionUtils.resolveToDescriptor(resolutionApi.kt:42)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.getBundleNameByContext(referenceProviders.kt:67)
	at org.jetbrains.kotlin.idea.properties.ReferenceProvidersKt.access$getBundleNameByContext(referenceProviders.kt:1)
	at org.jetbrains.kotlin.idea.properties.KotlinPropertyKeyReferenceProvider.getReferencesByElement(referenceProviders.kt:132)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.getReferences(ReferenceProvidersRegistryImpl.java:135)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.mapNotEmptyReferencesFromProviders(ReferenceProvidersRegistryImpl.java:123)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistryImpl.doGetReferencesFromProviders(ReferenceProvidersRegistryImpl.java:102)
	at com.intellij.psi.impl.source.resolve.reference.ReferenceProvidersRegistry.getReferencesFromProviders(ReferenceProvidersRegistry.java:66)
	at org.jetbrains.kotlin.psi.KtElementImpl.getReferences(KtElementImpl.java:91)
	at org.jetbrains.kotlin.idea.inspections.KotlinInvalidBundleOrPropertyInspection$buildVisitor$1.visitStringTemplateExpression(KotlinInvalidBundleOrPropertyInspection.kt:95)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitStringTemplateExpression(KtVisitorVoid.java:953)
	at org.jetbrains.kotlin.psi.KtVisitorVoid.visitStringTemplateExpression(KtVisitorVoid.java:21)
	at org.jetbrains.kotlin.psi.KtStringTemplateExpression.accept(KtStringTemplateExpression.java:37)
	at org.jetbrains.kotlin.psi.KtElementImpl.accept(KtElementImpl.java:50)
	at com.intellij.codeInspection.InspectionEngine.acceptElements(InspectionEngine.java:81)
	at com.intellij.codeInspection.InspectionEngine.createVisitorAndAcceptElements(InspectionEngine.java:69)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.runToolOnElements(LocalInspectionsPass.java:282)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.lambda$visitPriorityElementsAndInit$3(LocalInspectionsPass.java:250)
	at com.intellij.concurrency.ApplierCompleter.execAndForkSubTasks(ApplierCompleter.java:133)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1156)
	at com.intellij.concurrency.ApplierCompleter.lambda$wrapInReadActionAndIndicator$1(ApplierCompleter.java:105)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.concurrency.ApplierCompleter.wrapInReadActionAndIndicator(ApplierCompleter.java:116)
	at com.intellij.concurrency.ApplierCompleter.lambda$compute$0(ApplierCompleter.java:96)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:142)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:242)
	at com.intellij.concurrency.ApplierCompleter.compute(ApplierCompleter.java:96)
	at java.util.concurrent.CountedCompleter.exec(CountedCompleter.java:731)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
2017-08-16 16:14:46,925 [ pool 1/12]  ERROR - aemon.impl.PassExecutorService - Android Studio 3.0 Canary 9  Build #AI-171.4220116 
2017-08-16 16:14:46,925 [ pool 1/12]  ERROR - aemon.impl.PassExecutorService - JDK: 1.8.0_152-release 
2017-08-16 16:14:46,925 [ pool 1/12]  ERROR - aemon.impl.PassExecutorService - VM: OpenJDK 64-Bit Server VM 
2017-08-16 16:14:46,925 [ pool 1/12]  ERROR - aemon.impl.PassExecutorService - Vendor: JetBrains s.r.o 
2017-08-16 16:14:46,925 [ pool 1/12]  ERROR - aemon.impl.PassExecutorService - OS: Linux 
2017-08-16 16:14:46,925 [ pool 1/12]  ERROR - aemon.impl.PassExecutorService - Last Action: EditorDown 
2017-08-16 16:16:12,860 [ pool 0/12]   INFO - project.TargetPlatformDetector - Using default platform for file: Triple.class 
2017-08-16 16:21:55,537 [ pool 7/12]   INFO - project.TargetPlatformDetector - Using default platform for file: collections.kotlin_builtins 
2017-08-16 16:22:05,317 [pool 11/12]   INFO - project.TargetPlatformDetector - Using default platform for file: EmptyCoroutineContext.class 
2017-08-16 16:22:05,336 [pool 11/12]   INFO - project.TargetPlatformDetector - Using default platform for file: EmptyMap.class 
2017-08-16 16:22:05,347 [pool 11/12]   INFO - project.TargetPlatformDetector - Using default platform for file: EmptyList.class 
2017-08-16 16:22:05,456 [pool 11/12]   INFO - project.TargetPlatformDetector - Using default platform for file: SerializableKt.class 
2017-08-16 16:22:08,600 [ pool 1/12]   INFO - project.TargetPlatformDetector - Using default platform for file: kotlin.kotlin_builtins 
2017-08-16 16:28:03,210 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8601 for client with pid 12819 
2017-08-16 16:28:04,224 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8600 for client with pid 12819 
2017-08-16 16:28:04,235 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '11180': closed 
2017-08-16 16:28:04,452 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 16:28:04,452 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 16:28:04,452 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 16:28:04,460 [thread 198]   INFO -                    #InstantRun - Build timestamps: Local: 1502890152419, Device: 1502890152419 
2017-08-16 16:28:04,477 [thread 198]   WARN -                    #InstantRun - IOException while attempting to determine if app is in foreground, assuming app not alive 
2017-08-16 16:28:04,477 [thread 198]   WARN -                    #InstantRun - Force killing app 
2017-08-16 16:28:06,139 [thread 198]   INFO - ools.idea.fd.InstantRunBuilder - BuildCause: USER_CHOSE_TO_COLDSWAP, BuildMode: COLD 
2017-08-16 16:28:06,139 [se-884-b01]   INFO - ild.invoker.GradleBuildInvoker - About to execute Gradle tasks: [:buyer:assembleInternalDebug] 
2017-08-16 16:28:06,143 [thread 200]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 16:28:06,159 [thread 200]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 16:28:06,159 [thread 200]   INFO - ild.invoker.GradleBuildInvoker - Build command line options: [--configure-on-demand, -Pandroid.injected.invoked.from.ide=true, -Pandroid.injected.build.api=25, -Pandroid.injected.build.density=xxhdpi, -Pandroid.injected.build.abi=arm64-v8a,armeabi-v7a,armeabi, -Pandroid.injected.restrict.variant.name=internalDebug, -Pandroid.injected.restrict.variant.project=:buyer, -Pandroid.optional.compilation=INSTANT_DEV,RESTART_ONLY, -Pandroid.injected.coldswap.mode=MULTIAPK, --no-build-cache, --init-script, /tmp/sync.local.repo210.gradle] 
2017-08-16 16:28:06,159 [thread 200]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: --configure-on-demand -Pandroid.injected.invoked.from.ide=true -Pandroid.injected.build.api=25 -Pandroid.injected.build.density=xxhdpi -Pandroid.injected.build.abi=arm64-v8a,armeabi-v7a,armeabi -Pandroid.injected.restrict.variant.name=internalDebug -Pandroid.injected.restrict.variant.project=:buyer -Pandroid.optional.compilation=INSTANT_DEV,RESTART_ONLY -Pandroid.injected.coldswap.mode=MULTIAPK --no-build-cache --init-script /tmp/sync.local.repo210.gradle 
2017-08-16 16:28:41,995 [se-884-b01]   INFO - stubs.SerializationManagerImpl - START StubSerializationManager SHUTDOWN 
2017-08-16 16:28:41,995 [se-884-b01]   INFO - stubs.SerializationManagerImpl - END StubSerializationManager SHUTDOWN 
2017-08-16 16:28:41,997 [se-884-b01]   INFO - org.jetbrains.io.BuiltInServer - web server stopped 
2017-08-16 16:28:42,001 [se-884-b01]   INFO - Types.impl.FileTypeManagerImpl - FileTypeManager: 1210 auto-detected files
Elapsed time on auto-detect: 163 ms 
2017-08-16 16:28:42,002 [se-884-b01]   INFO - il.indexing.FileBasedIndexImpl - START INDEX SHUTDOWN 
2017-08-16 16:28:42,061 [se-884-b01]   INFO - il.indexing.FileBasedIndexImpl - END INDEX SHUTDOWN 
2017-08-16 16:28:42,064 [se-884-b01]   INFO - newvfs.persistent.PersistentFS - VFS dispose started 
2017-08-16 16:28:42,068 [se-884-b01]   INFO - newvfs.persistent.PersistentFS - VFS dispose completed 
2017-08-16 16:28:42,070 [se-884-b01]   INFO -   #com.intellij.util.Restarter - restart: [/home/matti/.AndroidStudioPreview3.0/system/tmp/patch-update/jre/bin/java, -Xmx750m, -cp, /home/matti/.AndroidStudioPreview3.0/system/tmp/patch-update/patch.jar:/home/matti/.AndroidStudioPreview3.0/system/tmp/patch-update/log4j.jar:/home/matti/.AndroidStudioPreview3.0/system/tmp/patch-update/jna.jar:/home/matti/.AndroidStudioPreview3.0/system/tmp/patch-update/jna-platform.jar, -Djna.nosys=true, -Djna.boot.library.path=, -Djna.debug_load=true, -Djna.debug_load.jna=true, -Djava.io.tmpdir=/home/matti/.AndroidStudioPreview3.0/system/tmp/patch-update, -Didea.updater.log=/home/matti/.AndroidStudioPreview3.0/system/log, -Dswing.defaultlaf=com.sun.java.swing.plaf.gtk.GTKLookAndFeel, com.intellij.updater.Runner, install, /home/matti/Tools/android-studio-canary/android-studio] 
2017-08-16 16:28:42,097 [ - logging]   INFO -        #com.intellij.idea.Main - ------------------------------------------------------ IDE SHUTDOWN ------------------------------------------------------ 
2017-08-16 16:28:42,098 [wn tracker]   INFO - org.jetbrains.io.BuiltInServer - web server stopped 
2017-08-16 16:29:35,300 [ain Thread]   INFO -        #com.intellij.idea.Main - ------------------------------------------------------ IDE STARTED ------------------------------------------------------ 
2017-08-16 16:29:35,309 [se-915-b01]   INFO -        #com.intellij.idea.Main - IDE: Android Studio (build #AI-171.4263559, 10 Aug 2017 20:35) 
2017-08-16 16:29:35,309 [se-915-b01]   INFO -        #com.intellij.idea.Main - OS: Linux (4.10.0-30-generic, amd64) 
2017-08-16 16:29:35,309 [se-915-b01]   INFO -        #com.intellij.idea.Main - JRE: 1.8.0_152-release-915-b01 (JetBrains s.r.o) 
2017-08-16 16:29:35,309 [se-915-b01]   INFO -        #com.intellij.idea.Main - JVM: 25.152-b01 (OpenJDK 64-Bit Server VM) 
2017-08-16 16:29:35,310 [se-915-b01]   INFO -        #com.intellij.idea.Main - JVM Args: -Xbootclasspath/a:/home/matti/Tools/android-studio-canary/android-studio/lib/boot.jar -Xms256m -Xmx1280m -XX:ReservedCodeCacheSize=240m -XX:+UseConcMarkSweepGC -XX:SoftRefLRUPolicyMSPerMB=50 -Dsun.io.useCanonCaches=false -Djava.net.preferIPv4Stack=true -Djna.nosys=true -Djna.boot.library.path= -XX:MaxJavaStackTraceDepth=-1 -XX:+HeapDumpOnOutOfMemoryError -XX:-OmitStackTraceInFastThrow -ea -Dawt.useSystemAAFontSettings=lcd -Dsun.java2d.renderer=sun.java2d.marlin.MarlinRenderingEngine -Xmx4g -XX:ErrorFile=/home/matti/java_error_in_STUDIO_%p.log -XX:HeapDumpPath=/home/matti/java_error_in_STUDIO.hprof -Didea.paths.selector=AndroidStudioPreview3.0 -Djb.vmOptionsFile=/home/matti/Tools/android-studio-canary/android-studio/bin/studio64.vmoptions,/home/matti/.AndroidStudioPreview3.0/studio64.vmoptions -Didea.platform.prefix=AndroidStudio -Didea.jre.check=true 
2017-08-16 16:29:35,310 [se-915-b01]   INFO -        #com.intellij.idea.Main - ext: /home/matti/Tools/android-studio-canary/android-studio/jre/jre/lib/ext: [cldrdata.jar, zipfs.jar, jaccess.jar, sunjce_provider.jar, localedata.jar, sunec.jar, meta-index, sunpkcs11.jar, nashorn.jar, dnsns.jar] 
2017-08-16 16:29:35,310 [se-915-b01]   INFO -        #com.intellij.idea.Main - JNU charset: ANSI_X3.4-1968 
2017-08-16 16:29:35,321 [se-915-b01]   INFO -        #com.intellij.idea.Main - JNA library (64-bit) loaded in 10 ms 
2017-08-16 16:29:35,355 [se-915-b01]   INFO -     #com.intellij.util.ui.JBUI - UI scale factor: 1.0 
2017-08-16 16:29:35,401 [entQueue-0]   INFO - .intellij.idea.IdeaApplication - WM detected: Compiz 
2017-08-16 16:29:35,703 [entQueue-0]   INFO - llij.ide.plugins.PluginManager - Cannot find optional descriptor duplicates-groovy.xml 
2017-08-16 16:29:35,968 [entQueue-0]   INFO - llij.ide.plugins.PluginManager - 38 plugins initialized in 417 ms 
2017-08-16 16:29:35,968 [entQueue-0]   INFO - llij.ide.plugins.PluginManager - Loaded bundled plugins: Android APK Support (1.0), Android Games (1.0), Android NDK Support (1.0), Android Support (10.3.0 Beta 2), App Links Assistant (0.1), CVS Integration (11), Copyright (8.1), Coverage (171.4249.39), EditorConfig (171.4249.39), Firebase App Indexing (0.1), Firebase Services (0.1), Firebase Testing (1.0), Git Integration (8.1), GitHub (171.4249.39), Google Cloud Tools Core (0.2.8), Google Cloud Tools For Android Studio (0.2.8), Google Developers Samples (0.3.1), Google Login (1.0), Google Services (0.1), Gradle (171.4249.39), Groovy (9.0), I18n for Java (171.4249.39), IDEA CORE (171.4249.39), IntelliLang (8.0), JUnit (1.0), Java Bytecode Decompiler (171.4249.39), Properties Support (171.4249.39), Settings Repository (171.4249.39), Smali Support (1.0), Subversion Integration (1.1), Task Management (1.0), Terminal (0.1), Test Recorder (1.0), TestNG-J (8.0), YAML (171.4249.39), hg4idea (10.0) 
2017-08-16 16:29:35,968 [entQueue-0]   INFO - llij.ide.plugins.PluginManager - Loaded custom plugins: Key promoter (3.1.1), Kotlin (1.1.4-release-Studio3.0-1) 
2017-08-16 16:29:36,377 [entQueue-0]   INFO - ij.components.ComponentManager - com.intellij.openapi.components.impl.ServiceManagerImpl initialized in 61 ms 
2017-08-16 16:29:36,419 [entQueue-0]   INFO - ellij.util.io.PagedFileStorage - lower=100; upper=500; buffer=10; max=3992 
2017-08-16 16:29:36,458 [entQueue-0]   INFO - ij.components.ComponentManager - com.intellij.openapi.vfs.newvfs.persistent.PersistentFSImpl initialized in 49 ms 
2017-08-16 16:29:36,461 [entQueue-0]   INFO - pl.local.NativeFileWatcherImpl - Starting file watcher: /home/matti/Tools/android-studio-canary/android-studio/bin/fsnotifier64 
2017-08-16 16:29:36,467 [entQueue-0]   INFO - pl.local.NativeFileWatcherImpl - Native file watcher is operational. 
2017-08-16 16:29:36,467 [entQueue-0]   INFO - ij.components.ComponentManager - com.intellij.openapi.vfs.impl.local.LocalFileSystemImpl initialized in 59 ms 
2017-08-16 16:29:36,470 [entQueue-0]   INFO - ij.components.ComponentManager - com.intellij.openapi.vfs.PlatformVirtualFileManager initialized in 63 ms 
2017-08-16 16:29:36,542 [entQueue-0]   INFO - pi.util.registry.RegistryState - Registry values changed by user: 
2017-08-16 16:29:36,542 [entQueue-0]   INFO - pi.util.registry.RegistryState -   search.everywhere.settings = true 
2017-08-16 16:29:36,542 [entQueue-0]   INFO - ij.components.ComponentManager - com.intellij.openapi.util.registry.RegistryState initialized in 22 ms 
2017-08-16 16:29:36,558 [entQueue-0]   INFO - ij.components.ComponentManager - com.intellij.internal.statistic.updater.SendStatisticsComponent initialized in 16 ms 
2017-08-16 16:29:36,688 [entQueue-0]   INFO - ij.components.ComponentManager - com.intellij.openapi.fileTypes.impl.FileTypeManagerImpl initialized in 127 ms 
2017-08-16 16:29:36,708 [entQueue-0]   INFO - ij.components.ComponentManager - com.intellij.openapi.keymap.impl.KeymapManagerImpl initialized in 16 ms 
2017-08-16 16:29:36,831 [entQueue-0]   INFO - ij.components.ComponentManager - com.intellij.openapi.actionSystem.impl.ActionManagerImpl initialized in 139 ms 
2017-08-16 16:29:36,839 [entQueue-0]   INFO - ij.components.ComponentManager - com.intellij.openapi.editor.impl.EditorFactoryImpl initialized in 147 ms 
2017-08-16 16:29:36,894 [entQueue-0]   INFO - ij.components.ComponentManager - com.intellij.ide.ui.laf.LafManagerImpl initialized in 44 ms 
2017-08-16 16:29:36,977 [entQueue-0]   INFO - til.net.ssl.CertificateManager - Default SSL context initialized 
2017-08-16 16:29:36,978 [entQueue-0]   INFO - ij.components.ComponentManager - com.intellij.util.net.ssl.CertificateManager initialized in 71 ms 
2017-08-16 16:29:37,027 [entQueue-0]   INFO - ij.components.ComponentManager - com.intellij.ide.SystemHealthMonitor initialized in 48 ms 
2017-08-16 16:29:37,034 [d thread 1]   INFO - rains.ide.BuiltInServerManager - built-in server started, port 63342 
2017-08-16 16:29:37,050 [entQueue-0]   INFO - gs.impl.UpdateCheckerComponent - channel: eap 
2017-08-16 16:29:37,069 [se-915-b01]   INFO - ij.components.ComponentManager - com.intellij.openapi.updateSettings.impl.UpdateCheckerComponent initialized in 21 ms 
2017-08-16 16:29:37,164 [se-915-b01]   INFO - il.indexing.FileBasedIndexImpl - Index exts enumerated:90 
2017-08-16 16:29:37,166 [se-915-b01]   INFO - il.indexing.FileBasedIndexImpl - Index scheduled:2 
2017-08-16 16:29:37,166 [se-915-b01]   INFO - ij.components.ComponentManager - com.intellij.util.indexing.FileBasedIndexImpl initialized in 96 ms 
2017-08-16 16:29:37,180 [se-915-b01]   INFO - tellij.psi.stubs.StubIndexImpl - All stub exts enumerated:10 
2017-08-16 16:29:37,180 [se-915-b01]   INFO - tellij.psi.stubs.StubIndexImpl - stub exts update scheduled:0 
2017-08-16 16:29:37,180 [se-915-b01]   INFO - ij.components.ComponentManager - com.intellij.psi.stubs.StubIndexImpl initialized in 14 ms 
2017-08-16 16:29:37,193 [se-915-b01]   INFO - j.ide.script.IdeStartupScripts - 0 startup script(s) found 
2017-08-16 16:29:37,331 [se-915-b01]   INFO - ij.components.ComponentManager - com.intellij.openapi.components.impl.ServiceManagerImpl initialized in 12 ms 
2017-08-16 16:29:37,372 [se-915-b01]   INFO - ij.components.ComponentManager - com.intellij.codeInsight.daemon.impl.DaemonCodeAnalyzerImpl initialized in 11 ms 
2017-08-16 16:29:37,443 [se-915-b01]   INFO - ij.components.ComponentManager - com.intellij.execution.impl.RunManagerImpl initialized in 63 ms 
2017-08-16 16:29:37,454 [se-915-b01]   INFO - ij.components.ComponentManager - com.intellij.openapi.vcs.impl.ProjectLevelVcsManagerImpl initialized in 11 ms 
2017-08-16 16:29:37,470 [se-915-b01]   INFO - ij.components.ComponentManager - com.intellij.profile.codeInspection.ProjectInspectionProfileManager initialized in 15 ms 
2017-08-16 16:29:37,484 [se-915-b01]   INFO - ellij.project.impl.ProjectImpl - 19 project components initialized in 197 ms 
2017-08-16 16:29:37,529 [d thread 1]   INFO - pl$FileIndexDataInitialization - Initialization done:363 
2017-08-16 16:29:37,563 [d thread 1]   INFO - exImpl$StubIndexInitialization - Initialization done:33 
2017-08-16 16:29:38,156 [se-915-b01]   INFO - ij.components.ComponentManager - com.android.tools.idea.AndroidInitialConfigurator initialized in 925 ms 
2017-08-16 16:29:38,290 [se-915-b01]   INFO - ij.components.ComponentManager - com.jetbrains.cidr.lang.dfa.contextSensitive.OCSourceGliderComponent initialized in 124 ms 
2017-08-16 16:29:38,303 [se-915-b01]   INFO - ij.components.ComponentManager - org.jetbrains.kotlin.idea.PluginStartupComponent initialized in 13 ms 
2017-08-16 16:29:38,304 [se-915-b01]   INFO - plication.impl.ApplicationImpl - 88 application components initialized in 2756ms 
2017-08-16 16:29:38,311 [se-915-b01]   INFO - .intellij.idea.IdeaApplication - App initialization took 3496 ms 
2017-08-16 16:29:38,897 [d thread 3]   INFO - ij.components.ComponentManager - com.intellij.openapi.wm.impl.ToolWindowManagerImpl initialized in 24 ms 
2017-08-16 16:29:38,981 [d thread 3]   INFO - ij.components.ComponentManager - com.intellij.openapi.vcs.changes.ChangesViewManager initialized in 51 ms 
2017-08-16 16:29:38,984 [d thread 2]   INFO - .openapi.application.Preloader - Finished preloading com.intellij.openapi.actionSystem.impl.ActionPreloader@2da91927 
2017-08-16 16:29:39,009 [d thread 3]   INFO - ij.components.ComponentManager - com.intellij.openapi.vcs.changes.ChangeListManagerImpl initialized in 82 ms 
2017-08-16 16:29:39,010 [d thread 3]   INFO - ij.components.ComponentManager - com.intellij.openapi.vcs.changes.VcsDirtyScopeManagerImpl initialized in 83 ms 
2017-08-16 16:29:39,023 [d thread 3]   INFO - ij.components.ComponentManager - com.intellij.codeInsight.daemon.impl.DaemonListeners initialized in 103 ms 
2017-08-16 16:29:39,039 [d thread 3]   INFO - ij.components.ComponentManager - com.intellij.codeInsight.daemon.impl.GeneralHighlightingPassFactory initialized in 11 ms 
2017-08-16 16:29:39,060 [d thread 3]   INFO - ij.components.ComponentManager - com.intellij.codeInsight.navigation.CtrlMouseHandler initialized in 11 ms 
2017-08-16 16:29:39,091 [d thread 3]   INFO - CompilerWorkspaceConfiguration - Available processors: 12 
2017-08-16 16:29:39,209 [d thread 3]   INFO - ij.components.ComponentManager - com.intellij.execution.impl.RunManagerImpl initialized in 115 ms 
2017-08-16 16:29:39,227 [d thread 3]   INFO - ij.components.ComponentManager - com.intellij.openapi.vcs.changes.patch.CreatePatchCommitExecutor initialized in 12 ms 
2017-08-16 16:29:39,251 [d thread 3]   INFO - ij.components.ComponentManager - com.intellij.openapi.vcs.changes.shelf.ShelvedChangesViewManager initialized in 20 ms 
2017-08-16 16:29:39,343 [d thread 3]   INFO - ij.components.ComponentManager - com.intellij.xdebugger.impl.XDebuggerManagerImpl initialized in 86 ms 
2017-08-16 16:29:39,392 [d thread 3]   INFO - ij.components.ComponentManager - com.intellij.remoteServer.util.importProject.CloudGitRemoteDetector initialized in 29 ms 
2017-08-16 16:29:39,416 [d thread 3]   INFO - ij.components.ComponentManager - com.intellij.tasks.impl.TaskManagerImpl initialized in 21 ms 
2017-08-16 16:29:39,562 [d thread 3]   INFO - ij.components.ComponentManager - com.jetbrains.cidr.lang.symbols.symtable.FileSymbolTablesCache initialized in 119 ms 
2017-08-16 16:29:39,587 [d thread 3]   INFO - ellij.project.impl.ProjectImpl - 151 project components initialized in 901 ms 
2017-08-16 16:29:39,636 [d thread 5]   INFO - ij.components.ComponentManager - com.intellij.openapi.roots.impl.ModuleRootManagerComponent initialized in 29 ms 
2017-08-16 16:29:39,651 [d thread 5]   INFO - ij.components.ComponentManager - com.intellij.facet.FacetManagerImpl initialized in 15 ms 
2017-08-16 16:29:39,712 [d thread 4]   INFO - ij.components.ComponentManager - com.intellij.openapi.roots.impl.ModuleRootManagerComponent initialized in 105 ms 
2017-08-16 16:29:39,731 [d thread 4]   INFO - ij.components.ComponentManager - com.intellij.facet.FacetManagerImpl initialized in 19 ms 
2017-08-16 16:29:39,731 [d thread 3]   INFO - le.impl.ModuleManagerComponent - 2 module(s) loaded in 143 ms 
2017-08-16 16:29:39,777 [d thread 2]   INFO - .openapi.application.Preloader - Finished preloading com.intellij.ide.ui.search.SearchableOptionPreloader@1360832b 
2017-08-16 16:29:40,007 [d thread 2]   INFO - .openapi.application.Preloader - Finished preloading com.intellij.codeInsight.completion.CompletionPreloader@464ae7f5 
2017-08-16 16:29:40,010 [d thread 1]   INFO - dea.updater.SdkComponentSource - Downloading file:/home/matti/Tools/android-studio-canary/android-studio/plugins/sdk-updates/offline-repo/offline-repo.xml 
2017-08-16 16:29:40,073 [d thread 1]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/repository2-1.xml 
2017-08-16 16:29:40,095 [notifier64]   WARN - api.vfs.impl.local.FileWatcher - The current <b>inotify</b>(7) watch limit is too low. <a href="https://confluence.jetbrains.com/display/IDEADEV/Inotify+Watches+Limit">More details.</a> 
2017-08-16 16:29:40,103 [notifier64]   WARN - pl.local.NativeFileWatcherImpl - Watcher terminated with exit code 3 
2017-08-16 16:29:40,103 [notifier64]   INFO - pl.local.NativeFileWatcherImpl - Starting file watcher: /home/matti/Tools/android-studio-canary/android-studio/bin/fsnotifier64 
2017-08-16 16:29:40,231 [notifier64]   WARN - api.vfs.impl.local.FileWatcher - The current <b>inotify</b>(7) watch limit is too low. <a href="https://confluence.jetbrains.com/display/IDEADEV/Inotify+Watches+Limit">More details.</a> 
2017-08-16 16:29:40,239 [notifier64]   WARN - pl.local.NativeFileWatcherImpl - Watcher terminated with exit code 3 
2017-08-16 16:29:40,239 [notifier64]   INFO - pl.local.NativeFileWatcherImpl - Starting file watcher: /home/matti/Tools/android-studio-canary/android-studio/bin/fsnotifier64 
2017-08-16 16:29:40,350 [d thread 1]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/addons_list-3.xml 
2017-08-16 16:29:40,386 [notifier64]   WARN - api.vfs.impl.local.FileWatcher - The current <b>inotify</b>(7) watch limit is too low. <a href="https://confluence.jetbrains.com/display/IDEADEV/Inotify+Watches+Limit">More details.</a> 
2017-08-16 16:29:40,395 [notifier64]   WARN - pl.local.NativeFileWatcherImpl - Watcher terminated with exit code 3 
2017-08-16 16:29:40,395 [notifier64]   INFO - pl.local.NativeFileWatcherImpl - Starting file watcher: /home/matti/Tools/android-studio-canary/android-studio/bin/fsnotifier64 
2017-08-16 16:29:40,450 [d thread 1]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/sys-img/android/sys-img2-1.xml 
2017-08-16 16:29:40,527 [notifier64]   WARN - api.vfs.impl.local.FileWatcher - The current <b>inotify</b>(7) watch limit is too low. <a href="https://confluence.jetbrains.com/display/IDEADEV/Inotify+Watches+Limit">More details.</a> 
2017-08-16 16:29:40,535 [notifier64]   WARN - pl.local.NativeFileWatcherImpl - Watcher terminated with exit code 3 
2017-08-16 16:29:40,536 [notifier64]   INFO - pl.local.NativeFileWatcherImpl - Starting file watcher: /home/matti/Tools/android-studio-canary/android-studio/bin/fsnotifier64 
2017-08-16 16:29:40,659 [notifier64]   WARN - api.vfs.impl.local.FileWatcher - The current <b>inotify</b>(7) watch limit is too low. <a href="https://confluence.jetbrains.com/display/IDEADEV/Inotify+Watches+Limit">More details.</a> 
2017-08-16 16:29:40,667 [notifier64]   WARN - pl.local.NativeFileWatcherImpl - Watcher terminated with exit code 3 
2017-08-16 16:29:40,667 [notifier64]   INFO - pl.local.NativeFileWatcherImpl - Starting file watcher: /home/matti/Tools/android-studio-canary/android-studio/bin/fsnotifier64 
2017-08-16 16:29:40,694 [d thread 1]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/sys-img/android-wear/sys-img2-1.xml 
2017-08-16 16:29:40,789 [notifier64]   WARN - api.vfs.impl.local.FileWatcher - The current <b>inotify</b>(7) watch limit is too low. <a href="https://confluence.jetbrains.com/display/IDEADEV/Inotify+Watches+Limit">More details.</a> 
2017-08-16 16:29:40,796 [notifier64]   WARN - pl.local.NativeFileWatcherImpl - Watcher terminated with exit code 3 
2017-08-16 16:29:40,796 [notifier64]   INFO - pl.local.NativeFileWatcherImpl - Starting file watcher: /home/matti/Tools/android-studio-canary/android-studio/bin/fsnotifier64 
2017-08-16 16:29:40,814 [d thread 4]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 346ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:29:40,843 [d thread 4]   INFO -       ScriptTemplatesProviders - [kts] loading script definitions [] using cp:  
2017-08-16 16:29:40,846 [d thread 4]   INFO -       ScriptTemplatesProviders - Templates provider KotlinCompilerScriptTemplatesSettings is invalid:  
2017-08-16 16:29:40,846 [d thread 4]   WARN - ript.ScriptDependenciesManager - [kts] Error loading definition from KotlinCompilerScriptTemplatesSettings 
java.lang.ClassNotFoundException: 
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.jetbrains.kotlin.script.ScriptTemplateProviderExtensionPointKt.makeScriptDefsFromTemplatesProviders(scriptTemplateProviderExtensionPoint.kt:76)
	at org.jetbrains.kotlin.script.ScriptTemplateProviderExtensionPointKt.makeScriptDefsFromTemplatesProviderExtensions(scriptTemplateProviderExtensionPoint.kt:66)
	at org.jetbrains.kotlin.idea.core.script.ScriptDependenciesManager.reloadScriptDefinitions(ScriptDependenciesManager.kt:57)
	at org.jetbrains.kotlin.idea.core.script.ScriptDependenciesManager.<init>(ScriptDependenciesManager.kt:50)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.picocontainer.defaults.InstantiatingComponentAdapter.newInstance(InstantiatingComponentAdapter.java:193)
	at com.intellij.util.pico.CachingConstructorInjectionComponentAdapter.doGetComponentInstance(CachingConstructorInjectionComponentAdapter.java:103)
	at com.intellij.util.pico.CachingConstructorInjectionComponentAdapter.instantiateGuarded(CachingConstructorInjectionComponentAdapter.java:80)
	at com.intellij.util.pico.CachingConstructorInjectionComponentAdapter.getComponentInstance(CachingConstructorInjectionComponentAdapter.java:63)
	at com.intellij.openapi.components.impl.ServiceManagerImpl$MyComponentAdapter.getComponentInstance(ServiceManagerImpl.java:228)
	at com.intellij.util.pico.DefaultPicoContainer.getLocalInstance(DefaultPicoContainer.java:239)
	at com.intellij.util.pico.DefaultPicoContainer.getComponentInstance(DefaultPicoContainer.java:206)
	at com.intellij.openapi.components.ServiceManager.doGetService(ServiceManager.java:48)
	at com.intellij.openapi.components.ServiceManager.getService(ServiceManager.java:42)
	at org.jetbrains.kotlin.idea.core.script.ScriptDependenciesManager$Companion.getInstance(ScriptDependenciesManager.kt:69)
	at org.jetbrains.kotlin.idea.core.script.dependencies.KotlinScriptDependenciesIndexableSetContributor.getAdditionalProjectRootsToIndex(KotlinScriptDependenciesIndexableSetContributor.kt:27)
	at com.intellij.util.indexing.IndexableSetContributor.getProjectRootsToIndex(IndexableSetContributor.java:38)
	at com.intellij.util.indexing.FileBasedIndexScanRunnableCollectorImpl.collectScanRootRunnables(FileBasedIndexScanRunnableCollectorImpl.java:84)
	at com.intellij.util.indexing.FileBasedIndexImpl.collectScanRootRunnables(FileBasedIndexImpl.java:2218)
	at com.intellij.util.indexing.FileBasedIndexImpl.iterateIndexableFilesConcurrently(FileBasedIndexImpl.java:2205)
	at com.intellij.util.indexing.UnindexedFilesUpdater.updateUnindexedFiles(UnindexedFilesUpdater.java:75)
	at com.intellij.util.indexing.UnindexedFilesUpdater.performInDumbMode(UnindexedFilesUpdater.java:112)
	at com.intellij.openapi.project.DumbServiceImpl.lambda$runSingleTask$9(DumbServiceImpl.java:479)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.project.DumbServiceImpl.runSingleTask(DumbServiceImpl.java:472)
	at com.intellij.openapi.project.DumbServiceImpl.runBackgroundProcess(DumbServiceImpl.java:456)
	at com.intellij.openapi.project.DumbServiceImpl.access$100(DumbServiceImpl.java:63)
	at com.intellij.openapi.project.DumbServiceImpl$3.run(DumbServiceImpl.java:417)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2017-08-16 16:29:40,855 [d thread 1]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/sys-img/android-wear-cn/sys-img2-1.xml 
2017-08-16 16:29:40,891 [d thread 4]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 16:29:40,892 [d thread 4]   INFO -       ScriptTemplatesProviders - [kts] loading script definitions [org.gradle.kotlin.dsl.KotlinBuildScript] using cp: /home/matti/.gradle/wrapper/dists/gradle-4.1-rc-1-all/936kh1brdchce6fvd2c1o8t8x/gradle-4.1-rc-1/lib/gradle-kotlin-dsl-compiler-plugin-0.10.3.jar:/home/matti/.gradle/wrapper/dists/gradle-4.1-rc-1-all/936kh1brdchce6fvd2c1o8t8x/gradle-4.1-rc-1/lib/gradle-kotlin-dsl-0.10.3.jar:/home/matti/.gradle/wrapper/dists/gradle-4.1-rc-1-all/936kh1brdchce6fvd2c1o8t8x/gradle-4.1-rc-1/lib/gradle-kotlin-dsl-tooling-builders-0.10.3.jar:/home/matti/.gradle/wrapper/dists/gradle-4.1-rc-1-all/936kh1brdchce6fvd2c1o8t8x/gradle-4.1-rc-1/lib/gradle-kotlin-dsl-tooling-models-0.10.3.jar:/home/matti/.gradle/wrapper/dists/gradle-4.1-rc-1-all/936kh1brdchce6fvd2c1o8t8x/gradle-4.1-rc-1/lib/gradle-core-4.1.jar:/home/matti/.gradle/wrapper/dists/gradle-4.1-rc-1-all/936kh1brdchce6fvd2c1o8t8x/gradle-4.1-rc-1/lib/kotlin-compiler-embeddable-1.1.3-2.jar 
2017-08-16 16:29:40,923 [d thread 4]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 16:29:40,923 [d thread 4]   INFO -       ScriptTemplatesProviders - [kts] loading script definitions [org.gradle.script.lang.kotlin.KotlinBuildScript] using cp: /home/matti/.gradle/wrapper/dists/gradle-4.1-rc-1-all/936kh1brdchce6fvd2c1o8t8x/gradle-4.1-rc-1/lib/gradle-core-4.1.jar 
2017-08-16 16:29:40,924 [d thread 4]   INFO -       ScriptTemplatesProviders - Templates provider Gradle Script Kotlin is invalid: org.gradle.script.lang.kotlin.KotlinBuildScript 
2017-08-16 16:29:40,924 [d thread 4]   WARN - ript.ScriptDependenciesManager - [kts] Error loading definition from Gradle Script Kotlin 
java.lang.ClassNotFoundException: org.gradle.script.lang.kotlin.KotlinBuildScript
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at org.jetbrains.kotlin.script.ScriptTemplateProviderExtensionPointKt.makeScriptDefsFromTemplatesProviders(scriptTemplateProviderExtensionPoint.kt:76)
	at org.jetbrains.kotlin.script.ScriptTemplateProviderExtensionPointKt.makeScriptDefsFromTemplatesProviderExtensions(scriptTemplateProviderExtensionPoint.kt:66)
	at org.jetbrains.kotlin.idea.core.script.ScriptDependenciesManager.reloadScriptDefinitions(ScriptDependenciesManager.kt:57)
	at org.jetbrains.kotlin.idea.core.script.ScriptDependenciesManager.<init>(ScriptDependenciesManager.kt:50)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.picocontainer.defaults.InstantiatingComponentAdapter.newInstance(InstantiatingComponentAdapter.java:193)
	at com.intellij.util.pico.CachingConstructorInjectionComponentAdapter.doGetComponentInstance(CachingConstructorInjectionComponentAdapter.java:103)
	at com.intellij.util.pico.CachingConstructorInjectionComponentAdapter.instantiateGuarded(CachingConstructorInjectionComponentAdapter.java:80)
	at com.intellij.util.pico.CachingConstructorInjectionComponentAdapter.getComponentInstance(CachingConstructorInjectionComponentAdapter.java:63)
	at com.intellij.openapi.components.impl.ServiceManagerImpl$MyComponentAdapter.getComponentInstance(ServiceManagerImpl.java:228)
	at com.intellij.util.pico.DefaultPicoContainer.getLocalInstance(DefaultPicoContainer.java:239)
	at com.intellij.util.pico.DefaultPicoContainer.getComponentInstance(DefaultPicoContainer.java:206)
	at com.intellij.openapi.components.ServiceManager.doGetService(ServiceManager.java:48)
	at com.intellij.openapi.components.ServiceManager.getService(ServiceManager.java:42)
	at org.jetbrains.kotlin.idea.core.script.ScriptDependenciesManager$Companion.getInstance(ScriptDependenciesManager.kt:69)
	at org.jetbrains.kotlin.idea.core.script.dependencies.KotlinScriptDependenciesIndexableSetContributor.getAdditionalProjectRootsToIndex(KotlinScriptDependenciesIndexableSetContributor.kt:27)
	at com.intellij.util.indexing.IndexableSetContributor.getProjectRootsToIndex(IndexableSetContributor.java:38)
	at com.intellij.util.indexing.FileBasedIndexScanRunnableCollectorImpl.collectScanRootRunnables(FileBasedIndexScanRunnableCollectorImpl.java:84)
	at com.intellij.util.indexing.FileBasedIndexImpl.collectScanRootRunnables(FileBasedIndexImpl.java:2218)
	at com.intellij.util.indexing.FileBasedIndexImpl.iterateIndexableFilesConcurrently(FileBasedIndexImpl.java:2205)
	at com.intellij.util.indexing.UnindexedFilesUpdater.updateUnindexedFiles(UnindexedFilesUpdater.java:75)
	at com.intellij.util.indexing.UnindexedFilesUpdater.performInDumbMode(UnindexedFilesUpdater.java:112)
	at com.intellij.openapi.project.DumbServiceImpl.lambda$runSingleTask$9(DumbServiceImpl.java:479)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.project.DumbServiceImpl.runSingleTask(DumbServiceImpl.java:472)
	at com.intellij.openapi.project.DumbServiceImpl.runBackgroundProcess(DumbServiceImpl.java:456)
	at com.intellij.openapi.project.DumbServiceImpl.access$100(DumbServiceImpl.java:63)
	at com.intellij.openapi.project.DumbServiceImpl$3.run(DumbServiceImpl.java:417)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2017-08-16 16:29:40,925 [d thread 4]   INFO -       ScriptTemplatesProviders - [kts] loading script definitions [kotlin.script.templates.standard.ScriptTemplateWithArgs] using cp:  
2017-08-16 16:29:40,934 [notifier64]   WARN - api.vfs.impl.local.FileWatcher - The current <b>inotify</b>(7) watch limit is too low. <a href="https://confluence.jetbrains.com/display/IDEADEV/Inotify+Watches+Limit">More details.</a> 
2017-08-16 16:29:40,945 [notifier64]   WARN - pl.local.NativeFileWatcherImpl - Watcher terminated with exit code 3 
2017-08-16 16:29:40,945 [notifier64]   INFO - pl.local.NativeFileWatcherImpl - Starting file watcher: /home/matti/Tools/android-studio-canary/android-studio/bin/fsnotifier64 
2017-08-16 16:29:41,080 [d thread 1]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/sys-img/android-tv/sys-img2-1.xml 
2017-08-16 16:29:41,098 [notifier64]   WARN - api.vfs.impl.local.FileWatcher - The current <b>inotify</b>(7) watch limit is too low. <a href="https://confluence.jetbrains.com/display/IDEADEV/Inotify+Watches+Limit">More details.</a> 
2017-08-16 16:29:41,108 [notifier64]   WARN - pl.local.NativeFileWatcherImpl - Watcher terminated with exit code 3 
2017-08-16 16:29:41,108 [notifier64]   INFO - pl.local.NativeFileWatcherImpl - Starting file watcher: /home/matti/Tools/android-studio-canary/android-studio/bin/fsnotifier64 
2017-08-16 16:29:41,250 [notifier64]   WARN - api.vfs.impl.local.FileWatcher - The current <b>inotify</b>(7) watch limit is too low. <a href="https://confluence.jetbrains.com/display/IDEADEV/Inotify+Watches+Limit">More details.</a> 
2017-08-16 16:29:41,260 [notifier64]   WARN - pl.local.NativeFileWatcherImpl - Watcher terminated with exit code 3 
2017-08-16 16:29:41,260 [notifier64]   INFO - pl.local.NativeFileWatcherImpl - Starting file watcher: /home/matti/Tools/android-studio-canary/android-studio/bin/fsnotifier64 
2017-08-16 16:29:41,270 [d thread 1]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/sys-img/google_apis/sys-img2-1.xml 
2017-08-16 16:29:41,408 [notifier64]   WARN - api.vfs.impl.local.FileWatcher - The current <b>inotify</b>(7) watch limit is too low. <a href="https://confluence.jetbrains.com/display/IDEADEV/Inotify+Watches+Limit">More details.</a> 
2017-08-16 16:29:41,418 [notifier64]   WARN - pl.local.NativeFileWatcherImpl - Watcher terminated with exit code 3 
2017-08-16 16:29:41,418 [notifier64]   INFO - pl.local.NativeFileWatcherImpl - Starting file watcher: /home/matti/Tools/android-studio-canary/android-studio/bin/fsnotifier64 
2017-08-16 16:29:41,478 [d thread 1]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/sys-img/google_apis_playstore/sys-img2-1.xml 
2017-08-16 16:29:41,583 [notifier64]   WARN - api.vfs.impl.local.FileWatcher - The current <b>inotify</b>(7) watch limit is too low. <a href="https://confluence.jetbrains.com/display/IDEADEV/Inotify+Watches+Limit">More details.</a> 
2017-08-16 16:29:41,598 [notifier64]   WARN - pl.local.NativeFileWatcherImpl - Watcher terminated with exit code 3 
2017-08-16 16:29:41,598 [notifier64]   WARN - api.vfs.impl.local.FileWatcher - File watcher failed to start 
2017-08-16 16:29:41,650 [d thread 1]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/addon2-1.xml 
2017-08-16 16:29:41,929 [d thread 1]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/glass/addon2-1.xml 
2017-08-16 16:29:42,085 [d thread 1]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/extras/intel/addon2-1.xml 
2017-08-16 16:29:42,150 [d thread 4]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 1334ms; general responsiveness: ok; EDT responsiveness: 1/2 sluggish 
2017-08-16 16:29:42,262 [d thread 1]   WARN - dea.updater.SdkComponentSource - File /home/matti/.android/repositories.cfg could not be loaded. 
2017-08-16 16:29:42,284 [d thread 4]   INFO -       #com.jetbrains.cidr.lang - Clearing symbols finished in 0 s. 
2017-08-16 16:29:42,294 [d thread 3]   INFO - tartup.impl.StartupManagerImpl - OpenFilesActivity run in 1827 
2017-08-16 16:29:42,296 [d thread 4]   INFO -       #com.jetbrains.cidr.lang - Loading symbols finished in 0 s. 
2017-08-16 16:29:42,301 [d thread 4]   INFO -       #com.jetbrains.cidr.lang - Building symbols finished in 0 s. 
2017-08-16 16:29:42,305 [d thread 4]   INFO -       #com.jetbrains.cidr.lang - Saving symbols finished in 0 s. 
2017-08-16 16:29:43,779 [se-915-b01]   INFO - tartup.impl.StartupManagerImpl - ExternalSystemStartupActivity run in 281 
2017-08-16 16:29:43,852 [se-915-b01]   INFO - tartup.impl.StartupManagerImpl - /home/matti/Development/dawanda/AndroidNative/.idea case-sensitivity: expected=true actual=true 
2017-08-16 16:29:44,149 [cessToken]]   INFO - pl.ProjectRootManagerComponent - project roots have changed 
2017-08-16 16:29:44,318 [se-915-b01]   INFO - e.project.sync.GradleSyncState - Started sync with Gradle for project 'AndroidNative'. 
2017-08-16 16:29:44,338 [se-915-b01]   INFO - e.project.sync.GradleSyncState - Started setup of project 'AndroidNative'. 
2017-08-16 16:29:44,480 [se-915-b01]   INFO - tor.impl.FileEditorManagerImpl - Project opening took 5852 ms 
2017-08-16 16:29:44,902 [se-915-b01]   WARN - tectAndAdjustIndentOptionsTask - Indent detection is too long for: OrderItem.java 
2017-08-16 16:29:44,902 [se-915-b01]   WARN - tectAndAdjustIndentOptionsTask - Indent detection is too long for: AdjustHelper.kt 
2017-08-16 16:29:44,902 [se-915-b01]   WARN - tectAndAdjustIndentOptionsTask - Indent detection is too long for: OrderPurchaseStatusViewHolder.java 
2017-08-16 16:29:44,902 [se-915-b01]   WARN - tectAndAdjustIndentOptionsTask - Indent detection is too long for: OrderDetailsPresenter.java 
2017-08-16 16:29:44,902 [se-915-b01]   WARN - tectAndAdjustIndentOptionsTask - Indent detection is too long for: MultiUseIntentService.java 
2017-08-16 16:29:44,902 [se-915-b01]   WARN - tectAndAdjustIndentOptionsTask - Indent detection is too long for: AuthManager.java 
2017-08-16 16:29:44,902 [se-915-b01]   WARN - tectAndAdjustIndentOptionsTask - Indent detection is too long for: OauthInterceptor.java 
2017-08-16 16:29:44,902 [se-915-b01]   WARN - tectAndAdjustIndentOptionsTask - Indent detection is too long for: GaProductProperties.java 
2017-08-16 16:29:44,902 [se-915-b01]   WARN - tectAndAdjustIndentOptionsTask - Indent detection is too long for: GoogleTrackingHelper.java 
2017-08-16 16:29:44,902 [se-915-b01]   WARN - tectAndAdjustIndentOptionsTask - Indent detection is too long for: DaWandaShareRequester.java 
2017-08-16 16:29:44,902 [se-915-b01]   WARN - tectAndAdjustIndentOptionsTask - Indent detection is too long for: FireBaseShortLinkParams.java 
2017-08-16 16:29:44,902 [se-915-b01]   WARN - tectAndAdjustIndentOptionsTask - Indent detection is too long for: PlayAnalytics.java 
2017-08-16 16:29:44,902 [se-915-b01]   WARN - tectAndAdjustIndentOptionsTask - Indent detection is too long for: IosInfo.java 
2017-08-16 16:29:44,902 [se-915-b01]   WARN - tectAndAdjustIndentOptionsTask - Indent detection is too long for: DynamicLinkInfo.java 
2017-08-16 16:29:46,261 [se-915-b01]   INFO - pl.ProjectRootManagerComponent - project roots have changed 
2017-08-16 16:29:46,273 [d thread 8]   INFO - etup.post.PluginVersionUpgrade - Gradle model version: 3.0.0-alpha9, recommended version for IDE: 3.0.0-beta2 
2017-08-16 16:29:46,274 [d thread 8]   INFO - e.project.sync.GradleSyncState - Gradle sync finished in 1s 956ms 
2017-08-16 16:29:51,140 [d thread 8]   INFO - e.project.sync.GradleSyncState - Gradle sync finished in 51yr 9mo 0w 6d 14h 29m 51s 140ms 
2017-08-16 16:29:51,235 [se-915-b01]   INFO - e.project.sync.GradleSyncState - Started sync with Gradle for project 'AndroidNative'. 
2017-08-16 16:29:51,264 [d thread 8]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 16:29:51,266 [d thread 8]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 16:29:51,906 [d thread 8]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 16:29:51,910 [d thread 8]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: -Didea.version=3.0 -Djava.awt.headless=true -Pandroid.injected.build.model.only=true -Pandroid.injected.build.model.only.advanced=true -Pandroid.injected.invoked.from.ide=true -Pandroid.injected.build.model.only.versioned=3 -Pandroid.injected.studio.version=3.0.0.10 --init-script /tmp/sync.local.repo.gradle --init-script /tmp/ijinit.gradle 
2017-08-16 16:29:52,566 [d thread 4]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 6ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:29:52,823 [d thread 4]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 257ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:29:52,823 [d thread 4]   INFO - indexing.UnindexedFilesUpdater - Unindexed files update started: 1 files to update 
2017-08-16 16:29:52,924 [d thread 4]   INFO - .diagnostic.PerformanceWatcher - Unindexed files update took 101ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:29:52,926 [d thread 4]   INFO -       #com.jetbrains.cidr.lang - Clearing symbols finished in 0 s. 
2017-08-16 16:29:52,930 [d thread 4]   INFO -       #com.jetbrains.cidr.lang - Loading symbols finished in 0 s. 
2017-08-16 16:29:52,931 [d thread 4]   INFO -       #com.jetbrains.cidr.lang - Building symbols finished in 0 s. 
2017-08-16 16:29:52,931 [d thread 4]   INFO -       #com.jetbrains.cidr.lang - Saving symbols finished in 0 s. 
2017-08-16 16:29:52,932 [d thread 4]   INFO -       #com.jetbrains.cidr.lang - Clearing symbols finished in 0 s. 
2017-08-16 16:29:52,934 [d thread 4]   INFO -       #com.jetbrains.cidr.lang - Loading symbols finished in 0 s. 
2017-08-16 16:29:52,935 [d thread 4]   INFO -       #com.jetbrains.cidr.lang - Building symbols finished in 0 s. 
2017-08-16 16:29:52,935 [d thread 4]   INFO -       #com.jetbrains.cidr.lang - Saving symbols finished in 0 s. 
2017-08-16 16:30:01,130 [d thread 8]   INFO - .project.GradleProjectResolver - Gradle project resolve error 
java.lang.NullPointerException
	at sun.nio.fs.UnixPath.normalizeAndCheck(UnixPath.java:77)
	at sun.nio.fs.UnixPath.<init>(UnixPath.java:71)
	at sun.nio.fs.UnixFileSystem.getPath(UnixFileSystem.java:281)
	at java.nio.file.Paths.get(Paths.java:84)
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputPath(BuildOutput.java:222)
	at com.android.build.gradle.internal.scope.BuildOutputs.lambda$load$2(BuildOutputs.java:243)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1376)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:245)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:184)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:140)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.lambda$get$1(BuildOutputsSupplier.java:55)
	at com.google.common.collect.ImmutableList.forEach(ImmutableList.java:397)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:50)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:35)
	at com.android.build.gradle.internal.ide.AndroidArtifactImpl.getOutputs(AndroidArtifactImpl.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy196.getOutputs(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$0(IdeVariantImpl.java:60)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:59)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2017-08-16 16:30:01,132 [d thread 8]   WARN - nal.AbstractExternalSystemTask - Cause: java.lang.NullPointerException
	at sun.nio.fs.UnixPath.normalizeAndCheck(UnixPath.java:77)
	at sun.nio.fs.UnixPath.<init>(UnixPath.java:71)
	at sun.nio.fs.UnixFileSystem.getPath(UnixFileSystem.java:281)
	at java.nio.file.Paths.get(Paths.java:84)
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputPath(BuildOutput.java:222)
	at com.android.build.gradle.internal.scope.BuildOutputs.lambda$load$2(BuildOutputs.java:243)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1376)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:245)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:184)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:140)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.lambda$get$1(BuildOutputsSupplier.java:55)
	at com.google.common.collect.ImmutableList.forEach(ImmutableList.java:397)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:50)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:35)
	at com.android.build.gradle.internal.ide.AndroidArtifactImpl.getOutputs(AndroidArtifactImpl.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy196.getOutputs(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$0(IdeVariantImpl.java:60)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:59)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
 
com.intellij.openapi.externalSystem.model.ExternalSystemException: Cause: java.lang.NullPointerException
	at sun.nio.fs.UnixPath.normalizeAndCheck(UnixPath.java:77)
	at sun.nio.fs.UnixPath.<init>(UnixPath.java:71)
	at sun.nio.fs.UnixFileSystem.getPath(UnixFileSystem.java:281)
	at java.nio.file.Paths.get(Paths.java:84)
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputPath(BuildOutput.java:222)
	at com.android.build.gradle.internal.scope.BuildOutputs.lambda$load$2(BuildOutputs.java:243)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1376)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:245)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:184)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:140)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.lambda$get$1(BuildOutputsSupplier.java:55)
	at com.google.common.collect.ImmutableList.forEach(ImmutableList.java:397)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:50)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:35)
	at com.android.build.gradle.internal.ide.AndroidArtifactImpl.getOutputs(AndroidArtifactImpl.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy196.getOutputs(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$0(IdeVariantImpl.java:60)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:59)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

	at com.android.tools.idea.gradle.project.sync.idea.ProjectImportErrorHandler.getUserFriendlyError(ProjectImportErrorHandler.java:85)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.getUserFriendlyError(AndroidGradleProjectResolver.java:414)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.getUserFriendlyError(AbstractProjectResolverExtension.java:158)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:906)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
	at sun.nio.fs.UnixPath.normalizeAndCheck(UnixPath.java:77)
	at sun.nio.fs.UnixPath.<init>(UnixPath.java:71)
	at sun.nio.fs.UnixFileSystem.getPath(UnixFileSystem.java:281)
	at java.nio.file.Paths.get(Paths.java:84)
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputPath(BuildOutput.java:222)
	at com.android.build.gradle.internal.scope.BuildOutputs.lambda$load$2(BuildOutputs.java:243)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1376)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:245)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:184)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:140)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.lambda$get$1(BuildOutputsSupplier.java:55)
	at com.google.common.collect.ImmutableList.forEach(ImmutableList.java:397)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:50)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:35)
	at com.android.build.gradle.internal.ide.AndroidArtifactImpl.getOutputs(AndroidArtifactImpl.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy196.getOutputs(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$0(IdeVariantImpl.java:60)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:59)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	... 26 more

2017-08-16 16:30:01,135 [d thread 8]   WARN - ect.sync.idea.ProjectSetUpTask - Cause: java.lang.NullPointerException
	at sun.nio.fs.UnixPath.normalizeAndCheck(UnixPath.java:77)
	at sun.nio.fs.UnixPath.<init>(UnixPath.java:71)
	at sun.nio.fs.UnixFileSystem.getPath(UnixFileSystem.java:281)
	at java.nio.file.Paths.get(Paths.java:84)
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputPath(BuildOutput.java:222)
	at com.android.build.gradle.internal.scope.BuildOutputs.lambda$load$2(BuildOutputs.java:243)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1376)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:245)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:184)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:140)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.lambda$get$1(BuildOutputsSupplier.java:55)
	at com.google.common.collect.ImmutableList.forEach(ImmutableList.java:397)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:50)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:35)
	at com.android.build.gradle.internal.ide.AndroidArtifactImpl.getOutputs(AndroidArtifactImpl.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy196.getOutputs(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$0(IdeVariantImpl.java:60)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:59)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)


Consult IDE log for more details (Help | Show Log) 
2017-08-16 16:30:01,136 [d thread 8]   INFO - e.project.sync.GradleSyncState - Gradle sync failed: Cause: java.lang.NullPointerException
	at sun.nio.fs.UnixPath.normalizeAndCheck(UnixPath.java:77)
	at sun.nio.fs.UnixPath.<init>(UnixPath.java:71)
	at sun.nio.fs.UnixFileSystem.getPath(UnixFileSystem.java:281)
	at java.nio.file.Paths.get(Paths.java:84)
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputPath(BuildOutput.java:222)
	at com.android.build.gradle.internal.scope.BuildOutputs.lambda$load$2(BuildOutputs.java:243)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1376)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:245)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:184)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:140)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.lambda$get$1(BuildOutputsSupplier.java:55)
	at com.google.common.collect.ImmutableList.forEach(ImmutableList.java:397)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:50)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:35)
	at com.android.build.gradle.internal.ide.AndroidArtifactImpl.getOutputs(AndroidArtifactImpl.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy196.getOutputs(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$0(IdeVariantImpl.java:60)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:59)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)


Consult IDE log for more details (Help | Show Log) (9s 901ms) 
2017-08-16 16:30:06,022 [d thread 8]   INFO -       #com.jetbrains.cidr.lang - Clearing symbols finished in 0 s. 
2017-08-16 16:30:06,028 [d thread 8]   INFO -       #com.jetbrains.cidr.lang - Loading symbols finished in 0 s. 
2017-08-16 16:30:06,029 [d thread 8]   INFO -       #com.jetbrains.cidr.lang - Building symbols finished in 0 s. 
2017-08-16 16:30:06,029 [d thread 8]   INFO -       #com.jetbrains.cidr.lang - Saving symbols finished in 0 s. 
2017-08-16 16:31:52,987 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - About to execute Gradle tasks: [clean, :buyer:generateInternalDebugSources] 
2017-08-16 16:31:53,000 [d thread 4]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 16:31:53,111 [d thread 4]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 16:31:53,111 [d thread 4]   INFO - ild.invoker.GradleBuildInvoker - Build command line options: [--configure-on-demand, -Pandroid.injected.invoked.from.ide=true, -Pandroid.injected.generateSourcesOnly=true, --init-script, /tmp/sync.local.repo1.gradle] 
2017-08-16 16:31:53,112 [d thread 4]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: --configure-on-demand -Pandroid.injected.invoked.from.ide=true -Pandroid.injected.generateSourcesOnly=true --init-script /tmp/sync.local.repo1.gradle 
2017-08-16 16:31:56,013 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - Gradle build finished in 3s 7ms 
2017-08-16 16:31:56,719 [se-915-b01]   INFO - pl.ProjectRootManagerComponent - project roots have changed 
2017-08-16 16:31:57,926 [ thread 15]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 1ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:31:57,937 [ thread 15]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 11ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:32:56,395 [se-915-b01]   INFO - e.project.sync.GradleSyncState - Started sync with Gradle for project 'AndroidNative'. 
2017-08-16 16:32:56,436 [ thread 16]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 16:32:56,437 [ thread 16]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 16:32:56,440 [ thread 16]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 16:32:56,441 [ thread 16]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: -Didea.version=3.0 -Djava.awt.headless=true -Pandroid.injected.build.model.only=true -Pandroid.injected.build.model.only.advanced=true -Pandroid.injected.invoked.from.ide=true -Pandroid.injected.build.model.only.versioned=3 -Pandroid.injected.studio.version=3.0.0.10 --init-script /tmp/sync.local.repo2.gradle --init-script /tmp/ijinit.gradle 
2017-08-16 16:32:57,658 [ thread 16]   INFO - e.project.sync.GradleSyncState - Started setup of project 'AndroidNative'. 
2017-08-16 16:32:57,874 [se-915-b01]   INFO - ule.android.SdkModuleSetupStep - Set Android SDK 'Android API 26 Platform' (/home/matti/Android/Sdk) to module 'buyer' 
2017-08-16 16:32:57,952 [se-915-b01]   INFO - pl.ProjectRootManagerComponent - project roots have changed 
2017-08-16 16:32:57,956 [ thread 16]   INFO - etup.post.PluginVersionUpgrade - Gradle model version: 3.0.0-beta2, recommended version for IDE: 3.0.0-beta2 
2017-08-16 16:32:57,964 [ thread 25]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 3ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:32:57,965 [ thread 16]   INFO - e.project.sync.GradleSyncState - Gradle sync finished in 1s 570ms 
2017-08-16 16:32:57,995 [ thread 25]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 31ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:32:57,995 [ thread 25]   INFO - indexing.UnindexedFilesUpdater - Unindexed files update started: 13 files to update 
2017-08-16 16:32:58,035 [ thread 16]   INFO - ild.invoker.GradleBuildInvoker - About to execute Gradle tasks: [:buyer:generateInternalDebugSources, :buyer:generateInternalDebugAndroidTestSources, :buyer:mockableAndroidJar] 
2017-08-16 16:32:58,039 [ thread 22]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 16:32:58,040 [ thread 22]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 16:32:58,040 [ thread 22]   INFO - ild.invoker.GradleBuildInvoker - Build command line options: [--configure-on-demand, -Pandroid.injected.invoked.from.ide=true, -Pandroid.injected.generateSourcesOnly=true, --init-script, /tmp/sync.local.repo603.gradle] 
2017-08-16 16:32:58,040 [ thread 22]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: --configure-on-demand -Pandroid.injected.invoked.from.ide=true -Pandroid.injected.generateSourcesOnly=true --init-script /tmp/sync.local.repo603.gradle 
2017-08-16 16:32:58,080 [ thread 25]   INFO - .diagnostic.PerformanceWatcher - Unindexed files update took 85ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:32:58,083 [ thread 25]   INFO -       #com.jetbrains.cidr.lang - Clearing symbols finished in 0 s. 
2017-08-16 16:32:58,089 [ thread 25]   INFO -       #com.jetbrains.cidr.lang - Loading symbols finished in 0 s. 
2017-08-16 16:32:58,090 [ thread 25]   INFO -       #com.jetbrains.cidr.lang - Building symbols finished in 0 s. 
2017-08-16 16:32:58,090 [ thread 25]   INFO -       #com.jetbrains.cidr.lang - Saving symbols finished in 0 s. 
2017-08-16 16:32:59,851 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - Gradle build finished in 1s 811ms 
2017-08-16 16:32:59,879 [se-915-b01]   INFO - pl.ProjectRootManagerComponent - project roots have changed 
2017-08-16 16:32:59,920 [ thread 22]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 2ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:32:59,987 [ thread 22]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 65ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:33:00,271 [se-915-b01]   INFO - pl.ProjectRootManagerComponent - project roots have changed 
2017-08-16 16:33:00,485 [ thread 25]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 3ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:33:00,496 [ thread 25]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 11ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:33:00,496 [ thread 25]   INFO - indexing.UnindexedFilesUpdater - Unindexed files update started: 3 files to update 
2017-08-16 16:33:00,596 [ thread 25]   INFO - .diagnostic.PerformanceWatcher - Unindexed files update took 100ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:35:12,444 [ thread 25]   INFO - tools.idea.ddms.adb.AdbService - Initializing adb using: /home/matti/Android/Sdk/platform-tools/adb, client support = true 
2017-08-16 16:35:17,671 [ thread 25]   INFO - tools.idea.ddms.adb.AdbService - Successfully connected to adb 
2017-08-16 16:35:17,672 [se-915-b01]   INFO - ditor.DeployTargetPickerDialog - Successfully obtained debug bridge 
2017-08-16 16:35:21,692 [st Monitor]   WARN -            #com.android.ddmlib - Adb connection Error:EOF 
2017-08-16 16:35:21,692 [st Monitor]   WARN -            #com.android.ddmlib - Connection attempts: 1 
2017-08-16 16:35:22,693 [st Monitor]   WARN -            #com.android.ddmlib - Connection attempts: 2 
2017-08-16 16:35:26,879 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8600 for client with pid 12931 
2017-08-16 16:35:26,904 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8601 for client with pid 11652 
2017-08-16 16:35:26,915 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8602 for client with pid 11525 
2017-08-16 16:35:26,926 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8603 for client with pid 4231 
2017-08-16 16:35:26,936 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8604 for client with pid 14728 
2017-08-16 16:35:26,947 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8605 for client with pid 6025 
2017-08-16 16:35:26,958 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8606 for client with pid 11277 
2017-08-16 16:35:26,969 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8607 for client with pid 5902 
2017-08-16 16:35:26,974 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8608 for client with pid 1039 
2017-08-16 16:35:26,985 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8609 for client with pid 4751 
2017-08-16 16:35:26,996 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8610 for client with pid 30483 
2017-08-16 16:35:27,007 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8611 for client with pid 5909 
2017-08-16 16:35:27,017 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8612 for client with pid 4247 
2017-08-16 16:35:27,028 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8613 for client with pid 7319 
2017-08-16 16:35:27,039 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8614 for client with pid 7450 
2017-08-16 16:35:27,049 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8615 for client with pid 19359 
2017-08-16 16:35:27,060 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8616 for client with pid 4643 
2017-08-16 16:35:27,071 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8617 for client with pid 13091 
2017-08-16 16:35:27,082 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8618 for client with pid 11046 
2017-08-16 16:35:27,092 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8619 for client with pid 1321 
2017-08-16 16:35:27,103 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8620 for client with pid 7083 
2017-08-16 16:35:27,113 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8621 for client with pid 6959 
2017-08-16 16:35:27,124 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8622 for client with pid 10802 
2017-08-16 16:35:27,139 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8623 for client with pid 8243 
2017-08-16 16:35:27,150 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8624 for client with pid 20917 
2017-08-16 16:35:27,161 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8625 for client with pid 5944 
2017-08-16 16:35:27,172 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8626 for client with pid 697 
2017-08-16 16:35:27,187 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8627 for client with pid 11961 
2017-08-16 16:35:27,198 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8628 for client with pid 6074 
2017-08-16 16:35:27,208 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8629 for client with pid 11450 
2017-08-16 16:35:27,219 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8630 for client with pid 5053 
2017-08-16 16:35:27,230 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8631 for client with pid 5951 
2017-08-16 16:35:27,240 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8632 for client with pid 21191 
2017-08-16 16:35:27,251 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8633 for client with pid 13001 
2017-08-16 16:35:27,262 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8634 for client with pid 22992 
2017-08-16 16:35:27,272 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8635 for client with pid 5972 
2017-08-16 16:35:27,283 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8636 for client with pid 23766 
2017-08-16 16:35:27,298 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8637 for client with pid 6359 
2017-08-16 16:35:27,309 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8638 for client with pid 12120 
2017-08-16 16:35:27,320 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8639 for client with pid 6105 
2017-08-16 16:35:27,330 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8640 for client with pid 5724 
2017-08-16 16:35:27,341 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8641 for client with pid 25445 
2017-08-16 16:35:27,352 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8642 for client with pid 13287 
2017-08-16 16:35:27,367 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8643 for client with pid 5864 
2017-08-16 16:35:27,378 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8644 for client with pid 16875 
2017-08-16 16:35:27,389 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8645 for client with pid 29931 
2017-08-16 16:35:27,420 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8646 for client with pid 21232 
2017-08-16 16:35:27,431 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8647 for client with pid 18162 
2017-08-16 16:35:27,441 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8648 for client with pid 7796 
2017-08-16 16:35:27,452 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8649 for client with pid 27385 
2017-08-16 16:35:27,488 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8650 for client with pid 29563 
2017-08-16 16:35:27,504 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8651 for client with pid 11902 
2017-08-16 16:35:33,980 [ thread 25]   INFO -                    #InstantRun - Local build timestamp is empty! 
2017-08-16 16:35:35,077 [ thread 25]   INFO - ools.idea.fd.InstantRunBuilder - BuildCause: MISMATCHING_TIMESTAMPS, BuildMode: FULL 
2017-08-16 16:35:35,079 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - About to execute Gradle tasks: [:buyer:assembleInternalDebug] 
2017-08-16 16:35:35,084 [ thread 31]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 16:35:35,104 [ thread 31]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 16:35:35,104 [ thread 31]   INFO - ild.invoker.GradleBuildInvoker - Build command line options: [--configure-on-demand, -Pandroid.injected.invoked.from.ide=true, -Pandroid.injected.build.api=25, -Pandroid.injected.build.density=xxhdpi, -Pandroid.injected.build.abi=arm64-v8a,armeabi-v7a,armeabi, -Pandroid.injected.restrict.variant.name=internalDebug, -Pandroid.injected.restrict.variant.project=:buyer, -Pandroid.optional.compilation=INSTANT_DEV,FULL_APK, -Pandroid.injected.coldswap.mode=MULTIAPK, --no-build-cache, --init-script, /tmp/sync.local.repo658.gradle] 
2017-08-16 16:35:35,104 [ thread 31]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: --configure-on-demand -Pandroid.injected.invoked.from.ide=true -Pandroid.injected.build.api=25 -Pandroid.injected.build.density=xxhdpi -Pandroid.injected.build.abi=arm64-v8a,armeabi-v7a,armeabi -Pandroid.injected.restrict.variant.name=internalDebug -Pandroid.injected.restrict.variant.project=:buyer -Pandroid.optional.compilation=INSTANT_DEV,FULL_APK -Pandroid.injected.coldswap.mode=MULTIAPK --no-build-cache --init-script /tmp/sync.local.repo658.gradle 
2017-08-16 16:35:41,253 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - Gradle build finished with 4 error(s) in 6s 143ms 
2017-08-16 16:35:41,278 [se-915-b01]   INFO - pl.ProjectRootManagerComponent - project roots have changed 
2017-08-16 16:35:41,280 [ thread 25]   INFO - a.gradle.run.MakeBeforeRunTask - Couldn't get post build models. 
2017-08-16 16:35:41,281 [ thread 25]   INFO - a.gradle.run.MakeBeforeRunTask - Gradle invocation complete, success = false 
2017-08-16 16:35:41,350 [ thread 33]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 3ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:35:41,374 [ thread 33]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 24ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:39:06,840 [ pool 6/12]   INFO - attrs.AttributeDefinitionsImpl - Found tag with unknown parent: AndroidManifest.AndroidManifestSupportsInput 
2017-08-16 16:39:06,840 [ pool 0/12]   INFO - attrs.AttributeDefinitionsImpl - Found tag with unknown parent: AndroidManifest.AndroidManifestSupportsInput 
2017-08-16 16:39:06,840 [ pool 6/12]   INFO - attrs.AttributeDefinitionsImpl - Found tag with unknown parent: AndroidManifest.AndroidManifestCompatibleScreens 
2017-08-16 16:39:06,840 [ pool 0/12]   INFO - attrs.AttributeDefinitionsImpl - Found tag with unknown parent: AndroidManifest.AndroidManifestCompatibleScreens 
2017-08-16 16:39:33,231 [se-915-b01]   INFO - nitor.AndroidToolWindowFactory - Successfully obtained debug bridge 
2017-08-16 16:43:28,813 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8627 for client with pid 13680 
2017-08-16 16:43:29,830 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8627 for client with pid 13680 
2017-08-16 16:44:38,903 [ pool 1/12]   INFO - project.TargetPlatformDetector - Using default platform for file: AdjustHelper.kt 
2017-08-16 16:45:14,477 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - About to execute Gradle tasks: [:buyer:generateInternalDebugSources, :buyer:generateInternalDebugAndroidTestSources, :buyer:mockableAndroidJar, :buyer:compileInternalDebugAndroidTestSources, :buyer:compileInternalDebugUnitTestSources, :buyer:compileInternalDebugSources] 
2017-08-16 16:45:14,540 [ thread 46]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 16:45:14,576 [ thread 46]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 16:45:14,577 [ thread 46]   INFO - ild.invoker.GradleBuildInvoker - Build command line options: [--configure-on-demand, -Pandroid.injected.invoked.from.ide=true, --init-script, /tmp/sync.local.repo235.gradle] 
2017-08-16 16:45:14,577 [ thread 46]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: --configure-on-demand -Pandroid.injected.invoked.from.ide=true --init-script /tmp/sync.local.repo235.gradle 
2017-08-16 16:45:23,249 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - Gradle build finished with 6 error(s) in 8s 699ms 
2017-08-16 16:45:23,295 [se-915-b01]   INFO - pl.ProjectRootManagerComponent - project roots have changed 
2017-08-16 16:45:23,434 [se-915-b01]   INFO - e.project.sync.GradleSyncState - Started sync with Gradle for project 'AndroidNative'. 
2017-08-16 16:45:23,438 [ thread 45]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 16:45:23,438 [ thread 45]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 16:45:23,443 [ thread 45]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 16:45:23,444 [ thread 45]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: -Didea.version=3.0 -Djava.awt.headless=true -Pandroid.injected.build.model.only=true -Pandroid.injected.build.model.only.advanced=true -Pandroid.injected.invoked.from.ide=true -Pandroid.injected.build.model.only.versioned=3 -Pandroid.injected.studio.version=3.0.0.10 --init-script /tmp/sync.local.repo892.gradle --init-script /tmp/ijinit.gradle 
2017-08-16 16:45:23,469 [ thread 46]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 3ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:45:23,510 [ thread 46]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 41ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:45:23,716 [cessToken]]   INFO - pl.ProjectRootManagerComponent - project roots have changed 
2017-08-16 16:45:24,117 [ thread 46]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 12ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:45:24,127 [ thread 46]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 10ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:45:24,127 [ thread 46]   INFO - indexing.UnindexedFilesUpdater - Unindexed files update started: 248 files to update 
2017-08-16 16:45:24,291 [ thread 46]   INFO - .diagnostic.PerformanceWatcher - Unindexed files update took 164ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:45:33,380 [ thread 45]   INFO - e.project.sync.GradleSyncState - Started setup of project 'AndroidNative'. 
2017-08-16 16:45:33,659 [se-915-b01]   INFO - ule.android.SdkModuleSetupStep - Set Android SDK 'Android API 26 Platform' (/home/matti/Android/Sdk) to module 'buyer' 
2017-08-16 16:45:34,182 [se-915-b01]   INFO - pl.ProjectRootManagerComponent - project roots have changed 
2017-08-16 16:45:34,186 [ thread 45]   INFO - etup.post.PluginVersionUpgrade - Gradle model version: 3.0.0-alpha9, recommended version for IDE: 3.0.0-beta2 
2017-08-16 16:45:34,186 [ thread 45]   INFO - e.project.sync.GradleSyncState - Gradle sync finished in 10s 752ms 
2017-08-16 16:45:37,888 [ thread 45]   INFO - e.project.sync.GradleSyncState - Gradle sync finished in 51yr 9mo 0w 6d 14h 45m 37s 889ms 
2017-08-16 16:45:37,957 [se-915-b01]   INFO - e.project.sync.GradleSyncState - Started sync with Gradle for project 'AndroidNative'. 
2017-08-16 16:45:37,961 [ thread 45]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 16:45:37,961 [ thread 45]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 16:45:37,965 [ thread 45]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 16:45:37,965 [ thread 45]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: -Didea.version=3.0 -Djava.awt.headless=true -Pandroid.injected.build.model.only=true -Pandroid.injected.build.model.only.advanced=true -Pandroid.injected.invoked.from.ide=true -Pandroid.injected.build.model.only.versioned=3 -Pandroid.injected.studio.version=3.0.0.10 --init-script /tmp/sync.local.repo959.gradle --init-script /tmp/ijinit.gradle 
2017-08-16 16:45:38,063 [ thread 57]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 2ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:45:38,388 [ thread 57]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 324ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:45:38,389 [ thread 57]   INFO - indexing.UnindexedFilesUpdater - Unindexed files update started: 6673 files to update 
2017-08-16 16:45:40,768 [ thread 57]   INFO - .diagnostic.PerformanceWatcher - Unindexed files update took 2378ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:45:40,770 [ thread 57]   INFO -       #com.jetbrains.cidr.lang - Clearing symbols finished in 0 s. 
2017-08-16 16:45:40,775 [ thread 57]   INFO -       #com.jetbrains.cidr.lang - Loading symbols finished in 0 s. 
2017-08-16 16:45:40,776 [ thread 57]   INFO -       #com.jetbrains.cidr.lang - Building symbols finished in 0 s. 
2017-08-16 16:45:40,776 [ thread 57]   INFO -       #com.jetbrains.cidr.lang - Saving symbols finished in 0 s. 
2017-08-16 16:45:40,779 [ thread 57]   INFO -       #com.jetbrains.cidr.lang - Clearing symbols finished in 0 s. 
2017-08-16 16:45:40,781 [ thread 57]   INFO -       #com.jetbrains.cidr.lang - Loading symbols finished in 0 s. 
2017-08-16 16:45:40,782 [ thread 57]   INFO -       #com.jetbrains.cidr.lang - Building symbols finished in 0 s. 
2017-08-16 16:45:40,782 [ thread 57]   INFO -       #com.jetbrains.cidr.lang - Saving symbols finished in 0 s. 
2017-08-16 16:45:41,229 [ thread 45]   INFO - .project.GradleProjectResolver - Gradle project resolve error 
java.lang.NullPointerException
	at sun.nio.fs.UnixPath.normalizeAndCheck(UnixPath.java:77)
	at sun.nio.fs.UnixPath.<init>(UnixPath.java:71)
	at sun.nio.fs.UnixFileSystem.getPath(UnixFileSystem.java:281)
	at java.nio.file.Paths.get(Paths.java:84)
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputPath(BuildOutput.java:222)
	at com.android.build.gradle.internal.scope.BuildOutputs.lambda$load$2(BuildOutputs.java:243)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1376)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:245)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:184)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:140)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.lambda$get$1(BuildOutputsSupplier.java:55)
	at com.google.common.collect.ImmutableList.forEach(ImmutableList.java:397)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:50)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:35)
	at com.android.build.gradle.internal.ide.AndroidArtifactImpl.getOutputs(AndroidArtifactImpl.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy196.getOutputs(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$0(IdeVariantImpl.java:60)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:59)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2017-08-16 16:45:41,230 [ thread 45]   WARN - nal.AbstractExternalSystemTask - Cause: java.lang.NullPointerException
	at sun.nio.fs.UnixPath.normalizeAndCheck(UnixPath.java:77)
	at sun.nio.fs.UnixPath.<init>(UnixPath.java:71)
	at sun.nio.fs.UnixFileSystem.getPath(UnixFileSystem.java:281)
	at java.nio.file.Paths.get(Paths.java:84)
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputPath(BuildOutput.java:222)
	at com.android.build.gradle.internal.scope.BuildOutputs.lambda$load$2(BuildOutputs.java:243)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1376)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:245)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:184)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:140)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.lambda$get$1(BuildOutputsSupplier.java:55)
	at com.google.common.collect.ImmutableList.forEach(ImmutableList.java:397)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:50)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:35)
	at com.android.build.gradle.internal.ide.AndroidArtifactImpl.getOutputs(AndroidArtifactImpl.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy196.getOutputs(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$0(IdeVariantImpl.java:60)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:59)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
 
com.intellij.openapi.externalSystem.model.ExternalSystemException: Cause: java.lang.NullPointerException
	at sun.nio.fs.UnixPath.normalizeAndCheck(UnixPath.java:77)
	at sun.nio.fs.UnixPath.<init>(UnixPath.java:71)
	at sun.nio.fs.UnixFileSystem.getPath(UnixFileSystem.java:281)
	at java.nio.file.Paths.get(Paths.java:84)
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputPath(BuildOutput.java:222)
	at com.android.build.gradle.internal.scope.BuildOutputs.lambda$load$2(BuildOutputs.java:243)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1376)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:245)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:184)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:140)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.lambda$get$1(BuildOutputsSupplier.java:55)
	at com.google.common.collect.ImmutableList.forEach(ImmutableList.java:397)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:50)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:35)
	at com.android.build.gradle.internal.ide.AndroidArtifactImpl.getOutputs(AndroidArtifactImpl.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy196.getOutputs(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$0(IdeVariantImpl.java:60)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:59)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

	at com.android.tools.idea.gradle.project.sync.idea.ProjectImportErrorHandler.getUserFriendlyError(ProjectImportErrorHandler.java:85)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.getUserFriendlyError(AndroidGradleProjectResolver.java:414)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.getUserFriendlyError(AbstractProjectResolverExtension.java:158)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:906)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
	at sun.nio.fs.UnixPath.normalizeAndCheck(UnixPath.java:77)
	at sun.nio.fs.UnixPath.<init>(UnixPath.java:71)
	at sun.nio.fs.UnixFileSystem.getPath(UnixFileSystem.java:281)
	at java.nio.file.Paths.get(Paths.java:84)
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputPath(BuildOutput.java:222)
	at com.android.build.gradle.internal.scope.BuildOutputs.lambda$load$2(BuildOutputs.java:243)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1376)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:245)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:184)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:140)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.lambda$get$1(BuildOutputsSupplier.java:55)
	at com.google.common.collect.ImmutableList.forEach(ImmutableList.java:397)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:50)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:35)
	at com.android.build.gradle.internal.ide.AndroidArtifactImpl.getOutputs(AndroidArtifactImpl.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy196.getOutputs(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$0(IdeVariantImpl.java:60)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:59)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	... 26 more

2017-08-16 16:45:41,257 [ thread 45]   WARN - ect.sync.idea.ProjectSetUpTask - Cause: java.lang.NullPointerException
	at sun.nio.fs.UnixPath.normalizeAndCheck(UnixPath.java:77)
	at sun.nio.fs.UnixPath.<init>(UnixPath.java:71)
	at sun.nio.fs.UnixFileSystem.getPath(UnixFileSystem.java:281)
	at java.nio.file.Paths.get(Paths.java:84)
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputPath(BuildOutput.java:222)
	at com.android.build.gradle.internal.scope.BuildOutputs.lambda$load$2(BuildOutputs.java:243)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1376)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:245)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:184)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:140)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.lambda$get$1(BuildOutputsSupplier.java:55)
	at com.google.common.collect.ImmutableList.forEach(ImmutableList.java:397)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:50)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:35)
	at com.android.build.gradle.internal.ide.AndroidArtifactImpl.getOutputs(AndroidArtifactImpl.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy196.getOutputs(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$0(IdeVariantImpl.java:60)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:59)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)


Consult IDE log for more details (Help | Show Log) 
2017-08-16 16:45:41,259 [ thread 45]   INFO - e.project.sync.GradleSyncState - Gradle sync failed: Cause: java.lang.NullPointerException
	at sun.nio.fs.UnixPath.normalizeAndCheck(UnixPath.java:77)
	at sun.nio.fs.UnixPath.<init>(UnixPath.java:71)
	at sun.nio.fs.UnixFileSystem.getPath(UnixFileSystem.java:281)
	at java.nio.file.Paths.get(Paths.java:84)
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputPath(BuildOutput.java:222)
	at com.android.build.gradle.internal.scope.BuildOutputs.lambda$load$2(BuildOutputs.java:243)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1376)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:245)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:184)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:140)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.lambda$get$1(BuildOutputsSupplier.java:55)
	at com.google.common.collect.ImmutableList.forEach(ImmutableList.java:397)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:50)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:35)
	at com.android.build.gradle.internal.ide.AndroidArtifactImpl.getOutputs(AndroidArtifactImpl.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy196.getOutputs(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$0(IdeVariantImpl.java:60)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:59)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)


Consult IDE log for more details (Help | Show Log) (3s 302ms) 
2017-08-16 16:45:41,590 [ thread 52]   INFO -       #com.jetbrains.cidr.lang - Clearing symbols finished in 0 s. 
2017-08-16 16:45:41,594 [ thread 52]   INFO -       #com.jetbrains.cidr.lang - Loading symbols finished in 0 s. 
2017-08-16 16:45:41,595 [ thread 52]   INFO -       #com.jetbrains.cidr.lang - Building symbols finished in 0 s. 
2017-08-16 16:45:41,595 [ thread 52]   INFO -       #com.jetbrains.cidr.lang - Saving symbols finished in 0 s. 
2017-08-16 16:46:42,007 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - About to execute Gradle tasks: [:buyer:generateInternalDebugSources, :buyer:compileInternalDebugSources] 
2017-08-16 16:46:42,081 [ thread 55]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 16:46:42,117 [ thread 55]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 16:46:42,117 [ thread 55]   INFO - ild.invoker.GradleBuildInvoker - Build command line options: [--configure-on-demand, -Pandroid.injected.invoked.from.ide=true, --init-script, /tmp/sync.local.repo1094.gradle] 
2017-08-16 16:46:42,117 [ thread 55]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: --configure-on-demand -Pandroid.injected.invoked.from.ide=true --init-script /tmp/sync.local.repo1094.gradle 
2017-08-16 16:46:49,624 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - Gradle build finished with 2 error(s) in 7s 540ms 
2017-08-16 16:47:38,446 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - About to execute Gradle tasks: [:buyer:generateInternalDebugSources, :buyer:compileInternalDebugSources] 
2017-08-16 16:47:38,519 [ thread 65]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 16:47:38,550 [ thread 65]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 16:47:38,551 [ thread 65]   INFO - ild.invoker.GradleBuildInvoker - Build command line options: [--configure-on-demand, -Pandroid.injected.invoked.from.ide=true, --init-script, /tmp/sync.local.repo704.gradle] 
2017-08-16 16:47:38,551 [ thread 65]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: --configure-on-demand -Pandroid.injected.invoked.from.ide=true --init-script /tmp/sync.local.repo704.gradle 
2017-08-16 16:47:46,020 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - Gradle build finished in 7s 500ms 
2017-08-16 16:47:46,021 [se-915-b01]   INFO - e.project.sync.GradleSyncState - Started sync with Gradle for project 'AndroidNative'. 
2017-08-16 16:47:46,025 [ thread 64]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 16:47:46,025 [ thread 64]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 16:47:46,030 [ thread 64]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 16:47:46,031 [ thread 64]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: -Didea.version=3.0 -Djava.awt.headless=true -Pandroid.injected.build.model.only=true -Pandroid.injected.build.model.only.advanced=true -Pandroid.injected.invoked.from.ide=true -Pandroid.injected.build.model.only.versioned=3 -Pandroid.injected.studio.version=3.0.0.10 --init-script /tmp/sync.local.repo198.gradle --init-script /tmp/ijinit.gradle 
2017-08-16 16:47:47,554 [ thread 64]   INFO - .project.GradleProjectResolver - Gradle project resolve error 
java.lang.NullPointerException
	at sun.nio.fs.UnixPath.normalizeAndCheck(UnixPath.java:77)
	at sun.nio.fs.UnixPath.<init>(UnixPath.java:71)
	at sun.nio.fs.UnixFileSystem.getPath(UnixFileSystem.java:281)
	at java.nio.file.Paths.get(Paths.java:84)
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputPath(BuildOutput.java:222)
	at com.android.build.gradle.internal.scope.BuildOutputs.lambda$load$2(BuildOutputs.java:243)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1376)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:245)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:184)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:140)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.lambda$get$1(BuildOutputsSupplier.java:55)
	at com.google.common.collect.ImmutableList.forEach(ImmutableList.java:397)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:50)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:35)
	at com.android.build.gradle.internal.ide.AndroidArtifactImpl.getOutputs(AndroidArtifactImpl.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy196.getOutputs(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$1(IdeVariantImpl.java:63)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:62)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2017-08-16 16:47:47,554 [ thread 64]   WARN - nal.AbstractExternalSystemTask - Cause: java.lang.NullPointerException
	at sun.nio.fs.UnixPath.normalizeAndCheck(UnixPath.java:77)
	at sun.nio.fs.UnixPath.<init>(UnixPath.java:71)
	at sun.nio.fs.UnixFileSystem.getPath(UnixFileSystem.java:281)
	at java.nio.file.Paths.get(Paths.java:84)
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputPath(BuildOutput.java:222)
	at com.android.build.gradle.internal.scope.BuildOutputs.lambda$load$2(BuildOutputs.java:243)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1376)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:245)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:184)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:140)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.lambda$get$1(BuildOutputsSupplier.java:55)
	at com.google.common.collect.ImmutableList.forEach(ImmutableList.java:397)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:50)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:35)
	at com.android.build.gradle.internal.ide.AndroidArtifactImpl.getOutputs(AndroidArtifactImpl.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy196.getOutputs(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$1(IdeVariantImpl.java:63)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:62)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
 
com.intellij.openapi.externalSystem.model.ExternalSystemException: Cause: java.lang.NullPointerException
	at sun.nio.fs.UnixPath.normalizeAndCheck(UnixPath.java:77)
	at sun.nio.fs.UnixPath.<init>(UnixPath.java:71)
	at sun.nio.fs.UnixFileSystem.getPath(UnixFileSystem.java:281)
	at java.nio.file.Paths.get(Paths.java:84)
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputPath(BuildOutput.java:222)
	at com.android.build.gradle.internal.scope.BuildOutputs.lambda$load$2(BuildOutputs.java:243)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1376)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:245)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:184)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:140)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.lambda$get$1(BuildOutputsSupplier.java:55)
	at com.google.common.collect.ImmutableList.forEach(ImmutableList.java:397)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:50)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:35)
	at com.android.build.gradle.internal.ide.AndroidArtifactImpl.getOutputs(AndroidArtifactImpl.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy196.getOutputs(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$1(IdeVariantImpl.java:63)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:62)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

	at com.android.tools.idea.gradle.project.sync.idea.ProjectImportErrorHandler.getUserFriendlyError(ProjectImportErrorHandler.java:85)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.getUserFriendlyError(AndroidGradleProjectResolver.java:414)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.getUserFriendlyError(AbstractProjectResolverExtension.java:158)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:906)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
	at sun.nio.fs.UnixPath.normalizeAndCheck(UnixPath.java:77)
	at sun.nio.fs.UnixPath.<init>(UnixPath.java:71)
	at sun.nio.fs.UnixFileSystem.getPath(UnixFileSystem.java:281)
	at java.nio.file.Paths.get(Paths.java:84)
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputPath(BuildOutput.java:222)
	at com.android.build.gradle.internal.scope.BuildOutputs.lambda$load$2(BuildOutputs.java:243)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1376)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:245)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:184)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:140)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.lambda$get$1(BuildOutputsSupplier.java:55)
	at com.google.common.collect.ImmutableList.forEach(ImmutableList.java:397)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:50)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:35)
	at com.android.build.gradle.internal.ide.AndroidArtifactImpl.getOutputs(AndroidArtifactImpl.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy196.getOutputs(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$1(IdeVariantImpl.java:63)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:62)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	... 26 more

2017-08-16 16:47:47,555 [ thread 64]   WARN - ect.sync.idea.ProjectSetUpTask - Cause: java.lang.NullPointerException
	at sun.nio.fs.UnixPath.normalizeAndCheck(UnixPath.java:77)
	at sun.nio.fs.UnixPath.<init>(UnixPath.java:71)
	at sun.nio.fs.UnixFileSystem.getPath(UnixFileSystem.java:281)
	at java.nio.file.Paths.get(Paths.java:84)
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputPath(BuildOutput.java:222)
	at com.android.build.gradle.internal.scope.BuildOutputs.lambda$load$2(BuildOutputs.java:243)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1376)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:245)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:184)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:140)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.lambda$get$1(BuildOutputsSupplier.java:55)
	at com.google.common.collect.ImmutableList.forEach(ImmutableList.java:397)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:50)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:35)
	at com.android.build.gradle.internal.ide.AndroidArtifactImpl.getOutputs(AndroidArtifactImpl.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy196.getOutputs(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$1(IdeVariantImpl.java:63)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:62)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)


Consult IDE log for more details (Help | Show Log) 
2017-08-16 16:47:47,555 [ thread 64]   INFO - e.project.sync.GradleSyncState - Gradle sync failed: Cause: java.lang.NullPointerException
	at sun.nio.fs.UnixPath.normalizeAndCheck(UnixPath.java:77)
	at sun.nio.fs.UnixPath.<init>(UnixPath.java:71)
	at sun.nio.fs.UnixFileSystem.getPath(UnixFileSystem.java:281)
	at java.nio.file.Paths.get(Paths.java:84)
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputPath(BuildOutput.java:222)
	at com.android.build.gradle.internal.scope.BuildOutputs.lambda$load$2(BuildOutputs.java:243)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1376)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:245)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:184)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:140)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.lambda$get$1(BuildOutputsSupplier.java:55)
	at com.google.common.collect.ImmutableList.forEach(ImmutableList.java:397)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:50)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:35)
	at com.android.build.gradle.internal.ide.AndroidArtifactImpl.getOutputs(AndroidArtifactImpl.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy196.getOutputs(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$1(IdeVariantImpl.java:63)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:62)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)


Consult IDE log for more details (Help | Show Log) (1s 534ms) 
2017-08-16 16:47:47,670 [ thread 57]   INFO -       #com.jetbrains.cidr.lang - Clearing symbols finished in 0 s. 
2017-08-16 16:47:47,679 [ thread 57]   INFO -       #com.jetbrains.cidr.lang - Loading symbols finished in 0 s. 
2017-08-16 16:47:47,679 [ thread 57]   INFO -       #com.jetbrains.cidr.lang - Building symbols finished in 0 s. 
2017-08-16 16:47:47,680 [ thread 57]   INFO -       #com.jetbrains.cidr.lang - Saving symbols finished in 0 s. 
2017-08-16 16:48:04,210 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - About to execute Gradle tasks: [clean, :buyer:generateInternalDebugSources] 
2017-08-16 16:48:04,214 [ thread 65]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 16:48:04,280 [ thread 65]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 16:48:04,280 [ thread 65]   INFO - ild.invoker.GradleBuildInvoker - Build command line options: [--configure-on-demand, -Pandroid.injected.invoked.from.ide=true, -Pandroid.injected.generateSourcesOnly=true, --init-script, /tmp/sync.local.repo994.gradle] 
2017-08-16 16:48:04,280 [ thread 65]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: --configure-on-demand -Pandroid.injected.invoked.from.ide=true -Pandroid.injected.generateSourcesOnly=true --init-script /tmp/sync.local.repo994.gradle 
2017-08-16 16:48:05,934 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - Gradle build finished in 1s 719ms 
2017-08-16 16:48:06,180 [se-915-b01]   INFO - pl.ProjectRootManagerComponent - project roots have changed 
2017-08-16 16:48:06,532 [ thread 57]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 1ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:48:06,570 [ thread 57]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 38ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:48:09,261 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - About to execute Gradle tasks: [:buyer:generateInternalDebugSources, :buyer:compileInternalDebugSources] 
2017-08-16 16:48:09,268 [ thread 62]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 16:48:09,306 [ thread 62]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 16:48:09,306 [ thread 62]   INFO - ild.invoker.GradleBuildInvoker - Build command line options: [--configure-on-demand, -Pandroid.injected.invoked.from.ide=true, --init-script, /tmp/sync.local.repo11.gradle] 
2017-08-16 16:48:09,306 [ thread 62]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: --configure-on-demand -Pandroid.injected.invoked.from.ide=true --init-script /tmp/sync.local.repo11.gradle 
2017-08-16 16:48:16,839 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - Gradle build finished in 7s 570ms 
2017-08-16 16:48:16,840 [se-915-b01]   INFO - e.project.sync.GradleSyncState - Started sync with Gradle for project 'AndroidNative'. 
2017-08-16 16:48:16,844 [ thread 46]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 16:48:16,844 [ thread 46]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 16:48:16,846 [ thread 46]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 16:48:16,848 [ thread 46]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: -Didea.version=3.0 -Djava.awt.headless=true -Pandroid.injected.build.model.only=true -Pandroid.injected.build.model.only.advanced=true -Pandroid.injected.invoked.from.ide=true -Pandroid.injected.build.model.only.versioned=3 -Pandroid.injected.studio.version=3.0.0.10 --init-script /tmp/sync.local.repo150.gradle --init-script /tmp/ijinit.gradle 
2017-08-16 16:48:17,172 [se-915-b01]   INFO - pl.ProjectRootManagerComponent - project roots have changed 
2017-08-16 16:48:17,404 [ thread 57]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 6ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:48:17,413 [ thread 57]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 9ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:48:17,414 [ thread 57]   INFO - indexing.UnindexedFilesUpdater - Unindexed files update started: 248 files to update 
2017-08-16 16:48:17,583 [ thread 57]   INFO - .diagnostic.PerformanceWatcher - Unindexed files update took 169ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:48:18,231 [ thread 46]   INFO - e.project.sync.GradleSyncState - Started setup of project 'AndroidNative'. 
2017-08-16 16:48:20,473 [ thread 61]   INFO -  #git4idea.commands.GitHandler - [../../dawanda] git -c core.quotepath=false rm --ignore-unmatch --cached -- AndroidNative/.idea/libraries/multidex_1_0_2.xml AndroidNative/.idea/libraries/multidex_instrumentation_1_0_2.xml 
2017-08-16 16:48:20,744 [se-915-b01]   INFO - ule.android.SdkModuleSetupStep - Set Android SDK 'Android API 26 Platform' (/home/matti/Android/Sdk) to module 'buyer' 
2017-08-16 16:48:20,894 [se-915-b01]   INFO - pl.ProjectRootManagerComponent - project roots have changed 
2017-08-16 16:48:20,897 [ thread 46]   INFO - etup.post.PluginVersionUpgrade - Gradle model version: 3.0.0-beta2, recommended version for IDE: 3.0.0-beta2 
2017-08-16 16:48:20,898 [ thread 46]   INFO - e.project.sync.GradleSyncState - Gradle sync finished in 4s 58ms 
2017-08-16 16:48:20,907 [ thread 64]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 2ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:48:21,094 [ thread 64]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 187ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:48:21,096 [ thread 64]   INFO - indexing.UnindexedFilesUpdater - Unindexed files update started: 6668 files to update 
2017-08-16 16:48:22,022 [ thread 64]   INFO - .diagnostic.PerformanceWatcher - Unindexed files update took 926ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:48:22,025 [ thread 64]   INFO -       #com.jetbrains.cidr.lang - Clearing symbols finished in 0 s. 
2017-08-16 16:48:22,028 [ thread 64]   INFO -       #com.jetbrains.cidr.lang - Loading symbols finished in 0 s. 
2017-08-16 16:48:22,029 [ thread 64]   INFO -       #com.jetbrains.cidr.lang - Building symbols finished in 0 s. 
2017-08-16 16:48:22,029 [ thread 64]   INFO -       #com.jetbrains.cidr.lang - Saving symbols finished in 0 s. 
2017-08-16 16:48:26,381 [ thread 70]   INFO -                    #InstantRun - Local build timestamp is empty! 
2017-08-16 16:48:27,477 [ thread 70]   INFO - ools.idea.fd.InstantRunBuilder - BuildCause: MISMATCHING_TIMESTAMPS, BuildMode: FULL 
2017-08-16 16:48:27,478 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - About to execute Gradle tasks: [:buyer:assembleInternalDebug] 
2017-08-16 16:48:27,483 [ thread 64]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 16:48:27,500 [ thread 64]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 16:48:27,500 [ thread 64]   INFO - ild.invoker.GradleBuildInvoker - Build command line options: [--configure-on-demand, -Pandroid.injected.invoked.from.ide=true, -Pandroid.injected.build.api=25, -Pandroid.injected.build.density=xxhdpi, -Pandroid.injected.build.abi=arm64-v8a,armeabi-v7a,armeabi, -Pandroid.injected.restrict.variant.name=internalDebug, -Pandroid.injected.restrict.variant.project=:buyer, -Pandroid.optional.compilation=INSTANT_DEV,FULL_APK, -Pandroid.injected.coldswap.mode=MULTIAPK, --no-build-cache, --init-script, /tmp/sync.local.repo5.gradle] 
2017-08-16 16:48:27,500 [ thread 64]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: --configure-on-demand -Pandroid.injected.invoked.from.ide=true -Pandroid.injected.build.api=25 -Pandroid.injected.build.density=xxhdpi -Pandroid.injected.build.abi=arm64-v8a,armeabi-v7a,armeabi -Pandroid.injected.restrict.variant.name=internalDebug -Pandroid.injected.restrict.variant.project=:buyer -Pandroid.optional.compilation=INSTANT_DEV,FULL_APK -Pandroid.injected.coldswap.mode=MULTIAPK --no-build-cache --init-script /tmp/sync.local.repo5.gradle 
2017-08-16 16:48:40,951 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8622 for client with pid 13874 
2017-08-16 16:48:48,838 [ thread 67]   INFO -  #git4idea.commands.GitHandler - [../../dawanda] git -c core.quotepath=false rm --ignore-unmatch --cached -- AndroidNative/.idea/libraries/multidex_instrumentation_1_0_1.xml 
2017-08-16 16:48:52,539 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - Gradle build finished in 25s 54ms 
2017-08-16 16:48:52,577 [se-915-b01]   INFO - pl.ProjectRootManagerComponent - project roots have changed 
2017-08-16 16:48:52,584 [ thread 70]   INFO - a.gradle.run.MakeBeforeRunTask - Gradle invocation complete, success = true 
2017-08-16 16:48:52,586 [ thread 68]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 1ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:48:52,649 [ thread 68]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 63ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 16:48:52,711 [ thread 64]   INFO -                    #InstantRun - $ adb install-multiple -r -t /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/dep/dependencies.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_7.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_3.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_5.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_2.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_6.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_0.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_8.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_9.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_1.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_4.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/outputs/apk/internal/debug/buyer-internal-debug.apk  
2017-08-16 16:49:06,617 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8645 for client with pid 14040 
2017-08-16 16:49:08,505 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8652 for client with pid 14083 
2017-08-16 16:49:08,679 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8653 for client with pid 14097 
2017-08-16 16:49:08,741 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8654 for client with pid 14120 
2017-08-16 16:49:08,757 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8655 for client with pid 14149 
2017-08-16 16:49:08,780 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8656 for client with pid 14163 
2017-08-16 16:49:09,406 [ thread 64]   INFO - idea.run.AndroidProcessHandler - Adding device oneplus-one_a2003-192.168.51.17:5555 to monitor for launched app: com.dawanda.internal.shopping 
2017-08-16 16:49:09,791 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8655 for client with pid 14149 
2017-08-16 16:49:09,808 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8657 for client with pid 14196 
2017-08-16 16:49:09,818 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8658 for client with pid 14252 
2017-08-16 16:49:09,829 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8659 for client with pid 14266 
2017-08-16 16:49:09,840 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8660 for client with pid 14285 
2017-08-16 16:49:09,850 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8661 for client with pid 14304 
2017-08-16 16:49:10,116 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8662 for client with pid 14332 
2017-08-16 16:49:10,267 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 16:49:10,267 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 16:49:10,523 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 16:49:35,515 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8600 for client with pid 14504 
2017-08-16 16:49:35,638 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 16:49:36,529 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8600 for client with pid 14504 
2017-08-16 16:49:36,540 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '12120': closed 
2017-08-16 16:49:58,297 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8633 for client with pid 14656 
2017-08-16 16:49:58,338 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 16:49:58,338 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 16:49:58,338 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 16:49:58,390 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 16:49:59,313 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8633 for client with pid 14656 
2017-08-16 16:51:31,494 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8638 for client with pid 14819 
2017-08-16 16:51:31,655 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 16:51:31,656 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 16:54:05,320 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8627 for client with pid 15079 
2017-08-16 16:54:06,599 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8642 for client with pid 15096 
2017-08-16 16:54:07,613 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8642 for client with pid 15096 
2017-08-16 16:54:07,624 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8663 for client with pid 15122 
2017-08-16 16:55:20,904 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8600 for client with pid 15283 
2017-08-16 16:55:20,973 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 16:55:21,924 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8600 for client with pid 15283 
2017-08-16 16:55:55,418 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8600 for client with pid 15458 
2017-08-16 16:55:56,356 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8645 for client with pid 15534 
2017-08-16 16:55:57,231 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8652 for client with pid 15584 
2017-08-16 16:55:57,580 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8654 for client with pid 15610 
2017-08-16 16:55:57,957 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8664 for client with pid 15637 
2017-08-16 17:02:37,759 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8653 for client with pid 16173 
2017-08-16 17:02:40,490 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8657 for client with pid 16206 
2017-08-16 17:02:41,509 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8656 for client with pid 16206 
2017-08-16 17:02:52,779 [se-915-b01]   INFO - mpl.AdbDeviceFileSystemService - Debug bridge changed 
2017-08-16 17:02:52,787 [se-915-b01]   INFO - mpl.AdbDeviceFileSystemService - Successfully obtained debug bridge 
2017-08-16 17:02:52,982 [ thread 71]   INFO - .adbimpl.AdbDeviceCapabilities - Device "oneplus-one_a2003-192.168.51.17:5555(192.168.51.17:5555)-ONLINE" does not seem to support the "su 0" command: 
  Permission denied 
com.android.tools.idea.explorer.adbimpl.AdbShellCommandException: Permission denied
	at com.android.tools.idea.explorer.adbimpl.AdbShellCommandException.create(AdbShellCommandException.java:26)
	at com.android.tools.idea.explorer.adbimpl.AdbShellCommandResult.throwIfError(AdbShellCommandResult.java:46)
	at com.android.tools.idea.explorer.adbimpl.AdbDeviceCapabilities.supportsSuRootCommandWorker(AdbDeviceCapabilities.java:204)
	at com.android.tools.idea.explorer.adbimpl.AdbDeviceCapabilities.supportsSuRootCommand(AdbDeviceCapabilities.java:78)
	at com.android.tools.idea.explorer.adbimpl.AdbDeviceFileSystem.lambda$resolveMountPoint$1(AdbDeviceFileSystem.java:191)
	at com.android.tools.idea.explorer.FutureCallbackExecutor.lambda$executeAsync$0(FutureCallbackExecutor.java:63)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2017-08-16 17:03:44,532 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:06:03,074 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8633 for client with pid 16396 
2017-08-16 17:06:03,075 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:06:34,023 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:06:34,023 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:06:58,772 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8600 for client with pid 16588 
2017-08-16 17:06:58,772 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:06:58,970 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:08:00,561 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8652 for client with pid 16691 
2017-08-16 17:08:00,561 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:19:33,969 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8657 for client with pid 17218 
2017-08-16 17:19:33,969 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:19:34,437 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:19:34,984 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8654 for client with pid 17218 
2017-08-16 17:19:34,985 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:19:35,191 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8657 for client with pid 17308 
2017-08-16 17:19:35,191 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:19:36,202 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8657 for client with pid 17308 
2017-08-16 17:19:36,202 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:19:36,213 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8659 for client with pid 17325 
2017-08-16 17:19:36,213 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:19:36,490 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8660 for client with pid 17402 
2017-08-16 17:19:36,491 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:19:36,613 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:19:37,032 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:19:37,506 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8645 for client with pid 17402 
2017-08-16 17:19:37,506 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:19:37,517 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '15534': closed 
2017-08-16 17:19:37,517 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:19:37,528 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8662 for client with pid 17452 
2017-08-16 17:19:37,538 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '15534': closed 
2017-08-16 17:19:37,538 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:19:39,607 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8665 for client with pid 17532 
2017-08-16 17:19:39,607 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:19:39,691 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:20:01,055 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:20:12,844 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:25:20,095 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8653 for client with pid 18406 
2017-08-16 17:25:20,095 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:25:20,291 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 17:25:20,291 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 17:25:22,774 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:26:26,783 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:26:26,784 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:26:27,958 [ thread 79]   INFO -                    #InstantRun - Build timestamps: Local: 1502894907629, Device: 1502894907629 
2017-08-16 17:26:27,976 [ thread 79]   INFO -                    #InstantRun - Application not running 
2017-08-16 17:26:29,026 [ thread 79]   INFO - ools.idea.fd.InstantRunBuilder - BuildCause: USER_CHOSE_TO_COLDSWAP, BuildMode: COLD 
2017-08-16 17:26:29,027 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - About to execute Gradle tasks: [:buyer:assembleInternalDebug] 
2017-08-16 17:26:29,032 [ thread 78]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 17:26:29,082 [ thread 78]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 17:26:29,082 [ thread 78]   INFO - ild.invoker.GradleBuildInvoker - Build command line options: [--configure-on-demand, -Pandroid.injected.invoked.from.ide=true, -Pandroid.injected.build.api=25, -Pandroid.injected.build.density=xxhdpi, -Pandroid.injected.build.abi=arm64-v8a,armeabi-v7a,armeabi, -Pandroid.injected.restrict.variant.name=internalDebug, -Pandroid.injected.restrict.variant.project=:buyer, -Pandroid.optional.compilation=INSTANT_DEV,RESTART_ONLY, -Pandroid.injected.coldswap.mode=MULTIAPK, --no-build-cache, --init-script, /tmp/sync.local.repo1199.gradle] 
2017-08-16 17:26:29,082 [ thread 78]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: --configure-on-demand -Pandroid.injected.invoked.from.ide=true -Pandroid.injected.build.api=25 -Pandroid.injected.build.density=xxhdpi -Pandroid.injected.build.abi=arm64-v8a,armeabi-v7a,armeabi -Pandroid.injected.restrict.variant.name=internalDebug -Pandroid.injected.restrict.variant.project=:buyer -Pandroid.optional.compilation=INSTANT_DEV,RESTART_ONLY -Pandroid.injected.coldswap.mode=MULTIAPK --no-build-cache --init-script /tmp/sync.local.repo1199.gradle 
2017-08-16 17:26:39,318 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - Gradle build finished in 10s 285ms 
2017-08-16 17:26:39,362 [se-915-b01]   INFO - pl.ProjectRootManagerComponent - project roots have changed 
2017-08-16 17:26:39,364 [ thread 79]   INFO - a.gradle.run.MakeBeforeRunTask - Gradle invocation complete, success = true 
2017-08-16 17:26:39,373 [ thread 79]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 1ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 17:26:39,384 [ thread 79]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 11ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 17:26:40,000 [ thread 82]   INFO -                    #InstantRun - $ adb install-multiple -r -t /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/dep/dependencies.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_5.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_1.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_3.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_2.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_7.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_9.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_0.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_6.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_4.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_8.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/outputs/apk/internal/debug/buyer-internal-debug.apk  
2017-08-16 17:26:53,899 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8633 for client with pid 18876 
2017-08-16 17:26:53,899 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:26:54,913 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8633 for client with pid 18876 
2017-08-16 17:26:54,913 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:26:55,321 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:26:55,651 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8600 for client with pid 18926 
2017-08-16 17:26:55,651 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:26:55,703 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8656 for client with pid 18940 
2017-08-16 17:26:55,703 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:26:55,955 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:26:56,064 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:26:56,368 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:26:56,582 [ thread 82]   INFO - idea.run.AndroidProcessHandler - Adding device oneplus-one_a2003-192.168.51.17:5555 to monitor for launched app: com.dawanda.internal.shopping 
2017-08-16 17:26:56,637 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:26:56,714 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8638 for client with pid 18940 
2017-08-16 17:26:56,714 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:26:56,732 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8654 for client with pid 18970 
2017-08-16 17:26:56,748 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '17308': closed 
2017-08-16 17:26:56,763 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '17218': closed 
2017-08-16 17:26:56,774 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '14149': closed 
2017-08-16 17:26:56,805 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '14819': closed 
2017-08-16 17:26:56,805 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:26:56,815 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '17308': closed 
2017-08-16 17:26:56,826 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '17218': closed 
2017-08-16 17:26:56,852 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '14819': closed 
2017-08-16 17:26:56,852 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:26:56,863 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '17308': closed 
2017-08-16 17:26:56,873 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8669 for client with pid 18996 
2017-08-16 17:26:56,889 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '17218': closed 
2017-08-16 17:26:56,899 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '14819': closed 
2017-08-16 17:26:56,900 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:26:56,910 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '17308': closed 
2017-08-16 17:26:56,921 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '17218': closed 
2017-08-16 17:26:56,937 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8674 for client with pid 19010 
2017-08-16 17:26:56,947 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '14819': closed 
2017-08-16 17:26:56,947 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:26:56,958 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '17308': closed 
2017-08-16 17:26:56,968 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '17218': closed 
2017-08-16 17:26:56,968 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:26:56,984 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '17308': closed 
2017-08-16 17:26:56,984 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:26:57,000 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '17308': closed 
2017-08-16 17:26:57,016 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8680 for client with pid 19044 
2017-08-16 17:26:57,016 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:26:57,032 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8681 for client with pid 19082 
2017-08-16 17:26:57,032 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:26:57,048 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8682 for client with pid 19098 
2017-08-16 17:26:57,048 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:26:57,099 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8683 for client with pid 19118 
2017-08-16 17:26:57,101 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:26:57,334 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:26:57,334 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:26:57,941 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 17:26:57,941 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 17:26:57,992 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 17:26:57,992 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 17:26:58,019 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 17:26:58,019 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 17:26:58,114 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8659 for client with pid 19118 
2017-08-16 17:26:58,114 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:26:58,125 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '17325': closed 
2017-08-16 17:26:58,125 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:26:58,141 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8683 for client with pid 19137 
2017-08-16 17:26:58,141 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:26:58,157 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8684 for client with pid 19160 
2017-08-16 17:26:58,157 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:27:01,262 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:27:06,421 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:27:08,195 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:27:42,398 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:27:42,402 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:34:25,865 [ thread 89]   INFO - t.javadoc.JavaDocInfoGenerator - Wrong navElement: FUN; original = KtLightMethodImpl:trackOrderAction of class class org.jetbrains.kotlin.asJava.elements.KtLightMethodImpl 
2017-08-16 17:34:54,136 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8627 for client with pid 19732 
2017-08-16 17:34:54,136 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:34:54,138 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:34:54,257 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:34:55,036 [ thread 90]   INFO -                    #InstantRun - Build timestamps: Local: 1502897189212, Device: 1502897189212 
2017-08-16 17:34:55,110 [ thread 90]   INFO -                    #InstantRun - Application not running 
2017-08-16 17:34:55,149 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8627 for client with pid 19732 
2017-08-16 17:34:55,149 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:34:55,160 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '18406': closed 
2017-08-16 17:34:55,160 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:34:55,417 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 17:34:55,417 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 17:34:55,784 [ thread 90]   INFO - ools.idea.fd.InstantRunBuilder - BuildCause: USER_CHOSE_TO_COLDSWAP, BuildMode: COLD 
2017-08-16 17:34:55,784 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - About to execute Gradle tasks: [:buyer:assembleInternalDebug] 
2017-08-16 17:34:55,788 [ thread 88]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 17:34:55,807 [ thread 88]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 17:34:55,807 [ thread 88]   INFO - ild.invoker.GradleBuildInvoker - Build command line options: [--configure-on-demand, -Pandroid.injected.invoked.from.ide=true, -Pandroid.injected.build.api=25, -Pandroid.injected.build.density=xxhdpi, -Pandroid.injected.build.abi=arm64-v8a,armeabi-v7a,armeabi, -Pandroid.injected.restrict.variant.name=internalDebug, -Pandroid.injected.restrict.variant.project=:buyer, -Pandroid.optional.compilation=INSTANT_DEV,RESTART_ONLY, -Pandroid.injected.coldswap.mode=MULTIAPK, --no-build-cache, --init-script, /tmp/sync.local.repo740.gradle] 
2017-08-16 17:34:55,807 [ thread 88]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: --configure-on-demand -Pandroid.injected.invoked.from.ide=true -Pandroid.injected.build.api=25 -Pandroid.injected.build.density=xxhdpi -Pandroid.injected.build.abi=arm64-v8a,armeabi-v7a,armeabi -Pandroid.injected.restrict.variant.name=internalDebug -Pandroid.injected.restrict.variant.project=:buyer -Pandroid.optional.compilation=INSTANT_DEV,RESTART_ONLY -Pandroid.injected.coldswap.mode=MULTIAPK --no-build-cache --init-script /tmp/sync.local.repo740.gradle 
2017-08-16 17:34:59,258 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - Gradle build finished in 3s 468ms 
2017-08-16 17:34:59,304 [se-915-b01]   INFO - pl.ProjectRootManagerComponent - project roots have changed 
2017-08-16 17:34:59,307 [ thread 90]   INFO - a.gradle.run.MakeBeforeRunTask - Gradle invocation complete, success = true 
2017-08-16 17:34:59,323 [ thread 90]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 1ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 17:34:59,370 [ thread 90]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 46ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 17:34:59,730 [ thread 91]   INFO -                    #InstantRun - $ adb install-multiple -r -t -p com.dawanda.internal.shopping /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_0.apk  
2017-08-16 17:35:01,206 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:35:02,661 [ thread 91]   INFO - idea.run.AndroidProcessHandler - Adding device oneplus-one_a2003-192.168.51.17:5555 to monitor for launched app: com.dawanda.internal.shopping 
2017-08-16 17:35:02,737 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8627 for client with pid 19937 
2017-08-16 17:35:02,737 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:35:03,458 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 17:35:03,458 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 17:35:03,458 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 17:35:15,486 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8645 for client with pid 20037 
2017-08-16 17:35:15,487 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:36:00,648 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8653 for client with pid 20198 
2017-08-16 17:36:00,648 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:36:00,778 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 17:36:00,778 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 17:36:00,778 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 17:36:00,803 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 17:36:00,803 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 17:36:00,803 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 17:36:01,266 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:36:01,665 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8622 for client with pid 20198 
2017-08-16 17:36:01,665 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:36:05,076 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8653 for client with pid 20294 
2017-08-16 17:36:05,077 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:36:06,095 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8653 for client with pid 20294 
2017-08-16 17:36:06,095 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:37:25,821 [ thread 91]   INFO - .diagnostic.PerformanceWatcher - Find Usages took 82ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 17:38:53,973 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8663 for client with pid 20616 
2017-08-16 17:38:53,973 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:38:54,383 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:38:54,384 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:40:40,535 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8633 for client with pid 20873 
2017-08-16 17:40:40,535 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:40:41,608 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8633 for client with pid 20873 
2017-08-16 17:40:41,608 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:41:15,259 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8665 for client with pid 20994 
2017-08-16 17:41:15,259 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,270 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,270 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,271 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,271 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,271 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,271 [st Monitor]   INFO - id.tools.idea.ddms.DevicePanel - Device disconnected: oneplus-one_a2003-192.168.51.17:5555 
2017-08-16 17:54:27,271 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,271 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,271 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,271 [st Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device disconnected: 192.168.51.17:5555 
2017-08-16 17:54:27,271 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,271 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,272 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,272 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,272 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,272 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,272 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,272 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,272 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,272 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,272 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,273 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,273 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,273 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,273 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,273 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,273 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,273 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,273 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,273 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,274 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,274 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,274 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,274 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,274 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,274 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,274 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,274 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,274 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,274 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,275 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,275 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,275 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,275 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,275 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,275 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,275 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,275 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,275 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,275 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,276 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,276 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,276 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,276 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,276 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,276 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,276 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,276 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,276 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,277 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,277 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,277 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,277 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,277 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:27,282 [ thread 98]   INFO -                    #InstantRun - Package com.dawanda.internal.shopping was not detected on the device. 
2017-08-16 17:54:27,287 [ thread 98]   INFO - ools.idea.fd.InstantRunBuilder - BuildCause: APP_NOT_INSTALLED, BuildMode: FULL 
2017-08-16 17:54:27,322 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - About to execute Gradle tasks: [:buyer:assembleInternalDebug] 
2017-08-16 17:54:27,326 [ thread 99]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 17:54:27,383 [ thread 99]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 17:54:27,383 [ thread 99]   INFO - ild.invoker.GradleBuildInvoker - Build command line options: [--configure-on-demand, -Pandroid.injected.invoked.from.ide=true, -Pandroid.injected.build.api=25, -Pandroid.injected.build.density=xxhdpi, -Pandroid.injected.build.abi=arm64-v8a,armeabi-v7a,armeabi, -Pandroid.injected.restrict.variant.name=internalDebug, -Pandroid.injected.restrict.variant.project=:buyer, -Pandroid.optional.compilation=INSTANT_DEV,FULL_APK, -Pandroid.injected.coldswap.mode=MULTIAPK, --no-build-cache, --init-script, /tmp/sync.local.repo474.gradle] 
2017-08-16 17:54:27,383 [ thread 99]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: --configure-on-demand -Pandroid.injected.invoked.from.ide=true -Pandroid.injected.build.api=25 -Pandroid.injected.build.density=xxhdpi -Pandroid.injected.build.abi=arm64-v8a,armeabi-v7a,armeabi -Pandroid.injected.restrict.variant.name=internalDebug -Pandroid.injected.restrict.variant.project=:buyer -Pandroid.optional.compilation=INSTANT_DEV,FULL_APK -Pandroid.injected.coldswap.mode=MULTIAPK --no-build-cache --init-script /tmp/sync.local.repo474.gradle 
2017-08-16 17:54:27,637 [thread 101]   WARN - ewvfs.persistent.RefreshWorker - [x] fs=LocalFileSystem dir=file:///home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/res/merged/internal/debug name=drawable-mdpi-v4_com_facebook_tooltip_black_topnub.png.flat 
2017-08-16 17:54:27,637 [thread 101]   WARN - ewvfs.persistent.RefreshWorker - [x] fs=LocalFileSystem dir=file:///home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/res/merged/internal/debug name=drawable-hdpi-v4_com_facebook_tooltip_blue_bottomnub.png.flat 
2017-08-16 17:54:27,637 [thread 101]   WARN - ewvfs.persistent.RefreshWorker - [x] fs=LocalFileSystem dir=file:///home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/res/merged/internal/debug name=drawable-ldrtl-xxhdpi-v17_abc_ic_menu_cut_mtrl_alpha.png.flat 
2017-08-16 17:54:27,637 [thread 101]   WARN - ewvfs.persistent.RefreshWorker - [x] fs=LocalFileSystem dir=file:///home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/res/merged/internal/debug name=drawable-hdpi-v4_abc_textfield_activated_mtrl_alpha.9.png.flat 
2017-08-16 17:54:27,637 [thread 101]   WARN - ewvfs.persistent.RefreshWorker - [x] fs=LocalFileSystem dir=file:///home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/res/merged/internal/debug name=drawable-ldrtl-hdpi-v17_abc_ic_menu_copy_mtrl_am_alpha.png.flat 
2017-08-16 17:54:27,637 [thread 101]   WARN - ewvfs.persistent.RefreshWorker - [x] fs=LocalFileSystem dir=file:///home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/res/merged/internal/debug name=drawable_xml_product_details_shadow_gradient_downwards.xml.flat 
2017-08-16 17:54:27,637 [thread 101]   WARN - ewvfs.persistent.RefreshWorker - [x] fs=LocalFileSystem dir=file:///home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/res/merged/internal/debug name=drawable-hdpi-v4_abc_text_select_handle_right_mtrl_light.png.flat 
2017-08-16 17:54:27,637 [thread 101]   WARN - ewvfs.persistent.RefreshWorker - [x] fs=LocalFileSystem dir=file:///home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/res/merged/internal/debug name=drawable-hdpi-v4_abc_textfield_search_default_mtrl_alpha.9.png.flat 
2017-08-16 17:54:27,637 [thread 101]   WARN - ewvfs.persistent.RefreshWorker - [x] fs=LocalFileSystem dir=file:///home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/res/merged/internal/debug name=drawable-xhdpi-v4_abc_scrubber_control_to_pressed_mtrl_000.png.flat 
2017-08-16 17:54:27,637 [thread 101]   WARN - ewvfs.persistent.RefreshWorker - [x] fs=LocalFileSystem dir=file:///home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/res/merged/internal/debug name=drawable-xxxhdpi-v4_abc_scrubber_control_to_pressed_mtrl_000.png.flat 
2017-08-16 17:54:27,637 [thread 101]   WARN - ewvfs.persistent.RefreshWorker - [x] fs=LocalFileSystem dir=file:///home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/res/merged/internal/debug name=drawable-xxxhdpi-v4_abc_scrubber_control_to_pressed_mtrl_005.png.flat 
2017-08-16 17:54:27,637 [thread 101]   WARN - ewvfs.persistent.RefreshWorker - [x] fs=LocalFileSystem dir=file:///home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/res/merged/internal/debug name=drawable-hdpi-v4_common_google_signin_btn_icon_light_normal_background.9.png.flat 
2017-08-16 17:54:27,637 [thread 101]   WARN - ewvfs.persistent.RefreshWorker - [x] fs=LocalFileSystem dir=file:///home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/res/merged/internal/debug name=drawable-xhdpi-v4_common_google_signin_btn_icon_dark_normal_background.9.png.flat 
2017-08-16 17:54:28,914 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - Gradle build finished in 1s 585ms 
2017-08-16 17:54:28,939 [se-915-b01]   INFO - pl.ProjectRootManagerComponent - project roots have changed 
2017-08-16 17:54:28,952 [ thread 98]   INFO - a.gradle.run.MakeBeforeRunTask - Gradle invocation complete, success = true 
2017-08-16 17:54:28,962 [ thread 98]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 2ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 17:54:28,981 [ thread 98]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 19ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 17:54:29,035 [ thread 99]   INFO -                    #InstantRun - $ adb install-multiple -r -t /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_8.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_7.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_9.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/dep/dependencies.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_5.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_4.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_3.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_6.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_0.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_1.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_2.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/outputs/apk/internal/debug/buyer-internal-debug.apk  
2017-08-16 17:54:29,040 [ thread 98]   WARN - ools.idea.run.util.LaunchUtils - Unable to dismiss keyguard before launching activity 
2017-08-16 17:54:43,026 [st Monitor]   INFO - id.tools.idea.ddms.DevicePanel - Device connected: 192.168.51.17:5555 
2017-08-16 17:54:43,026 [st Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device connected: 192.168.51.17:5555 
2017-08-16 17:54:43,147 [st Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:43,204 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8600 for client with pid 20994 
2017-08-16 17:54:43,214 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8601 for client with pid 11525 
2017-08-16 17:54:43,214 [thread 106]   INFO - .adbimpl.AdbDeviceCapabilities - Device "oneplus-one_a2003-192.168.51.17:5555(192.168.51.17:5555)-ONLINE" does not seem to support the "su 0" command: 
  Permission denied 
com.android.tools.idea.explorer.adbimpl.AdbShellCommandException: Permission denied
	at com.android.tools.idea.explorer.adbimpl.AdbShellCommandException.create(AdbShellCommandException.java:26)
	at com.android.tools.idea.explorer.adbimpl.AdbShellCommandResult.throwIfError(AdbShellCommandResult.java:46)
	at com.android.tools.idea.explorer.adbimpl.AdbDeviceCapabilities.supportsSuRootCommandWorker(AdbDeviceCapabilities.java:204)
	at com.android.tools.idea.explorer.adbimpl.AdbDeviceCapabilities.supportsSuRootCommand(AdbDeviceCapabilities.java:78)
	at com.android.tools.idea.explorer.adbimpl.AdbDeviceFileSystem.lambda$resolveMountPoint$1(AdbDeviceFileSystem.java:191)
	at com.android.tools.idea.explorer.FutureCallbackExecutor.lambda$executeAsync$0(FutureCallbackExecutor.java:63)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2017-08-16 17:54:43,225 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8602 for client with pid 4231 
2017-08-16 17:54:43,236 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8603 for client with pid 14728 
2017-08-16 17:54:43,292 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8604 for client with pid 20616 
2017-08-16 17:54:43,308 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8605 for client with pid 6025 
2017-08-16 17:54:43,318 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8606 for client with pid 20873 
2017-08-16 17:54:43,329 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8607 for client with pid 11277 
2017-08-16 17:54:43,339 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8608 for client with pid 5902 
2017-08-16 17:54:43,350 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8609 for client with pid 1039 
2017-08-16 17:54:43,360 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8610 for client with pid 4751 
2017-08-16 17:54:43,371 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8611 for client with pid 30483 
2017-08-16 17:54:43,381 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8612 for client with pid 22420 
2017-08-16 17:54:43,428 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8613 for client with pid 5909 
2017-08-16 17:54:43,438 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8614 for client with pid 4247 
2017-08-16 17:54:43,449 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8615 for client with pid 7319 
2017-08-16 17:54:43,459 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8616 for client with pid 7450 
2017-08-16 17:54:43,470 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8617 for client with pid 23579 
2017-08-16 17:54:43,480 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8619 for client with pid 19359 
2017-08-16 17:54:43,491 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8620 for client with pid 23456 
2017-08-16 17:54:43,501 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8621 for client with pid 4643 
2017-08-16 17:54:43,517 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8622 for client with pid 13091 
2017-08-16 17:54:43,527 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8623 for client with pid 1321 
2017-08-16 17:54:43,538 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8624 for client with pid 7083 
2017-08-16 17:54:43,594 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8625 for client with pid 6959 
2017-08-16 17:54:43,605 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8626 for client with pid 8243 
2017-08-16 17:54:43,615 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8627 for client with pid 22835 
2017-08-16 17:54:43,626 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8628 for client with pid 18996 
2017-08-16 17:54:43,636 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8629 for client with pid 20917 
2017-08-16 17:54:43,647 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8630 for client with pid 5944 
2017-08-16 17:54:43,657 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8631 for client with pid 697 
2017-08-16 17:54:43,668 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8632 for client with pid 6074 
2017-08-16 17:54:43,678 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8633 for client with pid 11450 
2017-08-16 17:54:43,689 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8634 for client with pid 5053 
2017-08-16 17:54:43,699 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8635 for client with pid 22589 
2017-08-16 17:54:43,710 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8636 for client with pid 5951 
2017-08-16 17:54:43,720 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8637 for client with pid 23488 
2017-08-16 17:54:43,731 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8638 for client with pid 19137 
2017-08-16 17:54:43,747 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8639 for client with pid 20294 
2017-08-16 17:54:43,757 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8640 for client with pid 21191 
2017-08-16 17:54:43,768 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8641 for client with pid 23625 
2017-08-16 17:54:43,778 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8643 for client with pid 22607 
2017-08-16 17:54:43,794 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8644 for client with pid 22992 
2017-08-16 17:54:43,804 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8645 for client with pid 21328 
2017-08-16 17:54:43,815 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8646 for client with pid 5972 
2017-08-16 17:54:43,830 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8647 for client with pid 23766 
2017-08-16 17:54:43,841 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8648 for client with pid 6359 
2017-08-16 17:54:43,851 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8649 for client with pid 6105 
2017-08-16 17:54:43,906 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8650 for client with pid 5724 
2017-08-16 17:54:43,927 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8651 for client with pid 19937 
2017-08-16 17:54:43,943 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8652 for client with pid 25445 
2017-08-16 17:54:43,953 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8653 for client with pid 20198 
2017-08-16 17:54:43,964 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8654 for client with pid 5864 
2017-08-16 17:54:43,974 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8659 for client with pid 16875 
2017-08-16 17:54:43,985 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8663 for client with pid 21232 
2017-08-16 17:54:44,044 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8665 for client with pid 18162 
2017-08-16 17:54:44,055 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8669 for client with pid 7796 
2017-08-16 17:54:44,071 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8674 for client with pid 22647 
2017-08-16 17:54:44,081 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8680 for client with pid 27385 
2017-08-16 17:54:44,092 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8681 for client with pid 29563 
2017-08-16 17:54:44,102 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8682 for client with pid 18940 
2017-08-16 17:54:44,113 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8683 for client with pid 11902 
2017-08-16 17:54:44,113 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:54:48,660 [thread 106]   INFO -                    #InstantRun - Build timestamps: Local: 1502898867497, Device: 1502897695932 
2017-08-16 17:54:49,730 [thread 106]   INFO - ools.idea.fd.InstantRunBuilder - BuildCause: MISMATCHING_TIMESTAMPS, BuildMode: FULL 
2017-08-16 17:54:49,730 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - About to execute Gradle tasks: [:buyer:assembleInternalDebug] 
2017-08-16 17:54:49,734 [thread 101]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 17:54:49,751 [thread 101]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 17:54:49,751 [thread 101]   INFO - ild.invoker.GradleBuildInvoker - Build command line options: [--configure-on-demand, -Pandroid.injected.invoked.from.ide=true, -Pandroid.injected.build.api=25, -Pandroid.injected.build.density=xxhdpi, -Pandroid.injected.build.abi=arm64-v8a,armeabi-v7a,armeabi, -Pandroid.injected.restrict.variant.name=internalDebug, -Pandroid.injected.restrict.variant.project=:buyer, -Pandroid.optional.compilation=INSTANT_DEV,FULL_APK, -Pandroid.injected.coldswap.mode=MULTIAPK, --no-build-cache, --init-script, /tmp/sync.local.repo228.gradle] 
2017-08-16 17:54:49,752 [thread 101]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: --configure-on-demand -Pandroid.injected.invoked.from.ide=true -Pandroid.injected.build.api=25 -Pandroid.injected.build.density=xxhdpi -Pandroid.injected.build.abi=arm64-v8a,armeabi-v7a,armeabi -Pandroid.injected.restrict.variant.name=internalDebug -Pandroid.injected.restrict.variant.project=:buyer -Pandroid.optional.compilation=INSTANT_DEV,FULL_APK -Pandroid.injected.coldswap.mode=MULTIAPK --no-build-cache --init-script /tmp/sync.local.repo228.gradle 
2017-08-16 17:54:51,061 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - Gradle build finished in 1s 325ms 
2017-08-16 17:54:51,083 [se-915-b01]   INFO - pl.ProjectRootManagerComponent - project roots have changed 
2017-08-16 17:54:51,086 [thread 106]   INFO - a.gradle.run.MakeBeforeRunTask - Gradle invocation complete, success = true 
2017-08-16 17:54:51,095 [thread 106]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 3ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 17:54:51,110 [thread 106]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 15ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 17:54:51,134 [thread 106]   INFO -                    #InstantRun - $ adb install-multiple -r -t /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_8.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_7.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_9.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/dep/dependencies.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_5.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_4.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_3.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_6.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_0.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_1.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_2.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/outputs/apk/internal/debug/buyer-internal-debug.apk  
2017-08-16 17:55:06,488 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8684 for client with pid 23968 
2017-08-16 17:55:06,488 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:55:07,501 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8684 for client with pid 23968 
2017-08-16 17:55:07,502 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:55:07,626 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:55:07,626 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:55:07,985 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:55:08,174 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8606 for client with pid 24003 
2017-08-16 17:55:08,174 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:55:08,328 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8651 for client with pid 24038 
2017-08-16 17:55:08,328 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:55:08,511 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:55:08,522 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8685 for client with pid 24063 
2017-08-16 17:55:08,524 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:55:08,740 [thread 106]   INFO - idea.run.AndroidProcessHandler - Adding device oneplus-one_a2003-192.168.51.17:5555 to monitor for launched app: com.dawanda.internal.shopping 
2017-08-16 17:55:08,923 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:55:09,113 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:55:09,227 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:55:09,438 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 17:55:09,489 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 17:55:09,490 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 17:55:09,545 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8620 for client with pid 24063 
2017-08-16 17:55:09,546 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:55:09,556 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8635 for client with pid 24085 
2017-08-16 17:55:09,572 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '23456': closed 
2017-08-16 17:55:09,587 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '22589': closed 
2017-08-16 17:55:09,598 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '22647': closed 
2017-08-16 17:55:09,598 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:55:09,614 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '23456': closed 
2017-08-16 17:55:09,629 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8687 for client with pid 24115 
2017-08-16 17:55:09,645 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '22589': closed 
2017-08-16 17:55:09,656 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '22647': closed 
2017-08-16 17:55:09,656 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:55:09,667 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '23456': closed 
2017-08-16 17:55:09,687 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '22647': closed 
2017-08-16 17:55:09,705 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:55:09,716 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '23456': closed 
2017-08-16 17:55:09,727 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8693 for client with pid 24138 
2017-08-16 17:55:09,737 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '22647': closed 
2017-08-16 17:55:09,763 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:55:09,774 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '23456': closed 
2017-08-16 17:55:09,784 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8696 for client with pid 24157 
2017-08-16 17:55:09,795 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '22647': closed 
2017-08-16 17:55:09,795 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:55:09,806 [nt Monitor]   WARN -            #com.android.ddmlib - Adb rejected connection to client '23456': closed 
2017-08-16 17:55:09,806 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:55:09,817 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8699 for client with pid 24178 
2017-08-16 17:55:09,817 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:55:13,715 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:55:13,715 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:55:19,591 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:55:19,591 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:55:31,812 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:58:19,947 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8617 for client with pid 24475 
2017-08-16 17:58:19,947 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:58:20,264 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:58:20,264 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 17:58:59,564 [thread 109]   INFO - .diagnostic.PerformanceWatcher - Find Usages took 18ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 18:04:09,272 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8637 for client with pid 24764 
2017-08-16 18:04:09,272 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:04:10,387 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:06:44,449 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8639 for client with pid 24903 
2017-08-16 18:06:44,449 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:06:44,873 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8641 for client with pid 24933 
2017-08-16 18:06:44,873 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:06:45,798 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:07:59,815 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:10:06,230 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:10:06,233 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8604 for client with pid 25163 
2017-08-16 18:10:06,233 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:10:06,299 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:10:07,247 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8604 for client with pid 25163 
2017-08-16 18:10:07,247 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:10:07,249 [thread 113]   INFO -                    #InstantRun - Build timestamps: Local: 1502898889869, Device: 1502898889869 
2017-08-16 18:10:07,267 [thread 113]   WARN -                    #InstantRun - IOException while attempting to determine if app is in foreground, assuming app not alive 
2017-08-16 18:10:07,267 [thread 113]   WARN -                    #InstantRun - Force killing app 
2017-08-16 18:10:07,501 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 18:10:08,128 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:10:08,128 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:10:09,214 [thread 113]   INFO - ools.idea.fd.InstantRunBuilder - BuildCause: USER_CHOSE_TO_COLDSWAP, BuildMode: COLD 
2017-08-16 18:10:09,215 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - About to execute Gradle tasks: [:buyer:assembleInternalDebug] 
2017-08-16 18:10:09,219 [thread 114]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 18:10:09,244 [thread 114]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 18:10:09,245 [thread 114]   INFO - ild.invoker.GradleBuildInvoker - Build command line options: [--configure-on-demand, -Pandroid.injected.invoked.from.ide=true, -Pandroid.injected.build.api=25, -Pandroid.injected.build.density=xxhdpi, -Pandroid.injected.build.abi=arm64-v8a,armeabi-v7a,armeabi, -Pandroid.injected.restrict.variant.name=internalDebug, -Pandroid.injected.restrict.variant.project=:buyer, -Pandroid.optional.compilation=INSTANT_DEV,RESTART_ONLY, -Pandroid.injected.coldswap.mode=MULTIAPK, --no-build-cache, --init-script, /tmp/sync.local.repo885.gradle] 
2017-08-16 18:10:09,245 [thread 114]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: --configure-on-demand -Pandroid.injected.invoked.from.ide=true -Pandroid.injected.build.api=25 -Pandroid.injected.build.density=xxhdpi -Pandroid.injected.build.abi=arm64-v8a,armeabi-v7a,armeabi -Pandroid.injected.restrict.variant.name=internalDebug -Pandroid.injected.restrict.variant.project=:buyer -Pandroid.optional.compilation=INSTANT_DEV,RESTART_ONLY -Pandroid.injected.coldswap.mode=MULTIAPK --no-build-cache --init-script /tmp/sync.local.repo885.gradle 
2017-08-16 18:10:13,321 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - Gradle build finished with 2 error(s) in 4s 92ms 
2017-08-16 18:10:13,365 [se-915-b01]   INFO - pl.ProjectRootManagerComponent - project roots have changed 
2017-08-16 18:10:13,368 [thread 113]   INFO - a.gradle.run.MakeBeforeRunTask - Couldn't get post build models. 
2017-08-16 18:10:13,368 [thread 113]   INFO - a.gradle.run.MakeBeforeRunTask - Gradle invocation complete, success = false 
2017-08-16 18:10:13,410 [se-915-b01]   INFO - e.project.sync.GradleSyncState - Started sync with Gradle for project 'AndroidNative'. 
2017-08-16 18:10:13,414 [thread 114]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 18:10:13,415 [thread 114]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 18:10:13,417 [thread 101]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 2ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 18:10:13,418 [thread 114]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 18:10:13,420 [thread 114]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: -Didea.version=3.0 -Djava.awt.headless=true -Pandroid.injected.build.model.only=true -Pandroid.injected.build.model.only.advanced=true -Pandroid.injected.invoked.from.ide=true -Pandroid.injected.build.model.only.versioned=3 -Pandroid.injected.studio.version=3.0.0.10 --init-script /tmp/sync.local.repo917.gradle --init-script /tmp/ijinit.gradle 
2017-08-16 18:10:13,445 [thread 101]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 28ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 18:10:15,467 [thread 114]   INFO - .project.GradleProjectResolver - Gradle project resolve error 
java.lang.NullPointerException
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputFile(BuildOutput.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy208.getOutputFile(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeOutputFile.<init>(IdeOutputFile.java:53)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantOutput.lambda$new$0(IdeVariantOutput.java:48)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantOutput.<init>(IdeVariantOutput.java:48)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactOutput.<init>(IdeAndroidArtifactOutput.java:38)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.lambda$new$0(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$0(IdeVariantImpl.java:60)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:59)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2017-08-16 18:10:15,468 [thread 114]   WARN - nal.AbstractExternalSystemTask - Cause: java.lang.NullPointerException
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputFile(BuildOutput.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy208.getOutputFile(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeOutputFile.<init>(IdeOutputFile.java:53)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantOutput.lambda$new$0(IdeVariantOutput.java:48)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantOutput.<init>(IdeVariantOutput.java:48)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactOutput.<init>(IdeAndroidArtifactOutput.java:38)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.lambda$new$0(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$0(IdeVariantImpl.java:60)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:59)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
 
com.intellij.openapi.externalSystem.model.ExternalSystemException: Cause: java.lang.NullPointerException
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputFile(BuildOutput.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy208.getOutputFile(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeOutputFile.<init>(IdeOutputFile.java:53)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantOutput.lambda$new$0(IdeVariantOutput.java:48)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantOutput.<init>(IdeVariantOutput.java:48)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactOutput.<init>(IdeAndroidArtifactOutput.java:38)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.lambda$new$0(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$0(IdeVariantImpl.java:60)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:59)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

	at com.android.tools.idea.gradle.project.sync.idea.ProjectImportErrorHandler.getUserFriendlyError(ProjectImportErrorHandler.java:85)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.getUserFriendlyError(AndroidGradleProjectResolver.java:414)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.getUserFriendlyError(AbstractProjectResolverExtension.java:158)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:906)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputFile(BuildOutput.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy208.getOutputFile(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeOutputFile.<init>(IdeOutputFile.java:53)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantOutput.lambda$new$0(IdeVariantOutput.java:48)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantOutput.<init>(IdeVariantOutput.java:48)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactOutput.<init>(IdeAndroidArtifactOutput.java:38)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.lambda$new$0(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$0(IdeVariantImpl.java:60)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:59)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	... 26 more

2017-08-16 18:10:15,468 [thread 114]   WARN - ect.sync.idea.ProjectSetUpTask - Cause: java.lang.NullPointerException
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputFile(BuildOutput.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy208.getOutputFile(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeOutputFile.<init>(IdeOutputFile.java:53)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantOutput.lambda$new$0(IdeVariantOutput.java:48)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantOutput.<init>(IdeVariantOutput.java:48)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactOutput.<init>(IdeAndroidArtifactOutput.java:38)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.lambda$new$0(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$0(IdeVariantImpl.java:60)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:59)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)


Consult IDE log for more details (Help | Show Log) 
2017-08-16 18:10:15,469 [thread 114]   INFO - e.project.sync.GradleSyncState - Gradle sync failed: Cause: java.lang.NullPointerException
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputFile(BuildOutput.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy208.getOutputFile(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeOutputFile.<init>(IdeOutputFile.java:53)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantOutput.lambda$new$0(IdeVariantOutput.java:48)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantOutput.<init>(IdeVariantOutput.java:48)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactOutput.<init>(IdeAndroidArtifactOutput.java:38)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.lambda$new$0(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$0(IdeVariantImpl.java:60)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:59)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)


Consult IDE log for more details (Help | Show Log) (2s 59ms) 
2017-08-16 18:10:15,546 [thread 120]   INFO -       #com.jetbrains.cidr.lang - Clearing symbols finished in 0 s. 
2017-08-16 18:10:15,550 [thread 120]   INFO -       #com.jetbrains.cidr.lang - Loading symbols finished in 0 s. 
2017-08-16 18:10:15,551 [thread 120]   INFO -       #com.jetbrains.cidr.lang - Building symbols finished in 0 s. 
2017-08-16 18:10:15,551 [thread 120]   INFO -       #com.jetbrains.cidr.lang - Saving symbols finished in 0 s. 
2017-08-16 18:11:01,673 [thread 120]   INFO - t.javadoc.JavaDocInfoGenerator - Wrong navElement: FUN; original = KtLightMethodImpl:updateUserBasedSessionParameters of class class org.jetbrains.kotlin.asJava.elements.KtLightMethodImpl 
2017-08-16 18:11:29,652 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8604 for client with pid 25287 
2017-08-16 18:11:29,653 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:11:44,673 [thread 120]   INFO - t.javadoc.JavaDocInfoGenerator - Wrong navElement: FUN; original = KtLightMethodImpl:updateUserBasedSessionParameters of class class org.jetbrains.kotlin.asJava.elements.KtLightMethodImpl 
2017-08-16 18:12:20,682 [thread 116]   INFO - project.TargetPlatformDetector - Using default platform for file: SerializableKt.class 
2017-08-16 18:16:33,800 [se-915-b01]   INFO - agnostic.FrequentEventDetector - Too many events posted, #1. Event: java.awt.event.InvocationEvent[INVOCATION_DEFAULT,runnable=javax.swing.text.DefaultCaret$1@4d5cac9c,notifier=null,catchExceptions=false,when=1502900193800] on sun.awt.X11.XToolkit@43b83c10
java.lang.Throwable
	at com.intellij.openapi.diagnostic.FrequentEventDetector.eventHappened(FrequentEventDetector.java:74)
	at com.intellij.ide.IdeEventQueue.doPostEvent(IdeEventQueue.java:1153)
	at com.intellij.ide.IdeEventQueue.postEvent(IdeEventQueue.java:1144)
	at java.awt.EventQueue.invokeLater(EventQueue.java:1272)
	at javax.swing.SwingUtilities.invokeLater(SwingUtilities.java:1290)
	at javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1290)
	at javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1173)
	at javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1154)
	at javax.swing.text.DefaultCaret$Handler.removeUpdate(DefaultCaret.java:1797)
	at javax.swing.text.AbstractDocument.fireRemoveUpdate(AbstractDocument.java:259)
	at javax.swing.text.AbstractDocument.handleRemove(AbstractDocument.java:622)
	at javax.swing.text.AbstractDocument.remove(AbstractDocument.java:590)
	at javax.swing.text.AbstractDocument.replace(AbstractDocument.java:666)
	at javax.swing.text.JTextComponent.setText(JTextComponent.java:1669)
	at javax.swing.text.html.HiddenTagView._setTextFromModel(HiddenTagView.java:188)
	at javax.swing.text.html.HiddenTagView.setTextFromModel(HiddenTagView.java:164)
	at javax.swing.text.html.HiddenTagView.changedUpdate(HiddenTagView.java:126)
	at javax.swing.text.View.forwardUpdateToView(View.java:1231)
	at javax.swing.text.FlowView$LogicalView.forwardUpdateToView(FlowView.java:804)
	at javax.swing.text.View.forwardUpdate(View.java:1162)
	at javax.swing.text.FlowView$LogicalView.forwardUpdate(FlowView.java:814)
	at javax.swing.text.View.changedUpdate(View.java:792)
	at javax.swing.text.FlowView.changedUpdate(FlowView.java:283)
	at javax.swing.text.ParagraphView.changedUpdate(ParagraphView.java:788)
	at javax.swing.text.View.forwardUpdateToView(View.java:1231)
	at javax.swing.text.View.forwardUpdate(View.java:1162)
	at javax.swing.text.BoxView.forwardUpdate(BoxView.java:240)
	at javax.swing.text.View.changedUpdate(View.java:792)
	at javax.swing.text.html.BlockView.changedUpdate(BlockView.java:341)
	at javax.swing.text.View.forwardUpdateToView(View.java:1231)
	at javax.swing.text.View.forwardUpdate(View.java:1162)
	at javax.swing.text.BoxView.forwardUpdate(BoxView.java:240)
	at javax.swing.text.View.changedUpdate(View.java:792)
	at javax.swing.text.html.BlockView.changedUpdate(BlockView.java:341)
	at javax.swing.plaf.basic.BasicTextUI$RootView.changedUpdate(BasicTextUI.java:1638)
	at javax.swing.plaf.basic.BasicTextUI$UpdateHandler.changedUpdate(BasicTextUI.java:1914)
	at javax.swing.text.AbstractDocument.fireChangedUpdate(AbstractDocument.java:230)
	at javax.swing.text.html.HTMLDocument.fireChangedUpdate(HTMLDocument.java:1738)
	at javax.swing.text.DefaultStyledDocument$ChangeUpdateRunnable.run(DefaultStyledDocument.java:2738)
	at java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:311)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:762)
	at java.awt.EventQueue.access$500(EventQueue.java:98)
	at java.awt.EventQueue$3.run(EventQueue.java:715)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:80)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:732)
	at com.intellij.ide.IdeEventQueue.defaultDispatchEvent(IdeEventQueue.java:827)
	at com.intellij.ide.IdeEventQueue._dispatchEvent(IdeEventQueue.java:655)
	at com.intellij.ide.IdeEventQueue.dispatchEvent(IdeEventQueue.java:365)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
 
2017-08-16 18:16:33,877 [se-915-b01]   INFO - agnostic.FrequentEventDetector - Too many events posted, #1. Event: java.awt.event.InvocationEvent[INVOCATION_DEFAULT,runnable=javax.swing.text.DefaultCaret$1@2b119d90,notifier=null,catchExceptions=false,when=1502900193877] on sun.awt.X11.XToolkit@43b83c10 
2017-08-16 18:16:33,949 [se-915-b01]   INFO - agnostic.FrequentEventDetector - Too many events posted, #1. Event: java.awt.event.InvocationEvent[INVOCATION_DEFAULT,runnable=javax.swing.text.DefaultCaret$1@57f91bbc,notifier=null,catchExceptions=false,when=1502900193949] on sun.awt.X11.XToolkit@43b83c10 
2017-08-16 18:16:35,092 [se-915-b01]   INFO - agnostic.FrequentEventDetector - Too many events posted, #1. Event: java.awt.event.InvocationEvent[INVOCATION_DEFAULT,runnable=javax.swing.text.DefaultCaret$1@561378d9,notifier=null,catchExceptions=false,when=1502900195092] on sun.awt.X11.XToolkit@43b83c10 
2017-08-16 18:16:35,182 [se-915-b01]   INFO - agnostic.FrequentEventDetector - Too many events posted, #2. Event: java.awt.event.InvocationEvent[INVOCATION_DEFAULT,runnable=javax.swing.text.DefaultCaret$1@cd50887,notifier=null,catchExceptions=false,when=1502900195182] on sun.awt.X11.XToolkit@43b83c10
java.lang.Throwable
	at com.intellij.openapi.diagnostic.FrequentEventDetector.eventHappened(FrequentEventDetector.java:74)
	at com.intellij.ide.IdeEventQueue.doPostEvent(IdeEventQueue.java:1153)
	at com.intellij.ide.IdeEventQueue.postEvent(IdeEventQueue.java:1144)
	at java.awt.EventQueue.invokeLater(EventQueue.java:1272)
	at javax.swing.SwingUtilities.invokeLater(SwingUtilities.java:1290)
	at javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1290)
	at javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1173)
	at javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1154)
	at javax.swing.text.DefaultCaret$Handler.insertUpdate(DefaultCaret.java:1723)
	at javax.swing.text.AbstractDocument.fireInsertUpdate(AbstractDocument.java:201)
	at javax.swing.text.AbstractDocument.handleInsertString(AbstractDocument.java:748)
	at javax.swing.text.AbstractDocument.insertString(AbstractDocument.java:707)
	at javax.swing.text.PlainDocument.insertString(PlainDocument.java:130)
	at javax.swing.text.AbstractDocument.replace(AbstractDocument.java:669)
	at javax.swing.text.JTextComponent.setText(JTextComponent.java:1669)
	at javax.swing.text.html.HiddenTagView._setTextFromModel(HiddenTagView.java:188)
	at javax.swing.text.html.HiddenTagView.setTextFromModel(HiddenTagView.java:164)
	at javax.swing.text.html.HiddenTagView.changedUpdate(HiddenTagView.java:126)
	at javax.swing.text.View.forwardUpdateToView(View.java:1231)
	at javax.swing.text.FlowView$LogicalView.forwardUpdateToView(FlowView.java:804)
	at javax.swing.text.View.forwardUpdate(View.java:1162)
	at javax.swing.text.FlowView$LogicalView.forwardUpdate(FlowView.java:814)
	at javax.swing.text.View.changedUpdate(View.java:792)
	at javax.swing.text.FlowView.changedUpdate(FlowView.java:283)
	at javax.swing.text.ParagraphView.changedUpdate(ParagraphView.java:788)
	at javax.swing.text.View.forwardUpdateToView(View.java:1231)
	at javax.swing.text.View.forwardUpdate(View.java:1162)
	at javax.swing.text.BoxView.forwardUpdate(BoxView.java:240)
	at javax.swing.text.View.changedUpdate(View.java:792)
	at javax.swing.text.html.BlockView.changedUpdate(BlockView.java:341)
	at javax.swing.text.View.forwardUpdateToView(View.java:1231)
	at javax.swing.text.View.forwardUpdate(View.java:1162)
	at javax.swing.text.BoxView.forwardUpdate(BoxView.java:240)
	at javax.swing.text.View.changedUpdate(View.java:792)
	at javax.swing.text.html.BlockView.changedUpdate(BlockView.java:341)
	at javax.swing.plaf.basic.BasicTextUI$RootView.changedUpdate(BasicTextUI.java:1638)
	at javax.swing.plaf.basic.BasicTextUI$UpdateHandler.changedUpdate(BasicTextUI.java:1914)
	at javax.swing.text.AbstractDocument.fireChangedUpdate(AbstractDocument.java:230)
	at javax.swing.text.html.HTMLDocument.fireChangedUpdate(HTMLDocument.java:1738)
	at javax.swing.text.DefaultStyledDocument.setCharacterAttributes(DefaultStyledDocument.java:526)
	at com.intellij.openapi.externalSystem.service.notification.NotificationMessageElement.updateStyle(NotificationMessageElement.java:153)
	at com.intellij.openapi.externalSystem.service.notification.NotificationMessageElement$MyCustomizeColoredTreeCellRendererReplacement.getTreeCellRendererComponent(NotificationMessageElement.java:172)
	at com.intellij.ide.errorTreeView.NewErrorTreeRenderer$MyNotSelectedColoredTreeCellRenderer.getTreeCellRendererComponent(NewErrorTreeRenderer.java:89)
	at com.intellij.ide.errorTreeView.NewErrorTreeRenderer$MyWrapperRenderer.getTreeCellRendererComponent(NewErrorTreeRenderer.java:145)
	at com.intellij.ide.errorTreeView.NewErrorTreeRenderer.getTreeCellRendererComponent(NewErrorTreeRenderer.java:71)
	at javax.swing.JTree.getToolTipText(JTree.java:1547)
	at com.intellij.ide.IdeTooltipManager.isTooltipDefined(IdeTooltipManager.java:205)
	at com.intellij.ide.IdeTooltipManager.maybeShowFor(IdeTooltipManager.java:184)
	at com.intellij.ide.IdeTooltipManager.eventDispatched(IdeTooltipManager.java:159)
	at java.awt.Toolkit$SelectiveAWTEventListener.eventDispatched(Toolkit.java:2425)
	at java.awt.Toolkit$ToolkitEventMulticaster.eventDispatched(Toolkit.java:2316)
	at java.awt.Toolkit$ToolkitEventMulticaster.eventDispatched(Toolkit.java:2316)
	at java.awt.Toolkit$ToolkitEventMulticaster.eventDispatched(Toolkit.java:2316)
	at java.awt.Toolkit$ToolkitEventMulticaster.eventDispatched(Toolkit.java:2316)
	at java.awt.Toolkit$ToolkitEventMulticaster.eventDispatched(Toolkit.java:2316)
	at java.awt.Toolkit$ToolkitEventMulticaster.eventDispatched(Toolkit.java:2316)
	at java.awt.Toolkit$ToolkitEventMulticaster.eventDispatched(Toolkit.java:2316)
	at java.awt.Toolkit$ToolkitEventMulticaster.eventDispatched(Toolkit.java:2316)
	at java.awt.Toolkit$ToolkitEventMulticaster.eventDispatched(Toolkit.java:2316)
	at java.awt.Toolkit.notifyAWTEventListeners(Toolkit.java:2275)
	at java.awt.Component.dispatchEventImpl(Component.java:4793)
	at java.awt.Container.dispatchEventImpl(Container.java:2295)
	at java.awt.Component.dispatchEvent(Component.java:4719)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4889)
	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4539)
	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4467)
	at java.awt.Container.dispatchEventImpl(Container.java:2281)
	at java.awt.Window.dispatchEventImpl(Window.java:2746)
	at java.awt.Component.dispatchEvent(Component.java:4719)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:764)
	at java.awt.EventQueue.access$500(EventQueue.java:98)
	at java.awt.EventQueue$3.run(EventQueue.java:715)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:80)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:90)
	at java.awt.EventQueue$4.run(EventQueue.java:737)
	at java.awt.EventQueue$4.run(EventQueue.java:735)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:80)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:734)
	at com.intellij.ide.IdeEventQueue.defaultDispatchEvent(IdeEventQueue.java:827)
	at com.intellij.ide.IdeEventQueue._dispatchEvent(IdeEventQueue.java:651)
	at com.intellij.ide.IdeEventQueue.dispatchEvent(IdeEventQueue.java:365)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
 
2017-08-16 18:16:35,878 [se-915-b01]   INFO - agnostic.FrequentEventDetector - Too many events posted, #3. Event: java.awt.event.InvocationEvent[INVOCATION_DEFAULT,runnable=javax.swing.text.DefaultCaret$1@49e79b7,notifier=null,catchExceptions=false,when=1502900195877] on sun.awt.X11.XToolkit@43b83c10
java.lang.Throwable
	at com.intellij.openapi.diagnostic.FrequentEventDetector.eventHappened(FrequentEventDetector.java:74)
	at com.intellij.ide.IdeEventQueue.doPostEvent(IdeEventQueue.java:1153)
	at com.intellij.ide.IdeEventQueue.postEvent(IdeEventQueue.java:1144)
	at java.awt.EventQueue.invokeLater(EventQueue.java:1272)
	at javax.swing.SwingUtilities.invokeLater(SwingUtilities.java:1290)
	at javax.swing.text.DefaultCaret.changeCaretPosition(DefaultCaret.java:1290)
	at javax.swing.text.DefaultCaret.handleSetDot(DefaultCaret.java:1173)
	at javax.swing.text.DefaultCaret.setDot(DefaultCaret.java:1154)
	at javax.swing.text.DefaultCaret$Handler.removeUpdate(DefaultCaret.java:1797)
	at javax.swing.text.AbstractDocument.fireRemoveUpdate(AbstractDocument.java:259)
	at javax.swing.text.AbstractDocument.handleRemove(AbstractDocument.java:622)
	at javax.swing.text.AbstractDocument.remove(AbstractDocument.java:590)
	at javax.swing.text.AbstractDocument.replace(AbstractDocument.java:666)
	at javax.swing.text.JTextComponent.setText(JTextComponent.java:1669)
	at javax.swing.text.html.HiddenTagView._setTextFromModel(HiddenTagView.java:188)
	at javax.swing.text.html.HiddenTagView.setTextFromModel(HiddenTagView.java:164)
	at javax.swing.text.html.HiddenTagView.changedUpdate(HiddenTagView.java:126)
	at javax.swing.text.View.forwardUpdateToView(View.java:1231)
	at javax.swing.text.FlowView$LogicalView.forwardUpdateToView(FlowView.java:804)
	at javax.swing.text.View.forwardUpdate(View.java:1162)
	at javax.swing.text.FlowView$LogicalView.forwardUpdate(FlowView.java:814)
	at javax.swing.text.View.changedUpdate(View.java:792)
	at javax.swing.text.FlowView.changedUpdate(FlowView.java:283)
	at javax.swing.text.ParagraphView.changedUpdate(ParagraphView.java:788)
	at javax.swing.text.View.forwardUpdateToView(View.java:1231)
	at javax.swing.text.View.forwardUpdate(View.java:1162)
	at javax.swing.text.BoxView.forwardUpdate(BoxView.java:240)
	at javax.swing.text.View.changedUpdate(View.java:792)
	at javax.swing.text.html.BlockView.changedUpdate(BlockView.java:341)
	at javax.swing.text.View.forwardUpdateToView(View.java:1231)
	at javax.swing.text.View.forwardUpdate(View.java:1162)
	at javax.swing.text.BoxView.forwardUpdate(BoxView.java:240)
	at javax.swing.text.View.changedUpdate(View.java:792)
	at javax.swing.text.html.BlockView.changedUpdate(BlockView.java:341)
	at javax.swing.plaf.basic.BasicTextUI$RootView.changedUpdate(BasicTextUI.java:1638)
	at javax.swing.plaf.basic.BasicTextUI$UpdateHandler.changedUpdate(BasicTextUI.java:1914)
	at javax.swing.text.AbstractDocument.fireChangedUpdate(AbstractDocument.java:230)
	at javax.swing.text.html.HTMLDocument.fireChangedUpdate(HTMLDocument.java:1738)
	at javax.swing.text.DefaultStyledDocument.setCharacterAttributes(DefaultStyledDocument.java:526)
	at com.intellij.openapi.externalSystem.service.notification.NotificationMessageElement.updateStyle(NotificationMessageElement.java:153)
	at com.intellij.openapi.externalSystem.service.notification.NotificationMessageElement$MyCustomizeColoredTreeCellRendererReplacement.getTreeCellRendererComponent(NotificationMessageElement.java:172)
	at com.intellij.ide.errorTreeView.NewErrorTreeRenderer$MyNotSelectedColoredTreeCellRenderer.getTreeCellRendererComponent(NewErrorTreeRenderer.java:89)
	at com.intellij.ide.errorTreeView.NewErrorTreeRenderer$MyWrapperRenderer.getTreeCellRendererComponent(NewErrorTreeRenderer.java:145)
	at com.intellij.ide.errorTreeView.NewErrorTreeRenderer.getTreeCellRendererComponent(NewErrorTreeRenderer.java:71)
	at com.intellij.openapi.vcs.changes.issueLinks.TreeNodePartListener.getTagAt(TreeNodePartListener.java:50)
	at com.intellij.openapi.vcs.changes.issueLinks.LinkMouseListenerBase.mouseMoved(LinkMouseListenerBase.java:77)
	at java.awt.AWTEventMulticaster.mouseMoved(AWTEventMulticaster.java:330)
	at java.awt.AWTEventMulticaster.mouseMoved(AWTEventMulticaster.java:329)
	at java.awt.Component.processMouseMotionEvent(Component.java:6586)
	at javax.swing.JComponent.processMouseMotionEvent(JComponent.java:3342)
	at java.awt.Component.processEvent(Component.java:6310)
	at java.awt.Container.processEvent(Container.java:2237)
	at java.awt.Component.dispatchEventImpl(Component.java:4897)
	at java.awt.Container.dispatchEventImpl(Container.java:2295)
	at java.awt.Component.dispatchEvent(Component.java:4719)
	at java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4889)
	at java.awt.LightweightDispatcher.processMouseEvent(Container.java:4539)
	at java.awt.LightweightDispatcher.dispatchEvent(Container.java:4467)
	at java.awt.Container.dispatchEventImpl(Container.java:2281)
	at java.awt.Window.dispatchEventImpl(Window.java:2746)
	at java.awt.Component.dispatchEvent(Component.java:4719)
	at java.awt.EventQueue.dispatchEventImpl(EventQueue.java:764)
	at java.awt.EventQueue.access$500(EventQueue.java:98)
	at java.awt.EventQueue$3.run(EventQueue.java:715)
	at java.awt.EventQueue$3.run(EventQueue.java:709)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:80)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:90)
	at java.awt.EventQueue$4.run(EventQueue.java:737)
	at java.awt.EventQueue$4.run(EventQueue.java:735)
	at java.security.AccessController.doPrivileged(Native Method)
	at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:80)
	at java.awt.EventQueue.dispatchEvent(EventQueue.java:734)
	at com.intellij.ide.IdeEventQueue.defaultDispatchEvent(IdeEventQueue.java:827)
	at com.intellij.ide.IdeEventQueue._dispatchEvent(IdeEventQueue.java:651)
	at com.intellij.ide.IdeEventQueue.dispatchEvent(IdeEventQueue.java:365)
	at java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:201)
	at java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:116)
	at java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:105)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:93)
	at java.awt.EventDispatchThread.run(EventDispatchThread.java:82)
 
2017-08-16 18:19:01,130 [se-915-b01]   INFO - e.project.sync.GradleSyncState - Started sync with Gradle for project 'AndroidNative'. 
2017-08-16 18:19:01,135 [thread 126]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 18:19:01,137 [thread 126]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 18:19:01,139 [thread 126]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 18:19:01,140 [thread 126]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: -Didea.version=3.0 -Djava.awt.headless=true -Pandroid.injected.build.model.only=true -Pandroid.injected.build.model.only.advanced=true -Pandroid.injected.invoked.from.ide=true -Pandroid.injected.build.model.only.versioned=3 -Pandroid.injected.studio.version=3.0.0.10 --init-script /tmp/sync.local.repo239.gradle --init-script /tmp/ijinit.gradle 
2017-08-16 18:19:02,180 [thread 126]   INFO - .project.GradleProjectResolver - Gradle project resolve error 
java.lang.NullPointerException
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputFile(BuildOutput.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy208.getOutputFile(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeOutputFile.<init>(IdeOutputFile.java:53)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantOutput.lambda$new$0(IdeVariantOutput.java:48)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantOutput.<init>(IdeVariantOutput.java:48)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactOutput.<init>(IdeAndroidArtifactOutput.java:38)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.lambda$new$0(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$0(IdeVariantImpl.java:60)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:59)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2017-08-16 18:19:02,180 [thread 126]   WARN - nal.AbstractExternalSystemTask - Cause: java.lang.NullPointerException
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputFile(BuildOutput.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy208.getOutputFile(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeOutputFile.<init>(IdeOutputFile.java:53)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantOutput.lambda$new$0(IdeVariantOutput.java:48)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantOutput.<init>(IdeVariantOutput.java:48)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactOutput.<init>(IdeAndroidArtifactOutput.java:38)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.lambda$new$0(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$0(IdeVariantImpl.java:60)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:59)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
 
com.intellij.openapi.externalSystem.model.ExternalSystemException: Cause: java.lang.NullPointerException
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputFile(BuildOutput.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy208.getOutputFile(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeOutputFile.<init>(IdeOutputFile.java:53)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantOutput.lambda$new$0(IdeVariantOutput.java:48)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantOutput.<init>(IdeVariantOutput.java:48)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactOutput.<init>(IdeAndroidArtifactOutput.java:38)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.lambda$new$0(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$0(IdeVariantImpl.java:60)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:59)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

	at com.android.tools.idea.gradle.project.sync.idea.ProjectImportErrorHandler.getUserFriendlyError(ProjectImportErrorHandler.java:85)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.getUserFriendlyError(AndroidGradleProjectResolver.java:414)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.getUserFriendlyError(AbstractProjectResolverExtension.java:158)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:906)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputFile(BuildOutput.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy208.getOutputFile(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeOutputFile.<init>(IdeOutputFile.java:53)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantOutput.lambda$new$0(IdeVariantOutput.java:48)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantOutput.<init>(IdeVariantOutput.java:48)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactOutput.<init>(IdeAndroidArtifactOutput.java:38)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.lambda$new$0(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$0(IdeVariantImpl.java:60)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:59)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	... 26 more

2017-08-16 18:19:02,181 [thread 126]   WARN - ect.sync.idea.ProjectSetUpTask - Cause: java.lang.NullPointerException
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputFile(BuildOutput.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy208.getOutputFile(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeOutputFile.<init>(IdeOutputFile.java:53)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantOutput.lambda$new$0(IdeVariantOutput.java:48)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantOutput.<init>(IdeVariantOutput.java:48)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactOutput.<init>(IdeAndroidArtifactOutput.java:38)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.lambda$new$0(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$0(IdeVariantImpl.java:60)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:59)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)


Consult IDE log for more details (Help | Show Log) 
2017-08-16 18:19:02,181 [thread 126]   INFO - e.project.sync.GradleSyncState - Gradle sync failed: Cause: java.lang.NullPointerException
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputFile(BuildOutput.java:82)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy208.getOutputFile(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeOutputFile.<init>(IdeOutputFile.java:53)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantOutput.lambda$new$0(IdeVariantOutput.java:48)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantOutput.<init>(IdeVariantOutput.java:48)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactOutput.<init>(IdeAndroidArtifactOutput.java:38)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.lambda$new$0(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$0(IdeVariantImpl.java:60)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:59)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)


Consult IDE log for more details (Help | Show Log) (1s 51ms) 
2017-08-16 18:19:02,298 [thread 127]   INFO -       #com.jetbrains.cidr.lang - Clearing symbols finished in 0 s. 
2017-08-16 18:19:02,304 [thread 127]   INFO -       #com.jetbrains.cidr.lang - Loading symbols finished in 0 s. 
2017-08-16 18:19:02,305 [thread 127]   INFO -       #com.jetbrains.cidr.lang - Building symbols finished in 0 s. 
2017-08-16 18:19:02,305 [thread 127]   INFO -       #com.jetbrains.cidr.lang - Saving symbols finished in 0 s. 
2017-08-16 18:19:06,069 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - About to execute Gradle tasks: [clean, :buyer:generateInternalDebugSources] 
2017-08-16 18:19:06,073 [thread 116]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 18:19:06,113 [thread 116]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 18:19:06,113 [thread 116]   INFO - ild.invoker.GradleBuildInvoker - Build command line options: [--configure-on-demand, -Pandroid.injected.invoked.from.ide=true, -Pandroid.injected.generateSourcesOnly=true, --init-script, /tmp/sync.local.repo1284.gradle] 
2017-08-16 18:19:06,113 [thread 116]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: --configure-on-demand -Pandroid.injected.invoked.from.ide=true -Pandroid.injected.generateSourcesOnly=true --init-script /tmp/sync.local.repo1284.gradle 
2017-08-16 18:19:07,849 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - Gradle build finished in 1s 774ms 
2017-08-16 18:19:08,218 [se-915-b01]   INFO - pl.ProjectRootManagerComponent - project roots have changed 
2017-08-16 18:19:08,511 [thread 126]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 1ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 18:19:08,526 [thread 126]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 15ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 18:19:13,898 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - About to execute Gradle tasks: [:buyer:generateInternalDebugSources, :buyer:compileInternalDebugSources] 
2017-08-16 18:19:13,902 [thread 126]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 18:19:13,957 [thread 126]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 18:19:13,957 [thread 126]   INFO - ild.invoker.GradleBuildInvoker - Build command line options: [--configure-on-demand, -Pandroid.injected.invoked.from.ide=true, --init-script, /tmp/sync.local.repo871.gradle] 
2017-08-16 18:19:13,957 [thread 126]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: --configure-on-demand -Pandroid.injected.invoked.from.ide=true --init-script /tmp/sync.local.repo871.gradle 
2017-08-16 18:19:20,301 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - Gradle build finished with 2 error(s) in 6s 397ms 
2017-08-16 18:19:20,583 [se-915-b01]   INFO - pl.ProjectRootManagerComponent - project roots have changed 
2017-08-16 18:19:20,747 [thread 128]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 5ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 18:19:20,762 [thread 128]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 14ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 18:19:20,762 [thread 128]   INFO - indexing.UnindexedFilesUpdater - Unindexed files update started: 248 files to update 
2017-08-16 18:19:20,904 [thread 128]   INFO - .diagnostic.PerformanceWatcher - Unindexed files update took 142ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 18:19:21,215 [ pool 3/12]   INFO - attrs.AttributeDefinitionsImpl - Found tag with unknown parent: AndroidManifest.AndroidManifestCompatibleScreens 
2017-08-16 18:19:21,215 [ pool 3/12]   INFO - attrs.AttributeDefinitionsImpl - Found tag with unknown parent: AndroidManifest.AndroidManifestSupportsInput 
2017-08-16 18:24:35,913 [thread 137]   INFO - t.javadoc.JavaDocInfoGenerator - Wrong navElement: FUN; original = KtLightMethodImpl:updateUserBasedSessionParameters of class class org.jetbrains.kotlin.asJava.elements.KtLightMethodImpl 
2017-08-16 18:25:23,464 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8643 for client with pid 25761 
2017-08-16 18:25:23,464 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:25:23,545 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:25:23,545 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:25:23,545 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:25:23,574 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:25:23,575 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:25:23,579 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:25:23,579 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:25:23,579 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:25:23,579 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:25:23,579 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:25:23,586 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:25:23,654 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 18:25:23,654 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 18:25:27,182 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:27:36,189 [se-915-b01]   INFO - e.project.sync.GradleSyncState - Started sync with Gradle for project 'AndroidNative'. 
2017-08-16 18:27:36,197 [thread 138]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 18:27:36,197 [thread 138]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 18:27:36,201 [thread 138]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 18:27:36,202 [thread 138]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: -Didea.version=3.0 -Djava.awt.headless=true -Pandroid.injected.build.model.only=true -Pandroid.injected.build.model.only.advanced=true -Pandroid.injected.invoked.from.ide=true -Pandroid.injected.build.model.only.versioned=3 -Pandroid.injected.studio.version=3.0.0.10 --init-script /tmp/sync.local.repo419.gradle --init-script /tmp/ijinit.gradle 
2017-08-16 18:27:37,328 [thread 138]   INFO - e.project.sync.GradleSyncState - Started setup of project 'AndroidNative'. 
2017-08-16 18:27:37,360 [se-915-b01]   INFO - ule.android.SdkModuleSetupStep - Set Android SDK 'Android API 26 Platform' (/home/matti/Android/Sdk) to module 'buyer' 
2017-08-16 18:27:37,511 [se-915-b01]   INFO - pl.ProjectRootManagerComponent - project roots have changed 
2017-08-16 18:27:37,514 [thread 138]   INFO - etup.post.PluginVersionUpgrade - Gradle model version: 3.0.0-alpha9, recommended version for IDE: 3.0.0-beta2 
2017-08-16 18:27:37,514 [thread 138]   INFO - e.project.sync.GradleSyncState - Gradle sync finished in 1s 325ms 
2017-08-16 18:27:39,918 [thread 138]   INFO - e.project.sync.GradleSyncState - Gradle sync finished in 51yr 9mo 0w 6d 16h 27m 39s 919ms 
2017-08-16 18:27:40,004 [se-915-b01]   INFO - e.project.sync.GradleSyncState - Started sync with Gradle for project 'AndroidNative'. 
2017-08-16 18:27:40,007 [thread 142]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 18:27:40,007 [thread 142]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 18:27:40,010 [thread 142]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 18:27:40,011 [thread 142]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: -Didea.version=3.0 -Djava.awt.headless=true -Pandroid.injected.build.model.only=true -Pandroid.injected.build.model.only.advanced=true -Pandroid.injected.invoked.from.ide=true -Pandroid.injected.build.model.only.versioned=3 -Pandroid.injected.studio.version=3.0.0.10 --init-script /tmp/sync.local.repo886.gradle --init-script /tmp/ijinit.gradle 
2017-08-16 18:27:40,050 [thread 139]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 2ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 18:27:40,060 [thread 139]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 10ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 18:27:40,060 [thread 139]   INFO - indexing.UnindexedFilesUpdater - Unindexed files update started: 1 files to update 
2017-08-16 18:27:40,113 [thread 139]   INFO - .diagnostic.PerformanceWatcher - Unindexed files update took 53ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 18:27:40,116 [thread 139]   INFO -       #com.jetbrains.cidr.lang - Clearing symbols finished in 0 s. 
2017-08-16 18:27:40,119 [thread 139]   INFO -       #com.jetbrains.cidr.lang - Loading symbols finished in 0 s. 
2017-08-16 18:27:40,120 [thread 139]   INFO -       #com.jetbrains.cidr.lang - Building symbols finished in 0 s. 
2017-08-16 18:27:40,121 [thread 139]   INFO -       #com.jetbrains.cidr.lang - Saving symbols finished in 0 s. 
2017-08-16 18:27:40,142 [thread 139]   INFO -       #com.jetbrains.cidr.lang - Clearing symbols finished in 0 s. 
2017-08-16 18:27:40,144 [thread 139]   INFO -       #com.jetbrains.cidr.lang - Loading symbols finished in 0 s. 
2017-08-16 18:27:40,145 [thread 139]   INFO -       #com.jetbrains.cidr.lang - Building symbols finished in 0 s. 
2017-08-16 18:27:40,145 [thread 139]   INFO -       #com.jetbrains.cidr.lang - Saving symbols finished in 0 s. 
2017-08-16 18:27:42,357 [thread 142]   INFO - .project.GradleProjectResolver - Gradle project resolve error 
java.lang.NullPointerException
	at sun.nio.fs.UnixPath.normalizeAndCheck(UnixPath.java:77)
	at sun.nio.fs.UnixPath.<init>(UnixPath.java:71)
	at sun.nio.fs.UnixFileSystem.getPath(UnixFileSystem.java:281)
	at java.nio.file.Paths.get(Paths.java:84)
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputPath(BuildOutput.java:222)
	at com.android.build.gradle.internal.scope.BuildOutputs.lambda$load$2(BuildOutputs.java:243)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1376)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:245)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:184)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:140)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.lambda$get$1(BuildOutputsSupplier.java:55)
	at com.google.common.collect.ImmutableList.forEach(ImmutableList.java:397)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:50)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:35)
	at com.android.build.gradle.internal.ide.AndroidArtifactImpl.getOutputs(AndroidArtifactImpl.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy196.getOutputs(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$0(IdeVariantImpl.java:60)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:59)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2017-08-16 18:27:42,358 [thread 142]   WARN - nal.AbstractExternalSystemTask - Cause: java.lang.NullPointerException
	at sun.nio.fs.UnixPath.normalizeAndCheck(UnixPath.java:77)
	at sun.nio.fs.UnixPath.<init>(UnixPath.java:71)
	at sun.nio.fs.UnixFileSystem.getPath(UnixFileSystem.java:281)
	at java.nio.file.Paths.get(Paths.java:84)
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputPath(BuildOutput.java:222)
	at com.android.build.gradle.internal.scope.BuildOutputs.lambda$load$2(BuildOutputs.java:243)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1376)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:245)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:184)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:140)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.lambda$get$1(BuildOutputsSupplier.java:55)
	at com.google.common.collect.ImmutableList.forEach(ImmutableList.java:397)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:50)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:35)
	at com.android.build.gradle.internal.ide.AndroidArtifactImpl.getOutputs(AndroidArtifactImpl.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy196.getOutputs(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$0(IdeVariantImpl.java:60)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:59)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
 
com.intellij.openapi.externalSystem.model.ExternalSystemException: Cause: java.lang.NullPointerException
	at sun.nio.fs.UnixPath.normalizeAndCheck(UnixPath.java:77)
	at sun.nio.fs.UnixPath.<init>(UnixPath.java:71)
	at sun.nio.fs.UnixFileSystem.getPath(UnixFileSystem.java:281)
	at java.nio.file.Paths.get(Paths.java:84)
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputPath(BuildOutput.java:222)
	at com.android.build.gradle.internal.scope.BuildOutputs.lambda$load$2(BuildOutputs.java:243)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1376)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:245)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:184)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:140)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.lambda$get$1(BuildOutputsSupplier.java:55)
	at com.google.common.collect.ImmutableList.forEach(ImmutableList.java:397)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:50)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:35)
	at com.android.build.gradle.internal.ide.AndroidArtifactImpl.getOutputs(AndroidArtifactImpl.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy196.getOutputs(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$0(IdeVariantImpl.java:60)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:59)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

	at com.android.tools.idea.gradle.project.sync.idea.ProjectImportErrorHandler.getUserFriendlyError(ProjectImportErrorHandler.java:85)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.getUserFriendlyError(AndroidGradleProjectResolver.java:414)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.getUserFriendlyError(AbstractProjectResolverExtension.java:158)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:906)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.lang.NullPointerException
	at sun.nio.fs.UnixPath.normalizeAndCheck(UnixPath.java:77)
	at sun.nio.fs.UnixPath.<init>(UnixPath.java:71)
	at sun.nio.fs.UnixFileSystem.getPath(UnixFileSystem.java:281)
	at java.nio.file.Paths.get(Paths.java:84)
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputPath(BuildOutput.java:222)
	at com.android.build.gradle.internal.scope.BuildOutputs.lambda$load$2(BuildOutputs.java:243)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1376)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:245)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:184)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:140)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.lambda$get$1(BuildOutputsSupplier.java:55)
	at com.google.common.collect.ImmutableList.forEach(ImmutableList.java:397)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:50)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:35)
	at com.android.build.gradle.internal.ide.AndroidArtifactImpl.getOutputs(AndroidArtifactImpl.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy196.getOutputs(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$0(IdeVariantImpl.java:60)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:59)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	... 26 more

2017-08-16 18:27:42,358 [thread 142]   WARN - ect.sync.idea.ProjectSetUpTask - Cause: java.lang.NullPointerException
	at sun.nio.fs.UnixPath.normalizeAndCheck(UnixPath.java:77)
	at sun.nio.fs.UnixPath.<init>(UnixPath.java:71)
	at sun.nio.fs.UnixFileSystem.getPath(UnixFileSystem.java:281)
	at java.nio.file.Paths.get(Paths.java:84)
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputPath(BuildOutput.java:222)
	at com.android.build.gradle.internal.scope.BuildOutputs.lambda$load$2(BuildOutputs.java:243)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1376)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:245)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:184)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:140)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.lambda$get$1(BuildOutputsSupplier.java:55)
	at com.google.common.collect.ImmutableList.forEach(ImmutableList.java:397)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:50)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:35)
	at com.android.build.gradle.internal.ide.AndroidArtifactImpl.getOutputs(AndroidArtifactImpl.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy196.getOutputs(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$0(IdeVariantImpl.java:60)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:59)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)


Consult IDE log for more details (Help | Show Log) 
2017-08-16 18:27:42,358 [thread 142]   INFO - e.project.sync.GradleSyncState - Gradle sync failed: Cause: java.lang.NullPointerException
	at sun.nio.fs.UnixPath.normalizeAndCheck(UnixPath.java:77)
	at sun.nio.fs.UnixPath.<init>(UnixPath.java:71)
	at sun.nio.fs.UnixFileSystem.getPath(UnixFileSystem.java:281)
	at java.nio.file.Paths.get(Paths.java:84)
	at com.android.build.gradle.internal.scope.BuildOutput.getOutputPath(BuildOutput.java:222)
	at com.android.build.gradle.internal.scope.BuildOutputs.lambda$load$2(BuildOutputs.java:243)
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1376)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:245)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:184)
	at com.android.build.gradle.internal.scope.BuildOutputs.load(BuildOutputs.java:140)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.lambda$get$1(BuildOutputsSupplier.java:55)
	at com.google.common.collect.ImmutableList.forEach(ImmutableList.java:397)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:50)
	at com.android.build.gradle.internal.ide.BuildOutputsSupplier.get(BuildOutputsSupplier.java:35)
	at com.android.build.gradle.internal.ide.AndroidArtifactImpl.getOutputs(AndroidArtifactImpl.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$ReflectionMethodInvoker.invoke(ProtocolToModelAdapter.java:592)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$AdaptingMethodInvoker.invoke(ProtocolToModelAdapter.java:397)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$PropertyCachingMethodInvoker.invoke(ProtocolToModelAdapter.java:625)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SafeMethodInvoker.invoke(ProtocolToModelAdapter.java:647)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$SupportedPropertyInvoker.invoke(ProtocolToModelAdapter.java:670)
	at org.gradle.tooling.internal.adapter.ProtocolToModelAdapter$InvocationHandlerImpl.invoke(ProtocolToModelAdapter.java:356)
	at com.sun.proxy.$Proxy196.getOutputs(Unknown Source)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidArtifactImpl.<init>(IdeAndroidArtifactImpl.java:57)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.lambda$new$0(IdeVariantImpl.java:60)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeVariantImpl.<init>(IdeVariantImpl.java:59)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.lambda$new$4(IdeAndroidProjectImpl.java:88)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.lambda$computeIfAbsent$0(ModelCache.java:31)
	at java.util.HashMap.computeIfAbsent(HashMap.java:1126)
	at com.android.tools.idea.gradle.project.model.ide.android.ModelCache.computeIfAbsent(ModelCache.java:31)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeModel.copy(IdeModel.java:74)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:87)
	at com.android.tools.idea.gradle.project.model.ide.android.IdeAndroidProjectImpl.<init>(IdeAndroidProjectImpl.java:68)
	at com.android.tools.idea.gradle.project.model.AndroidModuleModel.<init>(AndroidModuleModel.java:131)
	at com.android.tools.idea.gradle.project.sync.idea.AndroidGradleProjectResolver.populateModuleContentRoots(AndroidGradleProjectResolver.java:214)
	at org.jetbrains.plugins.gradle.service.project.AbstractProjectResolverExtension.populateModuleContentRoots(AbstractProjectResolverExtension.java:103)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.doResolveProjectInfo(GradleProjectResolver.java:366)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.access$200(GradleProjectResolver.java:79)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:902)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver$ProjectConnectionDataNodeFunction.fun(GradleProjectResolver.java:886)
	at org.jetbrains.plugins.gradle.service.execution.GradleExecutionHelper.execute(GradleExecutionHelper.java:218)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:139)
	at org.jetbrains.plugins.gradle.service.project.GradleProjectResolver.resolveProjectInfo(GradleProjectResolver.java:79)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.lambda$resolveProjectInfo$0(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.AbstractRemoteExternalSystemService.execute(AbstractRemoteExternalSystemService.java:59)
	at com.intellij.openapi.externalSystem.service.remote.RemoteExternalSystemProjectResolverImpl.resolveProjectInfo(RemoteExternalSystemProjectResolverImpl.java:37)
	at com.intellij.openapi.externalSystem.service.remote.wrapper.ExternalSystemProjectResolverWrapper.resolveProjectInfo(ExternalSystemProjectResolverWrapper.java:45)
	at com.intellij.openapi.externalSystem.service.internal.ExternalSystemResolveProjectTask.doExecute(ExternalSystemResolveProjectTask.java:66)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:139)
	at com.intellij.openapi.externalSystem.service.internal.AbstractExternalSystemTask.execute(AbstractExternalSystemTask.java:125)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$3.execute(ExternalSystemUtil.java:388)
	at com.intellij.openapi.externalSystem.util.ExternalSystemUtil$5.run(ExternalSystemUtil.java:445)
	at com.intellij.openapi.progress.impl.CoreProgressManager$TaskRunnable.run(CoreProgressManager.java:726)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$1(CoreProgressManager.java:176)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:556)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:501)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:66)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl$1.run(ProgressManagerImpl.java:137)
	at com.intellij.openapi.application.impl.ApplicationImpl$2.run(ApplicationImpl.java:334)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)


Consult IDE log for more details (Help | Show Log) (2s 354ms) 
2017-08-16 18:27:42,474 [thread 139]   INFO -       #com.jetbrains.cidr.lang - Clearing symbols finished in 0 s. 
2017-08-16 18:27:42,478 [thread 139]   INFO -       #com.jetbrains.cidr.lang - Loading symbols finished in 0 s. 
2017-08-16 18:27:42,478 [thread 139]   INFO -       #com.jetbrains.cidr.lang - Building symbols finished in 0 s. 
2017-08-16 18:27:42,478 [thread 139]   INFO -       #com.jetbrains.cidr.lang - Saving symbols finished in 0 s. 
2017-08-16 18:27:46,350 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - About to execute Gradle tasks: [clean, :buyer:generateInternalDebugSources] 
2017-08-16 18:27:46,355 [thread 139]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 18:27:46,492 [thread 139]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 18:27:46,492 [thread 139]   INFO - ild.invoker.GradleBuildInvoker - Build command line options: [--configure-on-demand, -Pandroid.injected.invoked.from.ide=true, -Pandroid.injected.generateSourcesOnly=true, --init-script, /tmp/sync.local.repo350.gradle] 
2017-08-16 18:27:46,492 [thread 139]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: --configure-on-demand -Pandroid.injected.invoked.from.ide=true -Pandroid.injected.generateSourcesOnly=true --init-script /tmp/sync.local.repo350.gradle 
2017-08-16 18:27:48,572 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - Gradle build finished in 2s 216ms 
2017-08-16 18:27:48,879 [se-915-b01]   INFO - pl.ProjectRootManagerComponent - project roots have changed 
2017-08-16 18:27:49,213 [thread 137]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 1ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 18:27:49,221 [thread 137]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 8ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 18:27:53,118 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - About to execute Gradle tasks: [:buyer:generateInternalDebugSources, :buyer:compileInternalDebugSources] 
2017-08-16 18:27:53,122 [thread 146]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 18:27:53,153 [thread 146]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 18:27:53,153 [thread 146]   INFO - ild.invoker.GradleBuildInvoker - Build command line options: [--configure-on-demand, -Pandroid.injected.invoked.from.ide=true, --init-script, /tmp/sync.local.repo1237.gradle] 
2017-08-16 18:27:53,153 [thread 146]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: --configure-on-demand -Pandroid.injected.invoked.from.ide=true --init-script /tmp/sync.local.repo1237.gradle 
2017-08-16 18:28:01,365 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - Gradle build finished in 8s 242ms 
2017-08-16 18:28:01,367 [se-915-b01]   INFO - e.project.sync.GradleSyncState - Started sync with Gradle for project 'AndroidNative'. 
2017-08-16 18:28:01,370 [thread 137]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 18:28:01,370 [thread 137]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 18:28:01,373 [thread 137]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 18:28:01,375 [thread 137]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: -Didea.version=3.0 -Djava.awt.headless=true -Pandroid.injected.build.model.only=true -Pandroid.injected.build.model.only.advanced=true -Pandroid.injected.invoked.from.ide=true -Pandroid.injected.build.model.only.versioned=3 -Pandroid.injected.studio.version=3.0.0.10 --init-script /tmp/sync.local.repo202.gradle --init-script /tmp/ijinit.gradle 
2017-08-16 18:28:01,689 [se-915-b01]   INFO - pl.ProjectRootManagerComponent - project roots have changed 
2017-08-16 18:28:01,866 [thread 143]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 4ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 18:28:01,874 [thread 143]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 8ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 18:28:01,874 [thread 143]   INFO - indexing.UnindexedFilesUpdater - Unindexed files update started: 248 files to update 
2017-08-16 18:28:02,033 [thread 143]   INFO - .diagnostic.PerformanceWatcher - Unindexed files update took 159ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 18:28:02,760 [thread 137]   INFO - e.project.sync.GradleSyncState - Started setup of project 'AndroidNative'. 
2017-08-16 18:28:04,772 [thread 147]   INFO -  #git4idea.commands.GitHandler - [../../dawanda] git -c core.quotepath=false rm --ignore-unmatch --cached -- AndroidNative/.idea/libraries/multidex_1_0_2.xml AndroidNative/.idea/libraries/multidex_instrumentation_1_0_2.xml 
2017-08-16 18:28:04,984 [se-915-b01]   INFO - ule.android.SdkModuleSetupStep - Set Android SDK 'Android API 26 Platform' (/home/matti/Android/Sdk) to module 'buyer' 
2017-08-16 18:28:05,068 [se-915-b01]   INFO - pl.ProjectRootManagerComponent - project roots have changed 
2017-08-16 18:28:05,071 [thread 137]   INFO - etup.post.PluginVersionUpgrade - Gradle model version: 3.0.0-beta2, recommended version for IDE: 3.0.0-beta2 
2017-08-16 18:28:05,073 [thread 137]   INFO - e.project.sync.GradleSyncState - Gradle sync finished in 3s 706ms 
2017-08-16 18:28:05,254 [thread 141]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 2ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 18:28:05,261 [thread 141]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 7ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 18:28:05,263 [thread 141]   INFO -       #com.jetbrains.cidr.lang - Clearing symbols finished in 0 s. 
2017-08-16 18:28:05,267 [thread 141]   INFO -       #com.jetbrains.cidr.lang - Loading symbols finished in 0 s. 
2017-08-16 18:28:05,267 [thread 141]   INFO -       #com.jetbrains.cidr.lang - Building symbols finished in 0 s. 
2017-08-16 18:28:05,267 [thread 141]   INFO -       #com.jetbrains.cidr.lang - Saving symbols finished in 0 s. 
2017-08-16 18:28:39,322 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8606 for client with pid 26032 
2017-08-16 18:28:39,323 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:28:59,740 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:30:02,224 [thread 141]   INFO -  #git4idea.commands.GitHandler - [../../dawanda] git -c core.quotepath=false rm --ignore-unmatch --cached -- AndroidNative/.idea/libraries/multidex_instrumentation_1_0_1.xml 
2017-08-16 18:30:05,485 [thread 141]   INFO -                    #InstantRun - Local build timestamp is empty! 
2017-08-16 18:30:06,529 [thread 141]   INFO - ools.idea.fd.InstantRunBuilder - BuildCause: MISMATCHING_TIMESTAMPS, BuildMode: FULL 
2017-08-16 18:30:06,530 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - About to execute Gradle tasks: [:buyer:assembleInternalDebug] 
2017-08-16 18:30:06,534 [thread 140]   INFO - s.plugins.gradle.GradleManager - Instructing gradle to use java from /home/matti/Tools/android-studio-canary/android-studio/jre 
2017-08-16 18:30:06,550 [thread 140]   INFO - oject.common.GradleInitScripts - init script file sync.local.repo contents "allprojects {\n  buildscript {\n    repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n    }\n  }\n  repositories {\n      maven { url '/home/matti/Tools/android-studio-canary/android-studio/gradle/m2repository'}\n  }\n}\n" 
2017-08-16 18:30:06,550 [thread 140]   INFO - ild.invoker.GradleBuildInvoker - Build command line options: [--configure-on-demand, -Pandroid.injected.invoked.from.ide=true, -Pandroid.injected.build.api=25, -Pandroid.injected.build.density=xxhdpi, -Pandroid.injected.build.abi=arm64-v8a,armeabi-v7a,armeabi, -Pandroid.injected.restrict.variant.name=internalDebug, -Pandroid.injected.restrict.variant.project=:buyer, -Pandroid.optional.compilation=INSTANT_DEV,FULL_APK, -Pandroid.injected.coldswap.mode=MULTIAPK, --no-build-cache, --init-script, /tmp/sync.local.repo692.gradle] 
2017-08-16 18:30:06,550 [thread 140]   INFO - xecution.GradleExecutionHelper - Passing command-line args to Gradle Tooling API: --configure-on-demand -Pandroid.injected.invoked.from.ide=true -Pandroid.injected.build.api=25 -Pandroid.injected.build.density=xxhdpi -Pandroid.injected.build.abi=arm64-v8a,armeabi-v7a,armeabi -Pandroid.injected.restrict.variant.name=internalDebug -Pandroid.injected.restrict.variant.project=:buyer -Pandroid.optional.compilation=INSTANT_DEV,FULL_APK -Pandroid.injected.coldswap.mode=MULTIAPK --no-build-cache --init-script /tmp/sync.local.repo692.gradle 
2017-08-16 18:30:13,066 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8620 for client with pid 26190 
2017-08-16 18:30:13,066 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:30:13,321 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:30:21,686 [se-915-b01]   INFO - ild.invoker.GradleBuildInvoker - Gradle build finished in 15s 151ms 
2017-08-16 18:30:21,709 [se-915-b01]   INFO - pl.ProjectRootManagerComponent - project roots have changed 
2017-08-16 18:30:21,716 [thread 141]   INFO - a.gradle.run.MakeBeforeRunTask - Gradle invocation complete, success = true 
2017-08-16 18:30:21,719 [thread 150]   INFO - .diagnostic.PerformanceWatcher - Pushing properties took 2ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 18:30:21,729 [thread 150]   INFO - .diagnostic.PerformanceWatcher - Indexable file iteration took 10ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-16 18:30:21,759 [thread 150]   INFO -                    #InstantRun - $ adb install-multiple -r -t /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/dep/dependencies.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_3.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_7.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_5.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_2.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_0.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_6.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_9.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_1.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_8.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/intermediates/split-apk/internal/debug/slices/slice_4.apk /home/matti/Development/dawanda/AndroidNative/buyer/build/outputs/apk/internal/debug/buyer-internal-debug.apk  
2017-08-16 18:30:34,277 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8617 for client with pid 26314 
2017-08-16 18:30:34,277 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:30:36,250 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8628 for client with pid 26360 
2017-08-16 18:30:36,251 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:30:36,561 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8635 for client with pid 26387 
2017-08-16 18:30:36,562 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:30:36,709 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8638 for client with pid 26419 
2017-08-16 18:30:36,709 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:30:36,756 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8651 for client with pid 26433 
2017-08-16 18:30:36,756 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:30:37,063 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8681 for client with pid 26458 
2017-08-16 18:30:37,063 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:30:37,189 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8684 for client with pid 26488 
2017-08-16 18:30:37,189 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:30:37,335 [thread 150]   INFO - idea.run.AndroidProcessHandler - Adding device oneplus-one_a2003-192.168.51.17:5555 to monitor for launched app: com.dawanda.internal.shopping 
2017-08-16 18:30:37,347 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8687 for client with pid 26512 
2017-08-16 18:30:37,347 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:30:37,510 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8693 for client with pid 26528 
2017-08-16 18:30:37,510 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:30:38,008 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 18:30:38,008 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 18:30:38,008 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 18:30:38,008 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 18:30:38,521 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8693 for client with pid 26528 
2017-08-16 18:30:38,521 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:30:38,532 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8696 for client with pid 26558 
2017-08-16 18:30:38,532 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:30:38,570 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 18:30:38,570 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 18:30:59,749 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:30:59,759 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:35:32,386 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8604 for client with pid 27011 
2017-08-16 18:35:32,387 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:35:32,490 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 18:35:32,490 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 18:35:32,490 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 18:35:32,490 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 18:35:32,490 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 18:35:32,490 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 18:35:32,517 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 18:35:32,517 [51.17:5555]   INFO - .firebase.logs.FirebaseLogTask - Processing Firebase log with tag FirebaseApp 
2017-08-16 18:35:32,865 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-16 18:35:33,403 [nt Monitor]   INFO -            #com.android.ddmlib - Opening a debugger listener at port 8604 for client with pid 27011 
2017-08-16 18:35:33,403 [nt Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-17 00:29:39,237 [thread 188]   INFO - dea.updater.SdkComponentSource - Downloading file:/home/matti/Tools/android-studio-canary/android-studio/plugins/sdk-updates/offline-repo/offline-repo.xml 
2017-08-17 00:29:39,242 [thread 188]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/repository2-1.xml 
2017-08-17 00:29:39,415 [thread 188]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/sys-img/android/sys-img2-1.xml 
2017-08-17 00:29:39,571 [thread 188]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/sys-img/android-wear/sys-img2-1.xml 
2017-08-17 00:29:39,737 [thread 188]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/sys-img/android-wear-cn/sys-img2-1.xml 
2017-08-17 00:29:39,897 [thread 188]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/sys-img/android-tv/sys-img2-1.xml 
2017-08-17 00:29:40,040 [thread 188]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/sys-img/google_apis/sys-img2-1.xml 
2017-08-17 00:29:40,197 [thread 188]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/sys-img/google_apis_playstore/sys-img2-1.xml 
2017-08-17 00:29:40,341 [thread 188]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/addon2-1.xml 
2017-08-17 00:29:40,508 [thread 188]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/glass/addon2-1.xml 
2017-08-17 00:29:40,645 [thread 188]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/extras/intel/addon2-1.xml 
2017-08-17 08:29:39,506 [thread 222]   INFO - dea.updater.SdkComponentSource - Downloading file:/home/matti/Tools/android-studio-canary/android-studio/plugins/sdk-updates/offline-repo/offline-repo.xml 
2017-08-17 08:29:39,510 [thread 222]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/repository2-1.xml 
2017-08-17 08:29:39,702 [thread 222]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/sys-img/android/sys-img2-1.xml 
2017-08-17 08:29:39,859 [thread 222]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/sys-img/android-wear/sys-img2-1.xml 
2017-08-17 08:29:40,021 [thread 222]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/sys-img/android-wear-cn/sys-img2-1.xml 
2017-08-17 08:29:40,190 [thread 222]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/sys-img/android-tv/sys-img2-1.xml 
2017-08-17 08:29:40,334 [thread 222]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/sys-img/google_apis/sys-img2-1.xml 
2017-08-17 08:29:40,491 [thread 222]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/sys-img/google_apis_playstore/sys-img2-1.xml 
2017-08-17 08:29:40,636 [thread 222]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/addon2-1.xml 
2017-08-17 08:29:40,825 [thread 222]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/glass/addon2-1.xml 
2017-08-17 08:29:40,964 [thread 222]   INFO - dea.updater.SdkComponentSource - Downloading https://dl.google.com/android/repository/extras/intel/addon2-1.xml 
2017-08-17 09:58:58,387 [se-915-b01]   WARN - ellij.openapi.ui.DialogWrapper - Stale listener: com.intellij.ide.ui.laf.LafManagerImpl$OurPopupFactory$1@2d0f8e5a 
2017-08-17 09:59:03,204 [se-915-b01]   WARN - ellij.openapi.ui.DialogWrapper - Stale listener: com.intellij.ide.ui.laf.LafManagerImpl$OurPopupFactory$1@38446a24 
2017-08-17 09:59:17,884 [se-915-b01]   WARN - ellij.openapi.ui.DialogWrapper - Stale listener: com.intellij.ide.ui.laf.LafManagerImpl$OurPopupFactory$1@3d783516 
2017-08-17 10:03:34,390 [thread 232]   INFO - .diagnostic.PerformanceWatcher - Find Usages took 22ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-17 10:04:27,325 [thread 232]   INFO - .diagnostic.PerformanceWatcher - Find Usages took 15ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-17 10:14:57,750 [thread 238]   INFO - .diagnostic.PerformanceWatcher - Find Usages took 112ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-17 10:49:50,464 [thread 249]   INFO - .diagnostic.PerformanceWatcher - Find Usages took 15ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-17 10:52:59,182 [thread 249]   INFO - .diagnostic.PerformanceWatcher - Find Usages took 9ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-17 10:54:14,575 [thread 249]   INFO - .diagnostic.PerformanceWatcher - Find Usages took 8ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-17 10:55:39,892 [thread 249]   INFO - .diagnostic.PerformanceWatcher - Find Usages took 12ms; general responsiveness: ok; EDT responsiveness: ok 
2017-08-17 10:57:23,837 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-17 10:57:23,838 [st Monitor]   INFO - id.tools.idea.ddms.DevicePanel - Device disconnected: oneplus-one_a2003-192.168.51.17:5555 
2017-08-17 10:57:23,838 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-17 10:57:23,838 [st Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device disconnected: 192.168.51.17:5555 
2017-08-17 10:57:23,838 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-17 10:57:23,838 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-17 10:57:23,838 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-17 10:57:23,838 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-17 10:57:23,838 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-17 10:57:23,838 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-17 10:57:23,839 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-17 10:57:23,839 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-17 10:57:23,839 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-17 10:57:23,839 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-17 10:57:23,839 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-17 10:57:23,839 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-17 10:57:23,839 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-17 10:57:23,839 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-17 10:57:23,839 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-17 10:57:23,839 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
2017-08-17 10:57:23,840 [   Monitor]   INFO - mpl.AdbDeviceFileSystemService - Device changed: 192.168.51.17:5555 
